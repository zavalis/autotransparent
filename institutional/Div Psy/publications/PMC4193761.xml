<?xml version="1.0" encoding="UTF-8"?>
<OAI-PMH xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
  <responseDate>2023-02-07T13:07:41Z</responseDate>
  <request verb="GetRecord" identifier="oai:pubmedcentral.nih.gov:4193761" metadataPrefix="pmc">https:/www.ncbi.nlm.nih.gov/pmc/oai/oai.cgi</request>
  <GetRecord>
    <record>
      <header>
        <identifier>oai:pubmedcentral.nih.gov:4193761</identifier>
        <datestamp>2014-10-14</datestamp>
        <setSpec>plosone</setSpec>
        <setSpec>pmc-open</setSpec>
      </header>
      <metadata>
        <article xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="https://jats.nlm.nih.gov/ns/archiving/1.3/ https://jats.nlm.nih.gov/archiving/1.3/xsd/JATS-archivearticle1-3.xsd" article-type="research-article">
          <front>
            <journal-meta>
              <journal-id journal-id-type="nlm-ta">PLoS One</journal-id>
              <journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id>
              <journal-id journal-id-type="publisher-id">plos</journal-id>
              <journal-id journal-id-type="pmc">plosone</journal-id>
              <journal-title-group>
                <journal-title>PLoS ONE</journal-title>
              </journal-title-group>
              <issn pub-type="epub">1932-6203</issn>
              <publisher>
                <publisher-name>Public Library of Science</publisher-name>
                <publisher-loc>San Francisco, USA</publisher-loc>
              </publisher>
            </journal-meta>
            <article-meta>
              <article-id pub-id-type="accession">PMC4193761</article-id>
              <article-id pub-id-type="pmcid">PMC4193761</article-id>
              <article-id pub-id-type="pmc-uid">4193761</article-id>
              <article-id pub-id-type="pmid">25303102</article-id>
              <article-id pub-id-type="pmid">25303102</article-id>
              <article-id pub-id-type="publisher-id">PONE-D-14-19288</article-id>
              <article-id pub-id-type="doi">10.1371/journal.pone.0108590</article-id>
              <article-categories>
                <subj-group subj-group-type="heading">
                  <subject>Research Article</subject>
                </subj-group>
                <subj-group subj-group-type="Discipline-v2">
                  <subject>Biology and Life Sciences</subject>
                  <subj-group>
                    <subject>Biophysics</subject>
                    <subj-group>
                      <subject>Biophysical Simulations</subject>
                    </subj-group>
                  </subj-group>
                  <subj-group>
                    <subject>Computational Biology</subject>
                    <subj-group>
                      <subject>Computational Neuroscience</subject>
                      <subj-group>
                        <subject>Artificial Neural Networks</subject>
                        <subject>Single Neuron Function</subject>
                      </subj-group>
                    </subj-group>
                  </subj-group>
                  <subj-group>
                    <subject>Neuroscience</subject>
                    <subj-group>
                      <subject>Neural Networks</subject>
                      <subject>Neuronal Tuning</subject>
                    </subj-group>
                  </subj-group>
                </subj-group>
                <subj-group subj-group-type="Discipline-v2">
                  <subject>Computer and Information Sciences</subject>
                  <subj-group>
                    <subject>Computing Systems</subject>
                    <subj-group>
                      <subject>Analog Computing</subject>
                      <subject>Hybrid Computing</subject>
                    </subj-group>
                  </subj-group>
                </subj-group>
                <subj-group subj-group-type="Discipline-v2">
                  <subject>Physical Sciences</subject>
                  <subj-group>
                    <subject>Physics</subject>
                  </subj-group>
                </subj-group>
              </article-categories>
              <title-group>
                <article-title>Characterization and Compensation of Network-Level Anomalies in Mixed-Signal Neuromorphic Modeling Platforms</article-title>
                <alt-title alt-title-type="running-head">Network-Level Anomalies in Neuromorphic Platforms</alt-title>
              </title-group>
              <contrib-group>
                <contrib contrib-type="author">
                  <name>
                    <surname>Petrovici</surname>
                    <given-names>Mihai A.</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff1">
                    <sup>1</sup>
                  </xref>
                  <xref ref-type="corresp" rid="cor1">
                    <sup>*</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Vogginger</surname>
                    <given-names>Bernhard</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff2">
                    <sup>2</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Müller</surname>
                    <given-names>Paul</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff1">
                    <sup>1</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Breitwieser</surname>
                    <given-names>Oliver</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff1">
                    <sup>1</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Lundqvist</surname>
                    <given-names>Mikael</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff3">
                    <sup>3</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Muller</surname>
                    <given-names>Lyle</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff4">
                    <sup>4</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Ehrlich</surname>
                    <given-names>Matthias</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff2">
                    <sup>2</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Destexhe</surname>
                    <given-names>Alain</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff4">
                    <sup>4</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Lansner</surname>
                    <given-names>Anders</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff3">
                    <sup>3</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Schüffny</surname>
                    <given-names>René</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff2">
                    <sup>2</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Schemmel</surname>
                    <given-names>Johannes</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff1">
                    <sup>1</sup>
                  </xref>
                </contrib>
                <contrib contrib-type="author">
                  <name>
                    <surname>Meier</surname>
                    <given-names>Karlheinz</given-names>
                  </name>
                  <xref ref-type="aff" rid="aff1">
                    <sup>1</sup>
                  </xref>
                </contrib>
              </contrib-group>
              <aff id="aff1">
                <label>1</label>
                <addr-line>Ruprecht-Karls-Universität Heidelberg, Kirchhoff Institute for Physics, Heidelberg, Germany</addr-line>
              </aff>
              <aff id="aff2">
                <label>2</label>
                <addr-line>Technische Universität Dresden, Institute of Circuits and Systems, Dresden, Germany</addr-line>
              </aff>
              <aff id="aff3">
                <label>3</label>
                <addr-line>Department of Computational Biology, School of Computer Science and Communication, Stockholm University and Royal Institute of Technology, Stockholm, Sweden</addr-line>
              </aff>
              <aff id="aff4">
                <label>4</label>
                <addr-line>CNRS, Unité de Neuroscience, Information et Complexité, Gif sur Yvette, France</addr-line>
              </aff>
              <contrib-group>
                <contrib contrib-type="editor">
                  <name>
                    <surname>Cymbalyuk</surname>
                    <given-names>Gennady</given-names>
                  </name>
                  <role>Editor</role>
                  <xref ref-type="aff" rid="edit1"/>
                </contrib>
              </contrib-group>
              <aff id="edit1">
                <addr-line>Georgia State University, United States of America</addr-line>
              </aff>
              <author-notes>
                <corresp id="cor1">* E-mail: <email>mpedro@kip.uni-heidelberg.de</email></corresp>
                <fn fn-type="COI-statement">
                  <p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p>
                </fn>
                <fn fn-type="con">
                  <p>Conceived and designed the experiments: MAP BV PM OB. Performed the experiments: MAP BV PM OB ML LM ME. Analyzed the data: MAP BV PM OB. Contributed reagents/materials/analysis tools: MAP BV PM OB ML LM ME AD AL RS JS KM. Wrote the paper: MAP BV PM OB ML LM ME AD AL RS JS KM.</p>
                </fn>
              </author-notes>
              <pub-date pub-type="collection">
                <year>2014</year>
              </pub-date>
              <pub-date pub-type="epub">
                <day>10</day>
                <month>10</month>
                <year>2014</year>
              </pub-date>
              <volume>9</volume>
              <issue>10</issue>
              <elocation-id>e108590</elocation-id>
              <history>
                <date date-type="received">
                  <day>29</day>
                  <month>4</month>
                  <year>2014</year>
                </date>
                <date date-type="accepted">
                  <day>22</day>
                  <month>8</month>
                  <year>2014</year>
                </date>
              </history>
              <permissions>
                <copyright-statement>© 2014 Petrovici et al</copyright-statement>
                <copyright-year>2014</copyright-year>
                <copyright-holder>Petrovici et al</copyright-holder>
                <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
                  <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are properly credited.</license-p>
                </license>
              </permissions>
              <abstract>
                <p>Advancing the size and complexity of neural network models leads to an ever increasing demand for computational resources for their simulation. Neuromorphic devices offer a number of advantages over conventional computing architectures, such as high emulation speed or low power consumption, but this usually comes at the price of reduced configurability and precision. In this article, we investigate the consequences of several such factors that are common to neuromorphic devices, more specifically limited hardware resources, limited parameter configurability and parameter variations due to fixed-pattern noise and trial-to-trial variability. Our final aim is to provide an array of methods for coping with such inevitable distortion mechanisms. As a platform for testing our proposed strategies, we use an executable system specification (ESS) of the BrainScaleS neuromorphic system, which has been designed as a universal emulation back-end for neuroscientific modeling. We address the most essential limitations of this device in detail and study their effects on three prototypical benchmark network models within a well-defined, systematic workflow. For each network model, we start by defining quantifiable functionality measures by which we then assess the effects of typical hardware-specific distortion mechanisms, both in idealized software simulations and on the ESS. For those effects that cause unacceptable deviations from the original network dynamics, we suggest generic compensation mechanisms and demonstrate their effectiveness. Both the suggested workflow and the investigated compensation mechanisms are largely back-end independent and do not require additional hardware configurability beyond the one required to emulate the benchmark networks in the first place. We hereby provide a generic methodological environment for configurable neuromorphic devices that are targeted at emulating large-scale, functional neural networks.</p>
              </abstract>
              <funding-group>
                <funding-statement>This research was supported by EU grant #269921 (BrainScaleS) and the Manfred Stärk Foundation. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
              </funding-group>
              <counts>
                <page-count count="30"/>
              </counts>
              <custom-meta-group>
                <custom-meta id="data-availability">
                  <meta-name>Data Availability</meta-name>
                  <meta-value>The authors confirm that all data underlying the findings are fully available without restriction. The three benchmark models, the performed simulations, as well as the analysis and compensation methods are fully described in the manuscript and the supporting information. For the original L2/3 network with detailed neuron and synapse models, we provide the complete simulation data at: <ext-link ext-link-type="uri" xlink:href="http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_fit_data.tar.gz">http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_fit_data.tar.gz</ext-link>\\ The executable system specification of the BrainScaleS wafer-scale neuromorphic hardware as used for the simulations in this article is provided on a Linux live-system available at: <ext-link ext-link-type="uri" xlink:href="http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_ess_live_system.iso">http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_ess_live_system.iso</ext-link>.</meta-value>
                </custom-meta>
              </custom-meta-group>
            </article-meta>
            <notes>
              <title>Data Availability</title>
              <p>The authors confirm that all data underlying the findings are fully available without restriction. The three benchmark models, the performed simulations, as well as the analysis and compensation methods are fully described in the manuscript and the supporting information. For the original L2/3 network with detailed neuron and synapse models, we provide the complete simulation data at: <ext-link ext-link-type="uri" xlink:href="http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_fit_data.tar.gz">http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_fit_data.tar.gz</ext-link>\\ The executable system specification of the BrainScaleS wafer-scale neuromorphic hardware as used for the simulations in this article is provided on a Linux live-system available at: <ext-link ext-link-type="uri" xlink:href="http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_ess_live_system.iso">http://brainscales.kip.uni-heidelberg.de/largePublicContent/plos_one_2014_ess_live_system.iso</ext-link>.</p>
            </notes>
          </front>
          <body>
            <sec id="s1">
              <title>Introduction</title>
              <sec id="s1a">
                <title>1.1 Modeling and Computational Neuroscience</title>
                <p>The limited availability of detailed biological data has always posed a major challenge to the advance of neuroscientific understanding. The formulation of theories about information processing in the brain has therefore been predominantly model-driven, with much freedom of choice in model architecture and parameters. As more powerful mathematical and computational tools became available, increasingly detailed and complex cortical models have been proposed. However, because of the manifest nonlinearity and sheer complexity of interactions that take place in the nervous system, analytically treatable ensemble-based models can only partly cover the vast range of activity patterns and behavioral phenomena that are characteristic for biological nervous systems <xref rid="pone.0108590-Laing1" ref-type="bibr">[1]</xref>. The high level of model complexity often required for computational proficiency and biological plausibility has led to a rapid development of the field of computational neuroscience, which focuses on the simulation of network models as a powerful complement to the search for analytic solutions <xref rid="pone.0108590-Brette1" ref-type="bibr">[2]</xref>.</p>
                <p>The feasibility of the computational approach has been facilitated by the development of the hardware devices used to run neural network simulations. The brisk pace at which available processing speed has been increasing over the past few decades, as allegorized by Moore's Law, as well as the advancement of computer architectures in general, closely correlate to the size and complexity of simulated models. Today, network models with tens of thousands of neurons are routinely simulated on desktop machines, with supercomputers allowing several orders of magnitude more <xref rid="pone.0108590-Djurfeldt1" ref-type="bibr">[3]</xref>, <xref rid="pone.0108590-Helias1" ref-type="bibr">[4]</xref>. However, as many authors have pointed out (see e.g. <xref rid="pone.0108590-Morrison1" ref-type="bibr">[5]</xref>, <xref rid="pone.0108590-Brette1" ref-type="bibr">[2]</xref>), the inherently massively parallel structure of biological neural networks becomes progressively difficult to map to conventional architectures based on digital general-purpose CPUs, as network size and complexity increase.</p>
                <p>Conventional simulation becomes especially restrictive when considering long time scales, such as are required for modeling long-term network dynamics or when performing statistics-intensive experiments. Additionally, power consumption can quickly become prohibitive at these scales <xref rid="pone.0108590-Bergman1" ref-type="bibr">[6]</xref>, <xref rid="pone.0108590-Hasler1" ref-type="bibr">[7]</xref>.</p>
              </sec>
              <sec id="s1b">
                <title>1.2 Neuromorphic Hardware</title>
                <p>The above issues can, however, be eluded by reconsidering the fundamental design principles of conventional computer systems. The core idea of the so-called neuromorphic approach is to implement features (such as connectivity) or components (neurons, synapses) of neural networks directly <italic>in silico</italic>: instead of calculating the dynamics of neural networks, neuromorphic devices contain physical representations of the networks themselves, behaving, by design, according to the same dynamic laws. An immediate advantage of this approach is its inherent parallelism (emulated network components evolve in parallel, without needing to wait for clock signals or synchronization), which is particularly advantageous in terms of scalability. First proposed by Mead in the 1980s <xref rid="pone.0108590-Mead1" ref-type="bibr">[8]</xref>–<xref rid="pone.0108590-Mead3" ref-type="bibr">[10]</xref>, the neuromorphic approach has since delivered a multitude of successful applications <xref rid="pone.0108590-Renaud1" ref-type="bibr">[11]</xref>–<xref rid="pone.0108590-McDonnell1" ref-type="bibr">[14]</xref>.</p>
                <p>By far the largest number of neuromorphic systems developed thus far are highly application-specific, such as visual processing systems <xref rid="pone.0108590-SerranoGotarredona1" ref-type="bibr">[15]</xref>–<xref rid="pone.0108590-Delbrck1" ref-type="bibr">[18]</xref> or robotic motor control devices <xref rid="pone.0108590-Lewis1" ref-type="bibr">[19]</xref>. Several groups have focused on more biological aspects, such as the neuromorphic implementation of biologically-inspired self-organization and learning <xref rid="pone.0108590-Hfliger1" ref-type="bibr">[20]</xref>, <xref rid="pone.0108590-Mitra1" ref-type="bibr">[21]</xref>, detailed replication of Hodgkin-Huxley neurons <xref rid="pone.0108590-Zou1" ref-type="bibr">[22]</xref> or hybrid systems interfacing analog neural networks with living neural tissue <xref rid="pone.0108590-Bontorin1" ref-type="bibr">[23]</xref>.</p>
                <p>These devices, however, being rather specialized, can not match the flexibility of traditional software simulations. Adding configurability comes at a high price in terms of hardware resources, due to various hardware-specific limitations, such as physical size and essentially two-dimensional structure. So far there have only been few attempts at realizing highly configurable hardware emulators <xref rid="pone.0108590-Indiveri3" ref-type="bibr">[24]</xref>–<xref rid="pone.0108590-Furber1" ref-type="bibr">[28]</xref>. This approach alone, however, does not completely resolve the computational bottleneck of software simulators, as scaling neuromorphic neural networks up in size becomes non-trivial when considering bandwidth limitations between multiple interconnected hardware devices <xref rid="pone.0108590-CostasSantos1" ref-type="bibr">[29]</xref>–<xref rid="pone.0108590-SerranoGotarredona2" ref-type="bibr">[33]</xref>.</p>
              </sec>
              <sec id="s1c">
                <title>1.3 The BrainScaleS Hardware System</title>
                <p>A very efficient way of interconnecting multiple VLSI (Very Large Scale Integration) modules is offered by so-called wafer-scale integration. This implies the realization of both the modules in question and their communication infrastructure on the same silicon wafer, the latter being done in a separate, post-processing step. The BrainScaleS wafer-scale hardware <xref rid="pone.0108590-Schemmel1" ref-type="bibr">[27]</xref> uses this process to achieve a high communication bandwidth between individual neuromorphic cores on a wafer, thereby allowing a highly flexible connection topology of the emulated network. Together with the large available parameter space for neurons and synapses, this creates a neuromorphic architecture that is comparable in flexibility with standard simulation software. At the same time, it provides a powerful alternative to software simulators by avoiding the abovementioned computational bottleneck, in particular owing to the fact that the emulation duration does not scale with the size of the emulated network, since individual netowrk components operate, inherently, in parallel. An additional benefit which is inherent to this specific VLSI implementation is the high acceleration with respect to biological real-time, which is facilitated by the high on-wafer bandwidth. This allows investigating the evolution of network dynamics over long periods of time which would otherwise be strongly prohibitive for software simulations.</p>
              </sec>
              <sec id="s1d">
                <title>1.4 Hardware-Induced Distortions: A Systematic Investigation</title>
                <p>Along with the many advantages it offers, the neuromorphic approach also comes with limitations of its own. These have various causes that lie both in the hardware itself and the control software. We will later identify these causes, which we henceforth refer to as <italic>distortion mechanisms</italic>. The neural network emulated by the hardware device can therefore differ significantly from the original model, be it in terms of pulse transmission, connectivity between populations or individual neuron or synapse parameters. We refer to all the changes in network dynamics (i.e., deviations from the original behavior defined by software simulations) caused by hardware-specific effects as <italic>hardware-induced distortions</italic>.</p>
                <p>Due to the complexity of state-of-the-art neuromorphic platforms and their control software, as well as the vast landscape of emulable neural network models, a thorough and systematic approach is essential for providing reliable information about causal mechanisms and functional effects of hardware-induced distortions in model dynamics and for ultimately designing effective compensation methods. In this article, we design and perform such a systematic analysis and compensation for several hardware-specific distortion mechanisms.</p>
                <p>First and foremost, we identify and quantify the most important sources of model distortions. We then proceed to investigate their effect on network functionality. In order to cover a wide range of possible network dynamics, we have chosen three very different cortical network models to serve as benchmarks. In particular, these models implement several prototypical cortical paradigms of computation, relying on winner-take-all structures (attractor networks), precise spike timing correlations (synfire chains) or balanced activity (self-sustained asynchronous irregular states).</p>
                <p>For every emulated model, we define a set of functionality criteria, based on specific aspects of the network dynamics. This set should be complex enough to capture the characteristic network behavior, from a microscopic (e.g., membrane potentials) to a mesoscopic level (e.g., firing rates) and, where suitable, computational performance at a specific task. Most importantly, these criteria need to be precisely quantified, in order to facilitate an accurate comparison between software simulations and hardware emulations or between different simulation/emulation back-ends in general. The chosen functionality criteria should also be measured, if applicable, for various relevant realizations (i.e. for different network sizes, numbers of functional units etc.) of the considered network.</p>
                <p>Because multiple distortion mechanisms occur simultaneously in hardware emulations, it is often difficult, if not impossible, to understand the relationship between the observed effects (i.e., modifications in the network dynamics) and their potential underlying causes. Therefore, we investigate the effects of individual distortion mechanisms by implementing them, separately, in software simulations. As before, we perform these analyses over a wide range of network realizations, since - as we will show later - these may strongly influence the effects of the examined mechanisms.</p>
                <p>After having established the relationship between structural distortions caused by hardware-specific factors and their consequences for network dynamics, we demonstrate various compensation techniques in order to restore the original network behavior.</p>
                <p>In the final stage, for each of the studied models, we simulate an implementation on the hardware back-end by running an appropriately configured executable system specification, which includes the full panoply of hardware-specific distortion mechanisms. Using the proposed compensation techniques, we then attempt to deal with all these effects simultaneously. The results from these experiments are then compared to results from software simulations, thus allowing a comprehensive assertion of the effectivity of our proposed compensation techniques, as well as of the capabilities and limitations of the neuromorphic emulation device.</p>
              </sec>
              <sec id="s1e">
                <title>1.5 Article Structure</title>
                <p>In section Neuromorphic testbench and investigated distortion mechanisms, we describe our testbench neuromorphic modeling platform with its most relevant components, as well as the essential layers of the operation workflow. We continue by explaining the causes of various network-level distortions that are expected to be common for similar mixed-signal neuromorphic devices. In the same section, we also introduce the executable system specification of the hardware, which we later use for experimental investigations.</p>
                <p>Section Hardware-induced distortions and compensation strategies contains the description of the three benchmark models. We start the section on each of the models with a short summary of all the relevant findings. We then describe its architecture and characteristic aspects of its dynamics which we later use as quality controls. We continue by discussing the effects of individual hardware-specific distortion mechanisms as observed in software simulations, propose various compensation strategies and investigate their efficacy in restoring the functionality of the network model in question. Subsequently, we apply these methods to large-scale neuromorphic emulations and examine the results.</p>
                <p>Finally, we summarize and discuss our findings in the Conclusions section.</p>
              </sec>
            </sec>
            <sec id="s2">
              <title>Neuromorphic Testbench and Investigated Distortion Mechanisms</title>
              <p>In this section we introduce the BrainScaleS neuromorphic wafer-scale hardware system and its executable system specification, henceforth called the ESS, as the testbench for our studies. The system's hardware and software components are only described on an abstract level, while highlighting the mechanisms responsible for distortions of the emulated networks. Finally, we identify the three most relevant causes of distortion as being synapse loss, synaptic weight noise and non-configurable axonal delays.</p>
              <sec id="s2a">
                <title>2.1 The BrainScaleS Wafer-Scale Hardware</title>
                <p><xref ref-type="fig" rid="pone-0108590-g001">Figure 1</xref> shows a 3D-rendered image of the BrainScaleS wafer-scale hardware system: the 8 inch silicon wafer contains 196 608 neurons and 44 million plastic synapses implemented in mixed-signal VLSI circuitry. Due to the high integration of the circuits, the capacitances and thus the intrinsic time constants are small, so that neural dynamics take place approximately 10 000 faster than biological real time. The principal building block of the wafer is the so-called HICANN (High Input Count Analog Neural Network) chip <xref rid="pone.0108590-Schemmel1" ref-type="bibr">[27]</xref>, <xref rid="pone.0108590-Schemmel2" ref-type="bibr">[34]</xref>. During chip fabrication one is limited to a maximum area that can be simultaneously exposed during photolitography, a reticle, thus usually such a wafer is cut into individual chips after production. For the BrainScaleS system, however, the wafer is left intact, and additional wiring is applied onto the wafer's surface in a post-processing step. This process establishes connections betwen all 384 HICANN blocks that allow a very high bandwidth for on-wafer pulse-event communication <xref rid="pone.0108590-Schemmel2" ref-type="bibr">[34]</xref>. The neuromorphic wafer is accompanied by a stack of digital communication modules for the connection of the wafer to the host PC and to other wafers (<xref ref-type="fig" rid="pone-0108590-g002">Figure 2</xref> and section 2.1.2).</p>
                <fig id="pone-0108590-g001" orientation="portrait" position="float">
                  <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g001</object-id>
                  <label>Figure 1</label>
                  <caption>
                    <title>The BrainScaleS wafer-scale hardware system.</title>
                    <p>(A) Wafer comprising HICANN building blocks and on-wafer communication infrastructure covered by an aluminium plate, (B) digital inter-wafer and wafer-host communication modules. Also visible: mechanical and electrical support.</p>
                  </caption>
                  <graphic xlink:href="pone.0108590.g001"/>
                </fig>
                <fig id="pone-0108590-g002" orientation="portrait" position="float">
                  <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g002</object-id>
                  <label>Figure 2</label>
                  <caption>
                    <title>Architecture of the BrainScaleS wafer-scale hardware system.</title>
                    <p>Left: The HICANN building block has two symmetric halves with synapse arrays and neuron circuits. Neural activity is transported horizontally (blue) and vertically (red) via asynchronous buses that span over the entire wafer. Exemplary spike paths are shown in yellow on the HICANN: The incoming spike packet is routed to the synapse drivers. In the event that a neuron spikes, it emits a spike packet back into the routing network. Right: Off-wafer connectivity is established by a hierarchical packed-based network via DNCs and FPGAs. It interfaces the on-wafer routing buses on the HICANN building blocks. Several wafer modules can be interconnected using routing functionality between the FPGAs.</p>
                  </caption>
                  <graphic xlink:href="pone.0108590.g002"/>
                </fig>
                <sec id="s2a1">
                  <title>2.1.1 HICANN building block</title>
                  <p>On the HICANN chip (lower left of <xref ref-type="fig" rid="pone-0108590-g002">Figure 2</xref>), one can recognize two symmetric blocks which hold the analog core modules. The upper block is depicted in detail in <xref ref-type="fig" rid="pone-0108590-g003">Figure 3:</xref> Most of the area is occupied by the synapse array with 224 rows and 256 columns. All synapses in a column are connected to one of the 256 neuron circuits located at the center of the chip. For each two adjacent synapse rows, there is one <italic>synapse driver</italic> that forms the input for pre-synaptic pulses to the synapse array. Synapse drivers are evenly distributed to the left and right side of one synapse array (56 per side). A grid of horizontal and vertical buses enables the routing of spikes from neuron circuits to synapse drivers.</p>
                  <fig id="pone-0108590-g003" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g003</object-id>
                    <label>Figure 3</label>
                    <caption>
                      <title>Components and connectivity of the HICANN building block.</title>
                      <p>The figure shows the upper block of the HICANN chip: most of the area is occupied by the synapse array with 256 columns and 224 rows. Each synapse column is connected to one of 256 neuron circuits, from which up to 64 can be interconnected to form larger neurons with up to 14336 input synapses. When a neuron fires, a 6-bit address representing this neuron is generated and injected into one of eight accessible horizontal buses after passing a merger stage. Via two statically configurable switches (crossbar rsp. synapse driver switch) these pulses are routed to the synapse drivers, which operate two synapse rows each. Every synapse is configured to a specific 6-bit address, so that, when a pre-synaptic pulse with matching address arrives, a post-synaptic conductance course is generated at the associated neuron circuit. Both switch matrices are sparse, i.e. configurable switches do not exist at all crossings of horizontal and vertical lines, but e.g. only at every 8th crossing (Sparseness S = 8). On the wafer, the horizontal and vertical buses, as well as the horizontal lines connected to the synapse drivers do not end at the HICANN borders, but go beyond them.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g003"/>
                  </fig>
                  <p>Up to 64 neuron circuits can be interconnected to form neurons with up to 14336 synapses. The neurons emulate the dynamics of the Adaptive-Exponential Integrate-and-Fire model (AdEx) <xref rid="pone.0108590-Brette2" ref-type="bibr">[35]</xref> in analog circuitry, defined by equations for the membrane voltage <italic>V</italic>, the adaption current <inline-formula><inline-graphic xlink:href="pone.0108590.e001.jpg"/></inline-formula> and a reset condition that applies when a spike is triggered:<disp-formula id="pone.0108590.e002"><graphic xlink:href="pone.0108590.e002.jpg" position="anchor" orientation="portrait"/><label>(1)</label></disp-formula>
<disp-formula id="pone.0108590.e003"><graphic xlink:href="pone.0108590.e003.jpg" position="anchor" orientation="portrait"/><label>(2)</label></disp-formula>
<disp-formula id="pone.0108590.e004"><graphic xlink:href="pone.0108590.e004.jpg" position="anchor" orientation="portrait"/><label>(3)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0108590.e005.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e006.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e007.jpg"/></inline-formula> denote the membrane capacitance, leak conductance and leak potential, respectively, <inline-formula><inline-graphic xlink:href="pone.0108590.e008.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e009.jpg"/></inline-formula> represent the spike initiation threshold and the threshold slope factor and <inline-formula><inline-graphic xlink:href="pone.0108590.e010.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e011.jpg"/></inline-formula> represent the adaptation time constant and coupling parameter. When <inline-formula><inline-graphic xlink:href="pone.0108590.e012.jpg"/></inline-formula> reaches a certain threshold value <inline-formula><inline-graphic xlink:href="pone.0108590.e013.jpg"/></inline-formula>, a spike is emitted and the membrane potential is reset to <inline-formula><inline-graphic xlink:href="pone.0108590.e014.jpg"/></inline-formula>. At the same time, the adaptation variable is increased by a fixed amount <inline-formula><inline-graphic xlink:href="pone.0108590.e015.jpg"/></inline-formula>, thereby allowing for spike-frequency adaptation. An absolute refractory mechanism is supported by clamping <inline-formula><inline-graphic xlink:href="pone.0108590.e016.jpg"/></inline-formula> to its reset value for the refractory time <inline-formula><inline-graphic xlink:href="pone.0108590.e017.jpg"/></inline-formula>. The generated spikes are transmitted digitally to synapse drivers (analog multiplier), synapses (digital multiplier) and finally other neurons, where postsynaptic conductance courses are generated and summed up linearly, resulting in the synaptic current <inline-formula><inline-graphic xlink:href="pone.0108590.e018.jpg"/></inline-formula>:</p>
                  <p>
                    <disp-formula id="pone.0108590.e019">
                      <graphic xlink:href="pone.0108590.e019.jpg" position="anchor" orientation="portrait"/>
                      <label>(4)</label>
                    </disp-formula>
                    <disp-formula id="pone.0108590.e020">
                      <graphic xlink:href="pone.0108590.e020.jpg" position="anchor" orientation="portrait"/>
                      <label>(5)</label>
                    </disp-formula>
                  </p>
                  <p>Here, <inline-formula><inline-graphic xlink:href="pone.0108590.e021.jpg"/></inline-formula> represents the synaptic conductance and <inline-formula><inline-graphic xlink:href="pone.0108590.e022.jpg"/></inline-formula> the synaptic reversal potential of the <inline-formula><inline-graphic xlink:href="pone.0108590.e023.jpg"/></inline-formula>-th synapse, <inline-formula><inline-graphic xlink:href="pone.0108590.e024.jpg"/></inline-formula> the time constant of the exponential decay and <inline-formula><inline-graphic xlink:href="pone.0108590.e025.jpg"/></inline-formula> the synaptic weight. In the hardware implementation <xref rid="pone.0108590-Millner1" ref-type="bibr">[36]</xref>, each neuron features two of such synaptic input circuits, which are typically used for excitatory and inhibitory input. Nearly all parameters of the neuron model and the synaptic input circuits are individually adjustable by means of analog storage banks based on floating gate technology <xref rid="pone.0108590-Lande1" ref-type="bibr">[37]</xref>. In the hardware neuron, both the circuit for the adaption mechanism and the exponential term circuit can be effectively disconnected from the membrane capacitance, such that a simple Leaky Integrate-and-Fire (LIF) model can also be emulated. The hardware membrane capacitance is fixed to one of two possible values. As the parameters controlling the temporal dynamics of the neuron such as <inline-formula><inline-graphic xlink:href="pone.0108590.e026.jpg"/></inline-formula> and the time constants are configurable within a wide range, the hardware is able to run at a variable speedup factor (<inline-formula><inline-graphic xlink:href="pone.0108590.e027.jpg"/></inline-formula>) compared to biological real time. In particular, the translation of the membrane capacitance between the hardware and the biological domain can be chosen freely due to the independent configurability of both membrane and synaptic conductances, thereby effectively allowing the emulation of point neurons of arbitrary size - within the limits imposed by the hardware parameter ranges.</p>
                  <p>In contrast to neurons, where each parameter is fully configurable within the specified ranges, the <italic>synaptic weights</italic> are adjustable by a combination of analog and digital memories. The synaptic weight <inline-formula><inline-graphic xlink:href="pone.0108590.e028.jpg"/></inline-formula> is proportional to a row-wise adjustable analog parameter <inline-formula><inline-graphic xlink:href="pone.0108590.e029.jpg"/></inline-formula> and to a 4-bit digital weight specific to each synapse. The <inline-formula><inline-graphic xlink:href="pone.0108590.e030.jpg"/></inline-formula> of two adjacent rows can be configured to be a fixed multiple of each other. This way, two synapses of adjacent rows can be combined to offer a weight resolution of 8 bits, at the cost of halving the number of synapses for this synapse driver.</p>
                  <p><italic>Long-term learning</italic> is incorporated in every synapse through spike-timing-dependent plasticity (STDP) <xref rid="pone.0108590-Bi1" ref-type="bibr">[38]</xref>. The implemented STDP mechanism follows a pairwise update rule with programmable update functions <xref rid="pone.0108590-Morrison2" ref-type="bibr">[39]</xref>. As STDP is not contained in the models investigated in this article, we refer to <xref rid="pone.0108590-Brderle1" ref-type="bibr">[40]</xref>–<xref rid="pone.0108590-Schemmel4" ref-type="bibr">[42]</xref> for details on the hardware implementation and to <xref rid="pone.0108590-Pfeil1" ref-type="bibr">[43]</xref> for an applicability study of these circuits.</p>
                  <p>In contrast to the long-term learning, the implemented <italic>short-term plasticity</italic> mechanism (STP) decays over several hundreds of milliseconds. It is motivated by the phenomenological model by <xref rid="pone.0108590-Markram1" ref-type="bibr">[44]</xref> and depends only on the pre-synaptic activity, therefore being implemented in the synapse driver. For every incoming spike, a synapse only has access to a portion <inline-formula><inline-graphic xlink:href="pone.0108590.e031.jpg"/></inline-formula> of the recovered partition <inline-formula><inline-graphic xlink:href="pone.0108590.e032.jpg"/></inline-formula> of its total synaptic weight <inline-formula><inline-graphic xlink:href="pone.0108590.e033.jpg"/></inline-formula>, which then instantly decreases by a factor <inline-formula><inline-graphic xlink:href="pone.0108590.e034.jpg"/></inline-formula> and recovers slowly along an exponential with the time constant <inline-formula><inline-graphic xlink:href="pone.0108590.e035.jpg"/></inline-formula>, thus emulating synaptic depression. Facilitation is implemented by replacing the fixed <inline-formula><inline-graphic xlink:href="pone.0108590.e036.jpg"/></inline-formula> with a running variable <inline-formula><inline-graphic xlink:href="pone.0108590.e037.jpg"/></inline-formula>, which increases with every incoming spike by an amount <inline-formula><inline-graphic xlink:href="pone.0108590.e038.jpg"/></inline-formula> and then decays exponentially back to U with the time constant <inline-formula><inline-graphic xlink:href="pone.0108590.e039.jpg"/></inline-formula>:<disp-formula id="pone.0108590.e040"><graphic xlink:href="pone.0108590.e040.jpg" position="anchor" orientation="portrait"/><label>(6)</label></disp-formula>
<disp-formula id="pone.0108590.e041"><graphic xlink:href="pone.0108590.e041.jpg" position="anchor" orientation="portrait"/><label>(7)</label></disp-formula>
<disp-formula id="pone.0108590.e042"><graphic xlink:href="pone.0108590.e042.jpg" position="anchor" orientation="portrait"/><label>(8)</label></disp-formula>with <inline-formula><inline-graphic xlink:href="pone.0108590.e043.jpg"/></inline-formula> being the time interval between the <italic>n</italic>th and (<italic>n</italic>+1)st afferent spike. In contrast to the original Tsodyks-Markram (TSO) mechanism, the hardware implementation does not allow simultaneous depression and facilitation <xref rid="pone.0108590-Schemmel2" ref-type="bibr">[34]</xref>, <xref rid="pone.0108590-Bill1" ref-type="bibr">[45]</xref>. See section S1.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref> for details about the hardware implementation and the translation of the original model to the hardware STP.</p>
                  <p>All of the neuron and synapse parameters mentioned above are affected by fixed-pattern noise due to transistor-level mismatch in the manufacturing process. Additionally, the floating gate analog parameter storage reproduces the programmed voltage with a limited precision on each re-write. This leads to trial-to-trial variation for each experiment (see section S1.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref> for exemplary measurements). Limited configurability, such as the discretization of available synaptic weights, is another source for discrepancy between targeted and realized configuration. The trial-to-trial variability, which cannot be remedied by calibration (section 2.2), is assumed to be less than 30% (standard-deviation-to-mean ratio) for synaptic weights. Other neuron parameters are assumed to have a much smaller variability. <inline-formula><inline-graphic xlink:href="pone.0108590.e044.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e045.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e046.jpg"/></inline-formula> have a standard deviation of less than 1 mV in the biological domain (cf. section 2.2 and section S1.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref>). In this publication, we limit all investigations to the variation of synaptic weights, as they are assumed to be the dominant effect. To accomodate the total effect of trial-to-trial and fixed-pattern variation as well as parameter discretization, we simulate deviations of up to 50% (cf. section 2.4).</p>
                  <p>For technical details about the HICANN chip and its components we refer to <xref rid="pone.0108590-Schemmel1" ref-type="bibr">[27]</xref>, <xref rid="pone.0108590-Schemmel2" ref-type="bibr">[34]</xref>.</p>
                </sec>
                <sec id="s2a2">
                  <title>2.1.2 Communication infrastructure</title>
                  <p>The infrastructure for pulse communication in the wafer-scale system is supplied by a two-layer approach: While the on-wafer network routes pulses between neurons on the same wafer, the off-wafer network connects the wafer to the outside world, i.e. to the host PC or to other wafers.</p>
                  <p>The backbone of the <italic>on-wafer communication</italic> consists of a grid of horizontal and vertical buses enabling the transport of action potentials by a mixture of time division and space division multiplexing. Each HICANN building block contains 64 horizontal buses at its center and 128 vertical buses located on each side of the synapse blocks, as can be seen in <xref ref-type="fig" rid="pone-0108590-g003">Figure 3</xref>. A bus can carry the spikes of up to 64 source neurons by transmitting a serial 6-bit signal encoding the currently sending neuron (with an ID from 0 to 63). When a neuron fires, its pulse is first processed by one of eight priority encoders and finally injected into a horizontal bus after passing a merger stage. By enabling a static switch of a sparse crossbar between horizontal and vertical buses, the injected serial signal can be made available to a vertical bus next to the synapse array. Another sparse switch matrix allows to feed the signals from the vertical buses into the synapse array, more precisely into the synapse drivers which represent the data sinks of the routing network. Synapse drivers can be connected in a chain, forwarding their input to their top or bottom neighbours, thereby allowing to increase the number of synapse rows fed by the same routing bus. The bus lanes do not end at the HICANN border but run over the whole wafer by edge-connecting the HICANN building blocks (<xref ref-type="fig" rid="pone-0108590-g002">Figure 2</xref>). We note that, due to electrotechnical reasons, the switches could not be implemented as full matrices, thus their sparseness was chosen as a compromise still providing maximum flexibility for implementing various neural network topologies <xref rid="pone.0108590-Schemmel1" ref-type="bibr">[27]</xref>, <xref rid="pone.0108590-Fieres1" ref-type="bibr">[32]</xref>. Both the sparseness of the switches and the limited number of horizontal and vertical buses represent a possible restriction for the connectivity of network models. If an emulated network requires a connectivity that exceeds the on-wafer bus capacity, some synapses will be impossible to map to the wafer and will therefore be lost.</p>
                  <p>Pulse propagation delays in the routing network are small, distance-dependent and not configurable: the time between spike detection and the onset of a post-synaptic potential (PSP) has been measured as 120 ns for a recurrent connection on a HICANN. The additional time needed to transmit a pulse across the entire wafer is typically less than 100 ns <xref rid="pone.0108590-Schemmel2" ref-type="bibr">[34]</xref>, hence the overall delay sums up to 1.2–2.2 ms in the biological time domain, assuming a speedup factor of 10<sup>4</sup>. Also, in case of synchronous bursting of the neurons feeding one bus, some pulses are delayed with respect to others, as they are processed successively: A priority encoder handles the spikes of 64 hardware neurons with priority fixed by design. If several neurons have fired, the pulse of the neuron with highest priority is transmitted first to the connected horizontal bus. The priority encoder can process one pulse every two clock cycles (<inline-formula><inline-graphic xlink:href="pone.0108590.e047.jpg"/></inline-formula> ns), leading to an additional delay for the pulses with lower priority. In rare cases some pulses may be completely discarded, e.g., when the total rate of all 64 neurons feeding one bus exceeds 10 kHz for longer than 6.4 ms (in biological real-time).</p>
                  <p>A hierarchical packet-based network provides the infrastructure for <italic>off- and inter-wafer communication</italic>. All HICANNs on the wafer are connected to the surrounding system and to other wafers via 12 pulse communication subgroups (PCS). Each PCS consists of one FPGA (Field Programmable Gate Array) and 4 ASICs (Application Specific Integrated Circuits) that were designed for high-bandwidth pulse-event communication (so-called Digital Network Chips or DNCs). Being the only communication link to/from the wafer, the off-wafer network also transports the configuration and control information for all the circuits on the wafer. As depicted in <xref ref-type="fig" rid="pone-0108590-g002">Figure 2</xref>, the network is hierarchically organized: one FPGA is connected to four DNCs, each of which is connected to 8 HICANNs of a reticle. Each FPGA is also connected to the host PC and potentially to up to 4 other FPGAs. When used for pulse-event communication, an FPGA-DNC-HICANN connection supports a throughput of 40 Mevents/s <xref rid="pone.0108590-Scholze1" ref-type="bibr">[46]</xref> with a timing precision of 4 ns. In the biological time domain, this corresponds to monitoring the spikes of all 512 neurons on a HICANN firing with a mean rate of 8 Hz each with a resolution of 0.04 ms. The same bandwidth is available simultaneously in the opposite direction, allowing a flexible network stimulation with user-defined spiketrains. For each FPGA-DNC-HICANN connection there are 512 pulse addresses that have to be subdivided into blocks of 64 used for either stimulation or recording. For all technical details about the PCS, the FPGA design and the DNC, we refer to <xref rid="pone.0108590-Scholze2" ref-type="bibr">[47]</xref>–<xref rid="pone.0108590-Scholze3" ref-type="bibr">[49]</xref>.</p>
                  <p>Although the off-wafer communication interface allows the interconnection of multiple wafers, we restrict our studies here to the use of a single wafer.</p>
                </sec>
              </sec>
              <sec id="s2b">
                <title>2.2 Software Framework</title>
                <p>The utilized software stack <xref rid="pone.0108590-Brderle1" ref-type="bibr">[40]</xref> allows the user to define a network description and maps it to a hardware configuration.</p>
                <p>The network definition is accomplished by using PyNN <xref rid="pone.0108590-Davison1" ref-type="bibr">[50]</xref>, a simulator-independent API (Application Programming Interface) to describe spiking neural network models. It can interface to several simulation platforms such as NEURON <xref rid="pone.0108590-Hines1" ref-type="bibr">[51]</xref> or NEST <xref rid="pone.0108590-Eppler1" ref-type="bibr">[52]</xref> as well as to neuromorphic hardware platforms <xref rid="pone.0108590-Brderle2" ref-type="bibr">[53]</xref>, <xref rid="pone.0108590-Galluppi1" ref-type="bibr">[54]</xref>.</p>
                <p>The mapping process <xref rid="pone.0108590-Brderle1" ref-type="bibr">[40]</xref>, <xref rid="pone.0108590-Ehrlich1" ref-type="bibr">[55]</xref> translates the PyNN description of the neural network structure, as well as its neuron and synapse models and parameters, in several steps into a neuromorphic device configuration. This translation is constrained by the architecture of the device and its available resources.</p>
                <p>The first step of the mapping process is to allocate static structural neural network elements to particular neuromorphic components during the so-called <italic>placement</italic>. Subsequently, a <italic>routing</italic> step is executed for establishing connections in between the placed components. During the final <italic>parameter transformation</italic> step, all parameters of the network components (neurons and synapses) are translated into hardware parameters. First, the model parameters are transformed to the voltage and time domain of the hardware, taking into account the acceleration and the voltage range of 0 V to 1.8 V <xref rid="pone.0108590-Millner1" ref-type="bibr">[36]</xref>. Second, previously obtained <italic>calibration</italic> data is used to reduce mismatches between ideal neuromorphic circuitry behavior and real analogue signal hardware behavior.</p>
                <p>The objective of the mapping process is to find a configuration of the hardware that best reproduces the neural network experiment specified in PyNN. The most relevant constraints are sketched in the following:</p>
                <p>Each hardware neuron circuit has a limited number of 224 incoming synapses. By interconnecting several neuron circuits one can form “larger” neurons with more incoming synapses (Section 2.1.1), with the trade-off that the overall number of neurons is reduced. Still, each hardware synapse can not be used to implement a connection from an arbitrary neuron but only from a subset of neurons, namely the 64 source neurons whose pulses arrive at the corresponding synapse driver. For networks larger than 10 000 neurons it is the <italic>limited number of inputs</italic> to one HICANN that becomes even more restricting, as there are only 224 synapse drivers (cf. <xref ref-type="fig" rid="pone-0108590-g003">Figure 3</xref>), yielding a maximum of 14366 different source neurons for all neurons that are placed to the same HICANN. Hence, one objective of the mapping process is to reduce this number of source neurons per HICANN, thus increasing the number of realized synapses on the hardware. In general, this criterion is met when neurons with common pre-synaptic partners are placed onto the same HICANN and neurons with common targets inject their pulses into the same on-wafer routing bus.</p>
                <p>All of the above, as well as the limited number of on-wafer routing resources (section 2.1.2) make the mapping optimization an NP-hard problem. The used placement and routing algorithms, which improve upon the ones described in <xref rid="pone.0108590-Brderle1" ref-type="bibr">[40]</xref> and <xref rid="pone.0108590-Fieres1" ref-type="bibr">[32]</xref> but are far from being optimal, can minimize the effect of these constraints only to a certain degree. Thus, depending on the network model size, its connectivity, and the choice of the mapping algorithms, <italic>synapses are lost</italic> during the mapping process; in other words, some synapses of a network defined in PyNN will be inexistent in the corresponding network emulated on the hardware. For an estimation of the amount of synapse loss, we first scaled all three benchmark models to sizes between 1000 and 100 000 neurons and mapped them onto the hardware using a simple, not optimized placement strategy. The results strongly depend on the size and the connectivity structure of the emulated network. In order to allow a comprehensive discussion within this study, we then used various placement strategies, sometimes optimizing the mapping by hand to minimize the synapse loss, or purposely using a wasteful allocation of resources to generate synapse loss.</p>
              </sec>
              <sec id="s2c">
                <title>2.3 Executable System Specification (ESS)</title>
                <p>The ESS is a detailed simulation of the hardware platform <xref rid="pone.0108590-Brderle1" ref-type="bibr">[40]</xref>, <xref rid="pone.0108590-Ehrlich2" ref-type="bibr">[56]</xref> that replicates the topology and dynamics of the communication infrastructure as well as the analog synaptic and neuronal components.</p>
                <p>The simulation encompasses a numerical solution of the equations that govern the hardware neuron and synapse dynamics (<xref ref-type="disp-formula" rid="pone.0108590.e002">Equations 1</xref> to <xref ref-type="disp-formula" rid="pone.0108590.e020">5</xref> and Equations S1.1 to S1.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref>) and a detailed reproduction of the digital communication infrastructure at the level of individual spike transmission in logical hardware modules. The ESS is a <italic>specification</italic> of the hardware in the sense that its configuration space faithfully maps the possible interconnection topologies, parameter limits, parameter discretization and shared parameters. Being executable, the ESS also covers dynamic constraints, such as the consecutive processing of spikes which can lead to spike time jitter or spike loss. Variations in the analog circuits due to production variations are not simulated at transistor level but are rather artificially imposed on ideal hardware parameters. In this article, only synaptic weight noise is considered, as detailed in section 2.4. All of this allows to simultaneously capture the complex dynamic behavior of the hardware and comply with local bandwidth limitations, while allowing relatively quick simulations due to the high level of abstraction. Simulations on the ESS can be controlled using PyNN (Section 2.2), similarly to any other PyNN-compatible back-end. Both for the real hardware and for the ESS, the mapping process translates a PyNN network into a device configuration, which is then used as an input for the respective back-end. One particular advantage of the ESS is that it allows access to state variables which can otherwise not be read out from the real hardware, such as the logging of lost or jittered time events.</p>
              </sec>
              <sec id="s2d">
                <title>2.4 Investigated Distortion Mechanisms</title>
                <p>Reviewing the hardware and software components of the BrainScaleS wafer-scale system (Section 2.1 and 2.2) leaves us with a number of mechanisms that can affect or impede the emulation of neural network models:</p>
                <list list-type="bullet">
                  <list-item>
                    <p>neuron and synapse models are cast into silicon and can not be altered after chip production</p>
                  </list-item>
                  <list-item>
                    <p>limited ranges for neuron and synapse parameters</p>
                  </list-item>
                  <list-item>
                    <p>discretized and shared parameters</p>
                  </list-item>
                  <list-item>
                    <p>limited number of neurons and synapses</p>
                  </list-item>
                  <list-item>
                    <p>restricted connectivity</p>
                  </list-item>
                  <list-item>
                    <p>synapse loss due to non-optimal algorithms for NP-hard mapping</p>
                  </list-item>
                  <list-item>
                    <p>parameter variations due to transistor level mismatch and limited re-write precision</p>
                  </list-item>
                  <list-item>
                    <p>non-configurable pulse delays and jitter</p>
                  </list-item>
                  <list-item>
                    <p>limited bandwidth for stimulation and recording of spikes</p>
                  </list-item>
                </list>
                <p>It is clear that, for all of the above distortion mechanisms, it is possible to find a corner case where network dynamics are influenced strongly. However, a few of these effects stand out: on one hand, they are of such fundamental nature to mixed-signal VLSI that they are likely to play some role in any similar neuromorphic device; on the other hand, they are expected to influence any kind of emulated network to some extent. We have therefore directed our focus towards these particular effects, which we summarize in the following. In order to allow general assessments, we investigate various magnitudes of these effects, also beyond the values we expect for our particular hardware implementation.</p>
                <sec id="s2d1">
                  <title>Neuron and synapse models</title>
                  <p>While some network architectures employ relatively simple neuron and synapse models for analytical and/or numerical tractability, others rely on more complex components in order to remain more faithful to their biological archetypes. Such models may not allow a straightforward translation to those available on the hardware, requiring a certain amount of fitting. In our particular case, we search for parameters to <xref ref-type="disp-formula" rid="pone.0108590.e002">Equations 1</xref> to <xref ref-type="disp-formula" rid="pone.0108590.e020">5</xref> and Equations S1.1 to S1.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref> that best reproduce reproduce low-level dynamics (e.g. membrane potential traces for simple stimulus patterns) and then tweak these as to optimally reproduce high-level network behaviors. Additionally, further constraints are imposed by the parameter ranges permitted by the hardware (Table S1.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref>).</p>
                </sec>
                <sec id="s2d2">
                  <title>Synapse loss</title>
                  <p>Above a certain network size or density, the mapping process may not be able to find enough hardware resources to realize every single synapse. We use the term “synapse loss” to describe this process, which causes a certain portion of synaptic connections to be lost after mapping. In a first stage, we model synapse loss as homogeneous, i.e., each synapse is deleted with a fixed probability between 0 and 50%. To ease the analysis of distortions, we make an exception for synapses that mediate external input, since, in principle, they can be prioritized in the mapping process such that the probability of losing them practically vanishes. Ultimately however, the compensation methods designed for homogeneous synapse loss are validated against a concrete mapping scenario.</p>
                </sec>
                <sec id="s2d3">
                  <title>Non-configurable axonal delays</title>
                  <p>Axonal delays on the wafer are not configurable and depend predominantly on the processing speed of digital spikes within one HICANN, but also on the physical distance of the neurons on the wafer. In all simulations, we assume a constant delay of 1.5 ms for all synaptic connections in the network, which represents an average of the expected delays when running the hardware with a speedup of <inline-formula><inline-graphic xlink:href="pone.0108590.e048.jpg"/></inline-formula> with respect to real time.</p>
                </sec>
                <sec id="s2d4">
                  <title>Synaptic weight noise</title>
                  <p>As described in section 2.1.1, the variation of synaptic weights is assumed to be the most significant source of parameter variation within the network. This is due to the coarser discretization (4-bit weight vs. 10 bit used for writing the analog neuron parameters) as well as the large number of available synapses, which prohibits the storage of calibration data for each individual synapse. The quality of the calibration only depends on the available time and number of parameter settings, while the trial-to-trial variability and the limited setting resolution remains. To restrict the parameter space of the following investigations, only the synaptic weights are assumed to be affected by noise. In both software and ESS simulations, we model this effect by drawing synaptic weights from a Gaussian centered on the target synaptic weight with a standard-deviation-to-mean-ratio between 0 and 50%. Occasionally, this leads to excitatory synapses becoming inhibitory and vice versa, which can not happen on the hardware. Such weights are clipped to zero. Note that this effectively leads to an increase of the mean of the distribution, which however can be neglected, e.g., for 50% noise the mean is increased by 0.425%. For ESS simulations we assume a synaptic weight noise of 20%, as test measurements on the hardware indicate that the noise level can not be reduced to below this number.</p>
                  <p>It has to be noted that the mechanism of distortion plays a role in the applicability of the compensation mechanisms. The iterative compensation in section 3.3.6 is only applicable when the dominant distortion mechanism is fixed-pattern noise. The other compensation methods, which do not rely on any kind of knowledge of the fixed-pattern distribution, function independently of the distortion mode.</p>
                </sec>
              </sec>
              <sec id="s2e">
                <title>Hardware-Induced Distortions and Compensation Strategies</title>
                <p>In the following, we analyze the effects of hardware-specific distortion mechanisms on a set of neuronal network models and propose adequate compensation mechanisms for restoring the original network dynamics. The aim of these studies is twofold. On one hand, we propose a generic workflow which can be applied for different neural network models regardless of the neuromorphic substrate, assuming it posesses a certain degree of configurability (<xref ref-type="fig" rid="pone-0108590-g004">Figure 4</xref>). On the other hand, we seek to characterize the universality of the BrainScaleS neuromorphic device by assessing its capability of emulating very different large-scale network models with minimal, if any, impairment to their functionality.</p>
                <fig id="pone-0108590-g004" orientation="portrait" position="float">
                  <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g004</object-id>
                  <label>Figure 4</label>
                  <caption>
                    <title>Schematic of the workflow used for studying and compensating hardware-induced distortions of network dynamics.</title>
                    <p>(1) A given network model is defined by providing suitable parameters (for its connectivity and components) and well-defined functionality criteria. (2) The distortion mechanisms that are expected to occur natively on the hardware back-end are implemented and studied individually in software simulations. (3) Compensation methods are designed and tested, with the aim of recovering the original network dynamics as determined by the functionality criteria. (4) The network model is run on the hardware (here: the ESS) without any compensation to evaluate the full effect of the combined distortion mechanisms. (5) The compensation methods are combined and applied to the hardware (here: the ESS) simulation in order to restore the original network dynamics.</p>
                  </caption>
                  <graphic xlink:href="pone.0108590.g004"/>
                </fig>
                <p>In order to allow a comprehensive overview, the set of benchmark experiments is required to cover a broad range of possible network architectures, parameters and function modi. To this end, we have chosen three very different network models, each of which highlights crucial aspects of the biology-to-hardware mapping procedure and poses unique challenges for the hardware implementation. In order to facilitate the comparison between simulations of the original model and their hardware implementation, all experimental setups were implemented in PyNN, running the same set of instructions on either simulation back-end.</p>
                <p>For each of our benchmark models we define a set of specific well-quantifiable functionality criteria. These criteria are measured in software simulations of the ideal, i.e., undistorted network, which is then further referenced as the “original”.</p>
                <p>Assuming that the broad range of hardware-specific distortion mechanisms affects various network parameters, their impact on these measures are investigated in software simulations and various changes to the model structure are proposed in order to recover the original functionality. The feasibility of these compensation methods is then studied for the BrainScaleS neuromorphic platform with the help of the ESS described in Section 2.3.</p>
                <p>All software simulations were performed with NEST <xref rid="pone.0108590-Diesmann1" ref-type="bibr">[57]</xref> or Neuron <xref rid="pone.0108590-Hines2" ref-type="bibr">[58]</xref>.</p>
              </sec>
              <sec id="s2f">
                <title>3.1 Cortical Layer 2/3 Attractor Memory</title>
                <p>As our first benchmark, we have chosen an attractor network model of the cerebral cortex which exihbits characterisic and well-quantifiable dynamics, both at the single-cell level (membrane voltage UP and DOWN states) and for entire populations (gamma band oscillations, pattern completion, attentional blink). For this model, the mapping to the hardware was particularly challenging, due to the complex neuron and synapse models required by the original architecture on the one hand, as well as its dense connectivity on the other. In particular, we observed that the shape of synaptic conductances strongly affects the duration of the attractor states. As expected for a model with relatively large populations as functional units, it exhibits a pronounced robustness to synaptic weight noise. Homogeneous synapse loss, on the other hand, has a direct impact on single-cell dynamics, resulting in significant deviations from the expected high-level functionality, such as the attenuation of attentional blink. As a compensation for synapse loss, we suggest two methods: increasing the weights of the remaining synapses in order to maintain the total average synaptic conductance and reducing the size of certain populations and thereby decreasing the total number of required synapses. After mapping to the hardware substrate, synapse loss is not homogeneous, due to the different connectivity patterns of the three neuron types required by the model. However, we were able to apply a population-wise version of the suggested compensation methods and demonstrate their effectiveness in recovering the previously defined target functionality measures.</p>
                <sec id="s2f1">
                  <title>3.1.1 Architecture</title>
                  <p>As described in <xref rid="pone.0108590-Lundqvist1" ref-type="bibr">[59]</xref> and <xref rid="pone.0108590-Lundqvist2" ref-type="bibr">[60]</xref>, this model (henceforth called L2/3 model) implements a columnar architecture <xref rid="pone.0108590-Mountcastle1" ref-type="bibr">[61]</xref>, <xref rid="pone.0108590-Buxhoeveden1" ref-type="bibr">[62]</xref>. The connectivity is compliant with data from cat cerebral cortex connectivity <xref rid="pone.0108590-Thomson1" ref-type="bibr">[63]</xref>. The key aspect of the model is its modularity, which manifests itself on two levels. On a large scale, the simulated cortical patch is represented by a number <inline-formula><inline-graphic xlink:href="pone.0108590.e049.jpg"/></inline-formula> of hypercolumns (HCs) arranged on a hexagonal grid. On a smaller scale, each HC is further subdivided into a number <inline-formula><inline-graphic xlink:href="pone.0108590.e050.jpg"/></inline-formula> of minicolumns (MCs) <xref rid="pone.0108590-Mountcastle1" ref-type="bibr">[61]</xref>, <xref rid="pone.0108590-Buxhoeveden1" ref-type="bibr">[62]</xref>. Such MCs should first and foremost be seen as functional units, and could, in biology, also be a group of distributed, but highly interconnected cells <xref rid="pone.0108590-Song1" ref-type="bibr">[64]</xref>–<xref rid="pone.0108590-Perin1" ref-type="bibr">[66]</xref>. In the model, each MC consists, in turn, of 30 pyramidal (PYR), 2 regular spiking non-pyramidal (RSNP) and 1 basket (BAS) cells <xref rid="pone.0108590-Peters1" ref-type="bibr">[67]</xref>, <xref rid="pone.0108590-Markram2" ref-type="bibr">[68]</xref>. Within each MC, PYR neurons are mutually interconnected, with 25% connectivity, such that they will tend to be co-active and code for similar input.</p>
                  <p>The functional units of the network, the MCs, are connected in global, distributed patterns containing a set of MCs in the network (<xref ref-type="fig" rid="pone-0108590-g005">Figure 5</xref>). Here the attractors, or patterns, contain exactly one MC from each HC. We have only considered the case of orthogonal patterns, which implies that no two attractors share any number of MCs. Due to the mutual excitation within an attractor, the network is able to perform pattern completion, which means that whenever a subset of MCs in an attractor is activated, the activity tends to spread throughout the entire attractor.</p>
                  <fig id="pone-0108590-g005" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g005</object-id>
                    <label>Figure 5</label>
                    <caption>
                      <title>Pseudo-3D schematic of the layer 2/3 model architecture.</title>
                      <p>Excitatory (PYR) cell populations are represented as red cylinders, inhibitory populations as blue ones (BAS: dark, RSNP: light). A minicolumn (MC) consists of three vertically aligned populations: one PYR, one BAS and one RSNP. Multiple MCs are grouped into hypercolumns (HCs, transparent cylinders). MCs with the same ID (one per HC) form a so-called pattern or attractor. When active, all PYR cells belonging to an attractor excite each other via short-range (within an MC) and long-range (between MCs) connections. The inhibition of PYR cells belonging to other attractors occurs via inhibitory interneurons: locally (within an HC) through BAS cells and globally (between HCs) through RSNP cells. Only a subset of connections are shown, namely those which are mainly used during active periods of attractor 1.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g005"/>
                  </fig>
                  <p>Pattern rivalry results from competition between attractors mediated by short and long-range connections via inhibitory interneurons. Each HC can be viewed as a soft winner-take-all (WTA) module which normalizes activity among its constituent MCs <xref rid="pone.0108590-Lundqvist2" ref-type="bibr">[60]</xref>. This is achieved by the inhibitory BAS cells, which receive input from the PYR cells from the 8 closest MCs and project back onto the PYR cells in all the MCs within the home HC. Apart from providing long-range connections to PYR cells within the same pattern, the PYR cells within an MC project onto RSNP cells in all the MCs which do not belong to the same pattern and do not lie within the same HC. The inhibitory RSNP cells, in turn, project onto the PYR cells in their respective MC. The effect of this connectivity is a disynaptic inhibition between competing patterns. <xref ref-type="fig" rid="pone-0108590-g005">Figure 5</xref> shows a schematic of the default architecture, emphasizing the connectivity pattern described above. It consists of <inline-formula><inline-graphic xlink:href="pone.0108590.e051.jpg"/></inline-formula> HCs, each containing <inline-formula><inline-graphic xlink:href="pone.0108590.e052.jpg"/></inline-formula> MCs, yielding a total of 2673 neurons. Due to its modular structure, this default model can easily be scaled up or down in size with preserved dynamics, as described in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref> (Section S2.4).</p>
                  <p>When a pattern receives enough excitation, its PYR cells enter a state reminiscent of a so-called local UP-state <xref rid="pone.0108590-Cossart1" ref-type="bibr">[69]</xref>, which is characterized by a high average membrane potential, several mV above its rest value, and elevated firing rates. Pattern rivalry leads to states where only one attractor may be active (with all its PYR cells in an UP-state) at any given time. Inter-PYR synapses feature an STP mechanism which weakens the mutual activation of PYR cells over time and prevents a single attractor from becoming persistently active. Additionally, PYR neurons exhibit spike-frequency adaptation, which also suppresses prolonged firing. These mechanisms impose a finite life-time on the attractors such that after their termination more weakly stimulated or less excitable attractors can become active, in contrast to what happens in classical WTA networks.</p>
                  <p>The inputs to the layer 2/3 PYR cells arrive from the cortical layer 4, which is represented by 5 cells per MC. The layer 4 cells project onto the layer 2/3 PYR cells and can be selectively activated by external Poisson spike trains. Additionally, the network receives unspecific input representing activity in various connected cortical areas outside the modeled patch. This input is modeled as diffuse noise and generates a background activity of several Hz.</p>
                  <p>More details on the model architecture, as well as neuron and synapse parameters, can be found in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>.</p>
                </sec>
                <sec id="s2f2">
                  <title>3.1.2 Functionality criteria</title>
                  <p><xref ref-type="fig" rid="pone-0108590-g006">Figure 6</xref> shows some characteristic dynamics of the L2/3 model, which have also been chosen as functionality criteria and are described below.</p>
                  <fig id="pone-0108590-g006" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g006</object-id>
                    <label>Figure 6</label>
                    <caption>
                      <title>Comparison between original and adapted L2/3 network models.</title>
                      <p>Unless explicitly stated otherwise, the default network model (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e053.jpg"/></inline-formula>9MC) was used. Measurements from the original model are depicted (or highlighted) in red, while those from the adapted model are depicted (or highlighted) in blue. (A, B): Raster plots of spiking activity. Attractors activate spontaneously only due to diffuse background noise. Only PYR cells are shown. The MCs are ordered such that those belonging to the same attractor (and <italic>not</italic> those within the same HC) are grouped together. C: Attractor dwell time distributions. The shorter average dwell times in the adapted model are caused by sharper PSPs which miss the long NMDA time constants. (D, E): Star plots of average PYR cell voltages from a sample of 5 PYR cells per MC. Details on this representation of multidimensional data can be found in section S2.8 of <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>. (F, G): Average dwell time for various network sizes. (H, I): Fraction of time spent in competitive states (i.e. no active attractors) for various network sizes. While dwell times remain relatively constant, competition times increase with network size, suppressing spontaneous attractors in large networks. (J): Average firing rate of PYR within an active period of their parent attractor. (K): Average voltage of PYR cells before, during and after their parent attractor is active (UP state). (L): Average voltage of PYR cells before, during and after an attractor they do not belong to is active (DOWN state). For subplots J, K and L, the abscissa has been subdivided into multiples of the average attractor dwell time in the respective simulations. The oscillations of the average voltages occur due to spike-triggered adaptation: after an active period, PYR cells need to recover before being able to support an active period of their home attractor, during which time they are inhibited by other active attractors. The more pronounced attenuation of the oscillations in the adapted model happens due to a higher relative variability of dwell times (compare subplot C). In subplots K and L the dotted line indicates the leak potential <inline-formula><inline-graphic xlink:href="pone.0108590.e054.jpg"/></inline-formula> of the PYR cells. (M): Smoothed power spectrum of PYR firing rate averaged over all MCs. The grey curve in the background represents the unsmoothed spectral density for the original model. Attractor switches (<inline-formula><inline-graphic xlink:href="pone.0108590.e055.jpg"/></inline-formula> 2 Hz) and gamma oscillations (<inline-formula><inline-graphic xlink:href="pone.0108590.e056.jpg"/></inline-formula>25 Hz) can be clearly observed. (N): Pattern completion in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e057.jpg"/></inline-formula>25MC network. Estimated probability of an attractor to fully activate (success ratio) as a function of the number of stimulated constituent MCs, measured over 25 trials per abscissa value. (O, P): Attentional blink in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e058.jpg"/></inline-formula>25MC network. Two attractors are stimulated (the second one only partially, i.e. a certain number of constituent MCs) with a temporal lag of <inline-formula><inline-graphic xlink:href="pone.0108590.e059.jpg"/></inline-formula> in between. Activation probability of the second attractor and <inline-formula><inline-graphic xlink:href="pone.0108590.e060.jpg"/></inline-formula> iso-probability contours, measured over 14 trials per (<inline-formula><inline-graphic xlink:href="pone.0108590.e061.jpg"/></inline-formula>, #MCs) pair. A detailed description of the data and methods used for all figures concerning the L2/3 model can be found in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g006"/>
                  </fig>
                  <p>The core functionality of the original model is easily identifiable by its distinctive display of spontaneously activating attractors in e.g. raster plots (<bold>A</bold>) or voltage star plots (<bold>D</bold>, for an explanation of star plots see section S2.8 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>). However, in particular for large network sizes, spontaneous attractors become increasingly sparse. Additionally, many further indicators of functionality can be found, such as the average membrane potential or the gamma oscillations observed in UP states. Finally, when receiving L4 stimulation in addition to the background noise, the original model displays important features such as pattern completion and attentional blink, which need to be reproducible on the hardware as well. Consequently, we consider several measures of functionality throughout our analyses.</p>
                  <p>When an attractor becomes active, it remains that way for a characteristic dwell time <inline-formula><inline-graphic xlink:href="pone.0108590.e062.jpg"/></inline-formula>. The dwell time depends strongly on the neuron and synapse parameters (as will be discussed in the following sections) and only weakly on the network size (<bold>C</bold>, <bold>F</bold>), since the scaling rules ensure a constant average fan-in for each neuron type. Conversely, this makes <inline-formula><inline-graphic xlink:href="pone.0108590.e063.jpg"/></inline-formula> sensitive to hardware-induced variations in the average synaptic input. The detection of active attractors is performed automatically using the spike data (for a description of the algorithm, see section S2.5 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>).</p>
                  <p>We describe the periods between active attractors as competition phases and the time spent therein as the total competition time. The competition time varies strongly depending on the network size (<bold>H</bold>). One can observe that the competition time is a monotonically increasing function of both <inline-formula><inline-graphic xlink:href="pone.0108590.e064.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e065.jpg"/></inline-formula>. For an increasing number of HCs, i.e., a larger number of neurons in every pattern, the probability of a spontaneous activation of a sufficiently large number of PYR cells decreases. For an increasing number of MCs per HC, there is a larger number of competing patterns, leading to a reduced probability of any single pattern becoming dominant.</p>
                  <p>When an attractor becomes active, the average spike rate of its constituent PYR cells rises sharply and then decays slowly until the attractor becomes inactive again (<bold>J</bold>). Two independent mechanisms are the cause of this decay: neuron adaptation and synaptic depression. The characteristic time course of the spike rate depends only weakly on the size of the network.</p>
                  <p>As described in Section 3.1.1, PYR cells within active attractors enter a so-called local UP state, with an increased average membrane potential and an elevated firing rate (<bold>K</bold>). While inactive or inhibited by other active attractors, PYR cells are in a DOWN state, with low average membrane potential and almost no spiking at all (<bold>L</bold>). In addition to these characteristic states, the average PYR membrane potential exhibits oscillations with a period close to <inline-formula><inline-graphic xlink:href="pone.0108590.e066.jpg"/></inline-formula>. These occur because the activation probability of individual attractors is an oscillatory function of time as well. In the immediate temporal vicinity of an active period (i.e., assuming an activation at <inline-formula><inline-graphic xlink:href="pone.0108590.e067.jpg"/></inline-formula>, during <inline-formula><inline-graphic xlink:href="pone.0108590.e068.jpg"/></inline-formula>) the same attractor must have been inactive, since PYR populations belonging to an activated attractor need time to recuperate from synaptic depression and spike-triggered adaptation before being able to activate again.</p>
                  <p>An essential emerging feature of this model are oscillations of the instantaneous PYR spike rate in the gamma band within active attractors (<bold>M</bold>). The frequency of these oscillations are independent of size and rather depend on excitation levels in the network <xref rid="pone.0108590-Lundqvist2" ref-type="bibr">[60]</xref>. Although the gamma oscillations might suggest periodic spiking, it is important to note that individual PYR cells spike irregularly (<inline-formula><inline-graphic xlink:href="pone.0108590.e069.jpg"/></inline-formula> within active attractors).</p>
                  <p>Apart from these statistical measures, two behavioral properties are essential for defining the functionality of the network: the pattern completion and attentional blink mentioned above. The pattern completion ability of the network can be described as the successful activation probability of individual patterns as a function of the number of stimulated MCs (<bold>N</bold>). Similarly, the attentional blink phenomenon can also be quantified by the successful activation rate of an attractor as a function of the number of stimulated MCs if it is preceded by the activation of some other attractor with a time lag of <inline-formula><inline-graphic xlink:href="pone.0108590.e070.jpg"/></inline-formula> (<bold>O</bold>). For small <inline-formula><inline-graphic xlink:href="pone.0108590.e071.jpg"/></inline-formula>, the second attractor is completely “blinked out”, i.e., it can not be activated regardless of the number of stimulated MCs. To facilitate the comparison between different realizations of the network with respect to attentional blink, we consider the 50% iso-line, which represents the locus of the input variable pair which leads to an attractor activation ratio of 50%. These functional properties are easiest to observe in large networks, where spontaneous attractors are rare and do not interfere with stimulated ones.</p>
                  <p>A detailed description of the data and methods used for these figures can be found in the <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>.</p>
                </sec>
                <sec id="s2f3">
                  <title>3.1.3 Neuron and synapse model translation</title>
                  <p>A particular feature of this benchmark model is the complexity of both neuron and synapse models used in its original version. Therefore, the first required type of compensation concerns the parameter fitting for the models implemented on the hardware. Some exemplary results of this parameter fit can be seen in <xref ref-type="fig" rid="pone-0108590-g007">Figure 7</xref>. More details can be found in section S2.2 of <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>.</p>
                  <fig id="pone-0108590-g007" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g007</object-id>
                    <label>Figure 7</label>
                    <caption>
                      <title>Comparison of original and fitted neuron and synapse dynamics.</title>
                      <p>Original neuron (multi-compartment HH) and synapse (NMDA+AMPA) dynamics are shown in red, the fitted dynamics of hardware-compatible neuron (point AdEx) and synapse (single decay time constant) models in blue. (A) Membrane potential of PYR cells under spike-inducing current stimulation. While the precise membrane potential time course of the original neuron model can not be reproduced by a single-compartment AdEx neuron, spike timing and especially firing rates can be recovered. (B) PSPs generated by PYR<inline-formula><inline-graphic xlink:href="pone.0108590.e072.jpg"/></inline-formula>PYR synapses between MCs where the spikes from A were used as input. As a replacement for the multiple synaptic time constants in the original model, we have chosen an intermediate value for <inline-formula><inline-graphic xlink:href="pone.0108590.e073.jpg"/></inline-formula>, which constitutes the main reason for the difference in PSP shapes. Additionally, the combination of STP and saturation in the original model had to be replaced by STP alone.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g007"/>
                  </fig>
                  <p><italic>Neurons.</italic> In general, the typical membrane potential time course during a spike of a Hodgkin-Huxley neuron can be well approximated by the exponential term in the AdEx equation <xref rid="pone.0108590-Brette2" ref-type="bibr">[35]</xref>. However, when fitting for spike timing, we found that spike times were best reproduced when eliminating the exponential term, i.e. setting <inline-formula><inline-graphic xlink:href="pone.0108590.e074.jpg"/></inline-formula>.</p>
                  <p>Adaptation is an essential feature of both the PYR and the RSNP cells in the original model, where it is generated by voltage-dependent <inline-formula><inline-graphic xlink:href="pone.0108590.e075.jpg"/></inline-formula> channels. We were able to reproduce the correct equilibrium spike frequency by setting the AdEx adaptation parameters <italic>a</italic> and <italic>b</italic> to nonzero values. One further difference resides in the original neurons being modeled as having several compartments, whereas the hardware only implements point neurons. The passive neuron properties (membrane capacitances and leak conductances) were therefore determined by fitting the membrane potential time course under stimulation by a step current which was not strong enough to elicit spikes.</p>
                  <p><italic>Synapses.</italic> We have performed an initial estimation of synaptic weights and time constants by fitting the membrane potential time course of the corresponding neurons in a subthreshold regime. However, two important differences remain between the synapses in the original model and the ones available on our hardware.</p>
                  <p>In the original model, PYR-PYR and PYR-RSNP synapses contain two types of neurotransmitters: Kainate/AMPA and NMDA (see Table S2.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>). Due to the vastly different time constants for neurotransmitter removal at the postsynaptic site (6 ms and 150 ms, respectively), the PSPs have a characteristic shape, with a pronounced peak and a long tail (red curve in <xref ref-type="fig" rid="pone-0108590-g007">Figure 7</xref>
<bold>B</bold>). While, in priniciple, the HICANN supports several excitatory time constants per neuron (Section 2.1.1), the PyNN API as well as the mapping process support only one excitatory time constant per neuron. With this limitation the PSP shape can not be precisely reproduced.</p>
                  <p>One further difference lies in the saturating nature of the postsynaptic receptor pools after a single presynaptic spike. In principle, this behavior could be emulated by the TSO plasticity mechanism by setting <inline-formula><inline-graphic xlink:href="pone.0108590.e076.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e077.jpg"/></inline-formula>. However, this would conflict with the TSO parameters required for modeling short-term depression of PYR synapses and would also require parameters outside the available hardware ranges.</p>
                  <p>For these reasons, we have further modified synaptic weights and time constants by performing a behavioral fit, i.e., by optimizing these parameters towards reproducing the correct firing rates of the three neuron types in two scenarios - first without and then subsequently with inhibitory synapses. Because the original model was characterized by relatively long and stable attractors, we further optimized the excitatory synapse time constants towards this behavior.</p>
                  <p><italic>Post-fit model behavior.</italic><xref ref-type="fig" rid="pone-0108590-g006">Figure 6</xref> shows the results of the translation of the original model to hardware-compatible dynamics and parameter ranges. Overall, one can observe a very good qualitative agreeement of characteristic dynamics with the original model. In the following, we discuss this in more detail and explain the sources of quantitative deviations.</p>
                  <p>When subject to diffuse background noise only, the default size network clearly exhibits its characteristic spontanous attractors (<bold>B</bold>). Star plots exhibit the same overall traits, with well-defined attractors, characterized by state space trajectories situated close to the axes and low trajectory velocities within attractors (<bold>E</bold>). Attractor dwell times remain relatively stable for different network sizes, while the competition times increase along with the network size (<bold>G</bold> and <bold>I</bold>). The average value of dwell times, however, lies significantly lower than in the original (<bold>C</bold>). The reason for this lies mainly in the shape of EPSPs: the long EPSP tails enabled by the large NMDA time constants in the original model caused a higher average membrane potential, thereby prolonging the activity of PYR cells.</p>
                  <p>Within attractors, active and inactive PYR cells enter well-defined local UP and DOWN states, respectively (<bold>K</bold> and <bold>L</bold>). Before and after active attractors, the dampened oscillations described in section 3.1.2 can be observed. In the adapted model, attenuation is stronger due to a higher coefficient of variation of the dwell times (<inline-formula><inline-graphic xlink:href="pone.0108590.e078.jpg"/></inline-formula> as compared to <inline-formula><inline-graphic xlink:href="pone.0108590.e079.jpg"/></inline-formula> in the original model).</p>
                  <p>Average PYR firing rates within active attractors have very similar time courses (<bold>J</bold>), with a small difference in amplitude, which can be attributed to the difference in EPSP shapes discussed earlier. Both low-frequency switches between attractors (¡ 3 Hz, equivalent to the incidence rate) and high-frequency gamma oscillations arising from synchronous PYR firing (with a peak around 25 Hz) can be clearly seen in a power spectrum of the PYR firing rate (<bold>M</bold>).</p>
                  <p>Pattern completion occurs similarly early, with a steep rise and nearly 100% success rate starting at 25% of stimulated MCs per attractor (<bold>N</bold>). Attentional blink follows the same qualitative pattern (<bold>P</bold>, <bold>Q</bold>), although with a slightly more pronounced dominance of the first activated attractor in the case of the adapted network, which happens due to the slightly higher firing rates discussed above.</p>
                  <p>Having established the quality of the model fit and in order to facilitate a meaningful comparison, all following studies concerning hardware-induced distortions and compensation thereof use data from the adapted model as reference.</p>
                </sec>
                <sec id="s2f4">
                  <title>3.1.4 Synapse loss</title>
                  <p>The effects of homogeneous synapse loss and the results of the attempted compensation are depicted in <xref ref-type="fig" rid="pone-0108590-g008">Figure 8</xref>. More detailed plots can be found in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref> (Figure S2.3).</p>
                  <fig id="pone-0108590-g008" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g008</object-id>
                    <label>Figure 8</label>
                    <caption>
                      <title>Compensation of homogeneous synaptic loss in the L2/3 model.</title>
                      <p>Unless explicitly stated otherwise, the default network model (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e080.jpg"/></inline-formula>9MC) was used. Here, we use the following color code: blue for the original model, red for the distorted case (50% synapse loss), green for the compensation via increased synaptic weights and purple for the compensation by scaling down the size of the PYR populations. (A–D) Raster plots of spiking activity. The MCs are ordered such that those belonging to the same attractor (and <italic>not</italic> those within the same HC) are grouped together. Synapse loss weakens the interactions within and among MCs, causing shorter dwell times and longer competition times. Both compensation methods successfuly counter these effects. These phenomena can also be observed in subplots H–P. (E–G) Star plots of average PYR voltages from a sample of 5 PYR cells per MC. Synapse loss leads to a less pronounced difference between the average PYR membrane potential within and outside of active attractors. After compensation, the differences between UP and DOWN states become more pronounced again. These phenomena can also be observed in subplots R and S. (H–K) Average dwell time for various network sizes. (L–O) Fraction of time spent in competitive states (i.e. no active attractors) for various network sizes. (P) Distributions of dwell times. (Q) Average firing rate of PYR cells within an active period of their parent attractor. (R) Average voltage of PYR cells before, during and after their parent attractor is active (UP state). (S) Average voltage of PYR cells before, during and after an attractor they do not belong to is active (DOWN state). For subplots Q, R and S, the abscissa has been subdivided into multiples of the average attractor dwell time in the respective simulations. In subplots R and S the dotted line indicates the leak potential <inline-formula><inline-graphic xlink:href="pone.0108590.e081.jpg"/></inline-formula> of the PYR cells. (T) Pattern completion in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e082.jpg"/></inline-formula>25MC network. Estimated activation probability from 25 trials per abscissa value. Synapse loss shifts the curve to the right, i.e., more MCs need to be stimulated to achieve the same probability of activating their parent attractor. Both compensation methods restore the original behavior to a large extent. (U) Attentional blink in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e083.jpg"/></inline-formula>25MC network: <inline-formula><inline-graphic xlink:href="pone.0108590.e084.jpg"/></inline-formula> iso-probability contours, measured over 14 trials per (<inline-formula><inline-graphic xlink:href="pone.0108590.e085.jpg"/></inline-formula>, #MCs) pair. Synapse loss suppresses attentional blink, as inhibition from active attractors becomes to weak to prevent the activation of other stimulated attractors. Compensation by increasing the weight of the remaining synapses alleviates this effect, but scaling down the PYR population sizes directly reduces the percentage of lost synapses and is therefore more effective in restoring attentional blink.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g008"/>
                  </fig>
                  <p><italic>Effects.</italic> With increasing synapse loss, the functionality of the network gradually deteriorates. Attractors become shorter or disappear entirely, with longer periods of competition in between (<bold>D</bold>, <bold>K</bold>, <bold>O</bold>).</p>
                  <p>While average excitatory conductances are only affected linearly by synaptic loss, inhibitory conductances feel a compound effect of synapse loss, as it affects both afferent and efferent connections of inhibitory interneurons. Therefore, synapse loss has a stronger effect on inhibition, leading to a net increase in the average PYR membrane potential (<bold>R</bold>, <bold>S</bold>). Additionally, since all connections become weaker, the variance of the membrane potential becomes smaller, as observed in the corresponding star plots as well (<bold>E</bold>). The weaker connections also decrease the self-excitation of active attractors while decreasing the inhibition of inactive ones, thereby leading to shorter attractor dwell times (<bold>P</bold>). Somewhat surprisingly, the maximum average PYR firing rate in active attractors remains almost unchanged when subjected to synapse loss. However, the temporal evolution of the PYR firing rate changes significantly (<bold>Q</bold>).</p>
                  <p>The pattern completion ability of the network suffers particularly in the region of weak stimuli, due to weaker internal excitation of individual attractors. The probability of triggering a partially stimulated pattern can drop by more than 50% (<bold>T</bold>). Due to the decreased stability of individual attractors discussed above, rival attractors are easier to excite, thereby significantly suppressing the attentional blink phenomenon (<bold>U</bold>).</p>
                  <p><italic>Compensation.</italic> As a first-order approximation, we can consider the population average of the neuron conductance as the determining factor in the model dynamics. For synapses with exponential conductance courses, the average conductance generated by the <italic>i</italic>th synapse is proportional to both synaptic weight <inline-formula><inline-graphic xlink:href="pone.0108590.e086.jpg"/></inline-formula> and afferent firing rate <inline-formula><inline-graphic xlink:href="pone.0108590.e087.jpg"/></inline-formula>. Because conductances sum up linearly, the total conductance that a neuron from population <inline-formula><inline-graphic xlink:href="pone.0108590.e088.jpg"/></inline-formula> receives from some other population <inline-formula><inline-graphic xlink:href="pone.0108590.e089.jpg"/></inline-formula> is, on average (see Equation S2.6 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>)<disp-formula id="pone.0108590.e090"><graphic xlink:href="pone.0108590.e090.jpg" position="anchor" orientation="portrait"/><label>(9)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0108590.e091.jpg"/></inline-formula> represents the size of the presynaptic population and <inline-formula><inline-graphic xlink:href="pone.0108590.e092.jpg"/></inline-formula> represents the probability of a neuron from the presynaptic population to project onto a neuron from the postsynaptic population. Since homogeneous synapse loss is equivalent to a decrease in <inline-formula><inline-graphic xlink:href="pone.0108590.e093.jpg"/></inline-formula>, we can compensate for synapse loss that occurs with probability <inline-formula><inline-graphic xlink:href="pone.0108590.e094.jpg"/></inline-formula> by increasing the weights of the remaining synapses by a factor <inline-formula><inline-graphic xlink:href="pone.0108590.e095.jpg"/></inline-formula>. <xref ref-type="fig" rid="pone-0108590-g008">Figure 8</xref> shows the results of this compensation strategy for <inline-formula><inline-graphic xlink:href="pone.0108590.e096.jpg"/></inline-formula>. In all aspects, a clear improvement can be observed. The remaining deviations can be mainly attributed to two effects. First of all, preserving the average conductance by compensating homogeneous synapse loss with increasing synaptic weights leads to an increase in the variance of the membrane potential (Equation S2.5 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>). Secondly, finite population sizes coupled with random elimination of synapses lead to locally inhomogeneous synapse loss and further increase the variability of neuronal activity.</p>
                  <p>Instead of compensating for synapse loss after its occurrence, it is also possible to circumvent it altogether after having estimated the expected synapse loss in a preliminary mapping run. For the L2/3 model, this can be done without altering the number of functional units (i.e., the number of HCs and MCs) by changing the size of the PYR cell populations. For this approach, however, the standard scaling rules (Section S2.4 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>) need to be modified. These rules are designed to keep the average number of inputs per neuron constant and would increase the total number of PYR-incident synapses by the same factor by which the PYR population is scaled. This would inevitably lead to an increased number of shared inputs per PYR cell, with the immediate consequence of increased firing synchrony. Instead, when reducing the PYR population size, we compensate for the reduced number of presynaptic partners by increasing relevant synaptic weights instead of connection probabilities. This modified downscaling leads to a net reduction of the total number of synapses in the network, thereby potentially reducing synaptic loss between all populations. <xref ref-type="fig" rid="pone-0108590-g008">Figure 8</xref> shows the effects of scaling down the PYR population size until the total remaining number of synapses is equal to the realized number of synapses in the distorted case (50% of the total number of synapses in the undistorted network). More detailed plots of the effects of PYR population downscaling can be found in Figure S2.4 of <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>. The two presented compensation methods can also be combined to further improve the final result, as we show in Section 3.1.7.</p>
                </sec>
                <sec id="s2f5">
                  <title>3.1.5 Synaptic weight noise</title>
                  <p>One would not expect the synaptic weight noise to affect the L2/3 model strongly, as it should average out over a large number of connections between the constitutent populations. It turns out that the surprisingly strong impact of synaptic weight noise is purely due to the implementation of background stimulus in this model and can therefore be easily countered.</p>
                  <p><italic>Effects.</italic> The relative deviation of the total synaptic conductance scales with <inline-formula><inline-graphic xlink:href="pone.0108590.e097.jpg"/></inline-formula> (see Equation S2.5 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>), where <inline-formula><inline-graphic xlink:href="pone.0108590.e098.jpg"/></inline-formula> is the total input frequency and N the number of presynaptic neurons. Therefore, interactions between large populations are not expected to be strongly affected by synaptic weight noise.</p>
                  <p>The only connections where an effect is expected are the RSNP<inline-formula><inline-graphic xlink:href="pone.0108590.e099.jpg"/></inline-formula>PYR connections, because the presynaptic RSNP population consists of only 2 neurons per MC. However, long-range inhibition also acts by means of a second-order mechanism, in which an active MC activates its counterpart in some other HC, which then in turn inhibits all other MCs in its home HC via BAS cells. This mechanism masks much of how synaptic weight noise affects RSNP<inline-formula><inline-graphic xlink:href="pone.0108590.e100.jpg"/></inline-formula>PYR connections.</p>
                  <p>Nevertheless, synaptic weight noise appears to have a strong effect on network dynamics (<xref ref-type="fig" rid="pone-0108590-g009">Figure 9</xref>, red curves). The reason for that lies in the way the network is stimulated. In the original model, each PYR cell receives input from a single Poisson source. This is of course a computational simplification and represents diffuse noise arriving from many neurons within other cortical areas. However, having only a single noise source connected by a single synapse to the target neuron makes the network highly sensitive to synaptic weight noise (see section S2.11 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>).</p>
                  <fig id="pone-0108590-g009" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g009</object-id>
                    <label>Figure 9</label>
                    <caption>
                      <title>Compensation of synaptic weight noise in the L2/3 model.</title>
                      <p>Unless explicitly stated otherwise, the default network model (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e101.jpg"/></inline-formula>9MC) was used. Here, we use the following color code: blue for the original model, red for the distorted case (50% synaptic weight noise), green for the compensation via multiple background sources per PYR cell and purple for the same compensation method, but with scaled down PYR populations. Altogether, we note that the observed effects happen almost exclusively due to each PYR cell receiving background input via a single synapse. When compensated via the inclusion of multiple background sources, the network exhibits remarkable robustness towards synaptic weight noise. (A–D) Raster plots of spiking activity. The MCs are ordered such that those belonging to the same attractor (and <italic>not</italic> those within the same HC) are grouped together. When each PYR cell has a single background source, high levels of synaptic weight noise cause some PYR cells to become completely silent, while others spike disproportionately often. This can completely disrupt the stability of attractors, resulting in largely random spiking, with long competition times between the occasional appearance of weak, unstable attractors. The inclusion of multiple background sources per PYR cell efficiently counters these effects. This compensation strategy works just as well for downscaled PYR populations. The phenomena described above can also be observed in subplots H–P. (E–G) Star plots of average PYR voltages from a sample of 5 PYR cells per MC. The disrupted attractor behavior and erratic PYR spiking result in weak fluctuations of average PYR voltages with essentially no clear UP or DOWN states. After compensation, the differences between UP and DOWN states become more pronounced again. These phenomena can also be observed in subplots R and S. (H–K) Average dwell time for various network sizes. (L–O) Fraction of time spent in competitive states (i.e. no active attractors) for various network sizes. (P) Distributions of dwell times. (Q) Average firing rate of PYR cells within an active period of their parent attractor. (R) Average voltage of PYR cells before, during and after their parent attractor is active (UP state). (S) Average voltage of PYR cells before, during and after an attractor they do not belong to is active (DOWN state). For subplots Q, R and S, the abscissa has been subdivided into multiples of the average attractor dwell time in the respective simulations. In subplots R and S the dotted line indicates the leak potential <inline-formula><inline-graphic xlink:href="pone.0108590.e102.jpg"/></inline-formula> of the PYR cells. (T) Pattern completion in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e103.jpg"/></inline-formula>25MC network. Estimated activation probability from 25 trials per abscissa value. Due to erratically firing PYR cells in the distorted network, much stronger stimulation is needed to guarantee the appearance of an attractor. Compensation restores the original behavior to a large extent. (U) attentional blink in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e104.jpg"/></inline-formula>25MC network: <inline-formula><inline-graphic xlink:href="pone.0108590.e105.jpg"/></inline-formula> iso-probability contours, measured over 14 trials per (<inline-formula><inline-graphic xlink:href="pone.0108590.e106.jpg"/></inline-formula>, #MCs) pair. Due to the highly unstable attractors in the distorted network, attentional blink is completely suppressed. Compensation restores blink, but not to its original strength, due to the synaptic weight noise within the network itself.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g009"/>
                  </fig>
                  <p><italic>Compensation.</italic> The compensation for this effect was done by increasing the number of independent noise sources per neuron, thereby reducing the statistically expected relative noise conductance variations per PYR cell. The only limitation lies in the total number of available external spike sources and the bandwidth supplied by the off-wafer communication network (Section 2.1.2). Once this limit is reached, the number of noise inputs per PYR cell can still be increased even further if PYR cells are allowed to share noise sources. Given a total number of available Poisson sources <inline-formula><inline-graphic xlink:href="pone.0108590.e107.jpg"/></inline-formula> and a noise population size of <inline-formula><inline-graphic xlink:href="pone.0108590.e108.jpg"/></inline-formula> sources per PYR cell, the average pairwise overlap between two such populations is <inline-formula><inline-graphic xlink:href="pone.0108590.e109.jpg"/></inline-formula>. Therefore, as long as the average overlap remains small enough, the overlap-induced spike correlations will not affect the network dynamics.</p>
                  <p>In our example (<xref ref-type="fig" rid="pone-0108590-g009">Figure 9</xref>, green curves), we have chosen <inline-formula><inline-graphic xlink:href="pone.0108590.e110.jpg"/></inline-formula>, while the total number of Poisson sources is set at <inline-formula><inline-graphic xlink:href="pone.0108590.e111.jpg"/></inline-formula>. Note how this relatively simple compensation method efficiently restores most functionality criteria. The most significant remaining differences can be seen in pattern completion and attentional blink (<bold>T</bold>, <bold>U</bold>) and appear mainly due to the affected RSNP<inline-formula><inline-graphic xlink:href="pone.0108590.e112.jpg"/></inline-formula>PYR connections.</p>
                  <p>In addition to the investigation of synaptic weight noise on the default model, we repeated the same experiments for the model with reduced PYR population sizes (<xref ref-type="fig" rid="pone-0108590-g009">Figure 9</xref>, purple curves), which we have previously suggested as a compensation method for synaptic weight noise (Section 3.1.4). The fact that PYR population reduction does not affect the network functionality in the case of (compensated) synaptic weight noise is an early indicator for the compatibility of the suggested compensation methods when all distortion mechanisms are present (Section 3.1.7).</p>
                </sec>
                <sec id="s2f6">
                  <title>3.1.6 Non-configurable axonal delays</title>
                  <p>In the original model, axonal delays between neurons are proportional to the distance between their home HCs. At an axonal spike propagation velocity of 0.2 m/ms, the default (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e113.jpg"/></inline-formula>9MC) network implements axonal delays distributed between 0.5 and 8 ms. While PYR cells within an MC tend to spike synchronously in gamma waves, the distribution of axonal delays reduces synchronicity between spike volleys of different MCs.</p>
                  <p>Fixed delays, on the other hand, promote synchronicity, thereby inducing subtle changes to the network dynamics (<xref ref-type="fig" rid="pone-0108590-g010">Figure 10</xref>). The synchronous arrival of excitatory spike volleys causes PYR cells in active attractors to spike more often (<bold>A</bold>). Their higher firing rate in turn causes shorter attractor dwell times, due to their spike frequency adaptation mechanism (<bold>B</bold>, <bold>C</bold>, <bold>F</bold>). During an active attractor, the elevated firing rate of its constituent PYR cells causes a higher firing rate of the inhibitory interneurons belonging to all other attractors. This, in turn, leads to a lower membrane potential for PYR cells during inactive periods of their parent attractor (<bold>G</bold>, <bold>H</bold>). As these effects are not fundamentally disruptive and also difficult to counter without significantly changing other functional characteristics of the network, we chose not to design a compensation strategy for this distortion mechanism in the L2/3 network.</p>
                  <fig id="pone-0108590-g010" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g010</object-id>
                    <label>Figure 10</label>
                    <caption>
                      <title>Effects of fixed axonal delays on the L2/3 model.</title>
                      <p>Unless explicitly stated otherwise, the default network model (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e114.jpg"/></inline-formula>9MC) was used. Data from the regular and distorted models is depicted (or highlighted) in blue, and red, respectively. (A) Average firing rate of PYR cells within an active period of their parent attractor. (B, C) Average dwell time for various network sizes. (D, E) Fraction of time spent in competitive states (i.e. no active attractors) for various network sizes. (F) Distributions of dwell times. (G) Average voltage of PYR cells before, during and after their parent attractor is active (UP state). (H) Average voltage of PYR cells before, during and after an attractor they do not belong to is active (DOWN state). For subplots A, G and H, the abscissa has been subdivided into multiples of the average attractor dwell time in the respective simulations. In subplots G and H the dotted line indicates the leak potential <inline-formula><inline-graphic xlink:href="pone.0108590.e115.jpg"/></inline-formula> of the PYR cells.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g010"/>
                  </fig>
                </sec>
                <sec id="s2f7">
                  <title>3.1.7 Full simulation of combined distortion mechanisms</title>
                  <p>In a final step, we emulate the L2/3 model on the ESS (Section 2.3), and compensate simultaneously for all of the effects discussed above. We first investigate how much synapse loss to expect for different network sizes, and then realize the network at two different scales in order to investigate all of the chosen functionality criteria. The default network (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e116.jpg"/></inline-formula>9MC) is used to analyze spontaneous attractors, while a large-scale model (25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e117.jpg"/></inline-formula>25MC) serves as the test substrate for pattern completion and pattern rivalry.</p>
                  <p><italic>Synapse loss.</italic> The synapse loss after mapping the L2/3 model onto the BrainScaleS hardware is shown in <xref ref-type="fig" rid="pone-0108590-g011">Figure 11</xref> for different sizes, using the scaling rules defined in section S2.4 of <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>. Synapse loss starts to occur already at small sizes and increases rapidly above network sizes of 20 000 neurons. The jumps can be attributed to the different ratios between number of HCs and number of MCs per HC (Table S2.10 in <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>).</p>
                  <fig id="pone-0108590-g011" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g011</object-id>
                    <label>Figure 11</label>
                    <caption>
                      <title>Synapse Losses after mapping the L2/3 model.</title>
                    </caption>
                    <graphic xlink:href="pone.0108590.g011"/>
                  </fig>
                  <p><italic>Small-scale model.</italic> The default model (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e118.jpg"/></inline-formula>9MC) can, in principle, be mapped onto the hardware without any synapse loss if the full wafer is available for use. Nevertheless, in some scenarios, a full wafer might not be available, due to faulty components or part of its area being used for emulating other parts of a larger parent network. We simulate this scenario by limiting the usable wafer area to 4 reticles (out of a total of 48 on the full wafer). With the reduced available hardware size, the available pulse bandwidth of the off-wafer communication network decreases as well, such that diffusive background noise can not be modeled with one individual Poisson source per neuron. Hence, each pyramidal neuron receives input from 9 out of 2430 background sources. The total synapse loss for the given network setup amounts to 22.2% and affects different projection types with varying strength (<xref ref-type="table" rid="pone-0108590-t001">Table 1</xref>). Also external synapses are lost, since, in contrast to the synapse loss study (Section 3.1.4), they have not been prioritized in the mapping process in this case. Additionally, we applied 20% synaptic weight noise and simulated the network with a speedup factor of 12 000. The behavior on the ESS is shown in <xref ref-type="fig" rid="pone-0108590-g012">Figure 12</xref>. The distorted network shows no spontaneous attractors (<bold>C</bold>), which can be mainly attributed to the loss of over 32% of the background synpases. To recover the original network behavior, we first increased the number of background neurons per cell from 9 to 50 to compensate for synaptic weight noise, and also scaled the weights by <inline-formula><inline-graphic xlink:href="pone.0108590.e119.jpg"/></inline-formula> for each projection type with extracted synapse loss values <inline-formula><inline-graphic xlink:href="pone.0108590.e120.jpg"/></inline-formula> (<xref ref-type="table" rid="pone-0108590-t001">Table 1</xref>), following the synapse loss compensation method described in Section 3.1.4. Note that here the complete PyNN experiment is re-run: synaptic weights are scaled in the network definition leading to a new configuration of <inline-formula><inline-graphic xlink:href="pone.0108590.e121.jpg"/></inline-formula> and the digital weights on the HICANNs (Section 2.1.1) after the mapping process. These measures effectively restored the attractor characteristics of the network (<xref ref-type="fig" rid="pone-0108590-g012">Figure 12</xref>). The attractor dwell times remained a bit smaller than for the regular network (<bold>G</bold>), which can be ascribed to the non-configurable delays (Section 3.1.6).</p>
                  <fig id="pone-0108590-g012" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g012</object-id>
                    <label>Figure 12</label>
                    <caption>
                      <title>ESS emulation of the L2/3 model.</title>
                      <p>Unless explicitly stated otherwise, the default network model (9HC<inline-formula><inline-graphic xlink:href="pone.0108590.e122.jpg"/></inline-formula>9MC) was used. Here, we use the following color code: blue for the original model, red for the distorted case on the ESS (with 20% synaptic weight noise and <inline-formula><inline-graphic xlink:href="pone.0108590.e123.jpg"/></inline-formula> synapse loss), and green for the compensated case on the ESS. (A–C) Raster plots of spiking activity. The MCs are ordered such that those belonging to the same attractor (and <italic>not</italic> those within the same HC) are grouped together. A synapse loss of 32% on the background synpases (see <xref ref-type="table" rid="pone-0108590-t001">Table 1</xref>) is the main reason for which no spontaneous attractors are evoked. For this reason, there are no red curves in G, H, I and J. Applying a weight compensation and increasing the number of background sources from 9 to 50 effectively restores the original behavior. (D) Power spectrum of global activity. Since no spontaneous attractors are evokes, neither attractor switching (<inline-formula><inline-graphic xlink:href="pone.0108590.e124.jpg"/></inline-formula>Hz) nor gamma oscillations (<inline-formula><inline-graphic xlink:href="pone.0108590.e125.jpg"/></inline-formula>Hz) can be observed. The spectrum of the distorted network complies with the asynchronous irregular firing observed in C. Compensation restores both of the characteristic peaks in the spectrum. (E and F) Star plots of average PYR voltages from a sample of 5 PYR cells per MC. The disrupted attractor behavior results in a weak fluctuations of average PYR voltages with essentially no clear UP or DOWN states. After compensation, the differences between UP and DOWN states become more pronounced again. (G) Distributions of dwell times. The disrupted network effectively shows no spontaneous attractors. As expected from the software simulations, the dwell times remain, on average, slightly shorter after compensation. (H) Average firing rate of PYR cells within an active period of their parent attractor. The higher firing rates after compensation are caused by the fixed, short delays, which promote synchronous firing and therefore stronger mutual excitation among PYR cells. (I) Average voltage of PYR cells before, during and after their parent attractor is active (UP state). (J) Average voltage of PYR cells before, during and after an attractor they do not belong to is active (DOWN state). For subplots H, I and J, the abscissa has been subdivided into multiples of the average attractor dwell time in the respective simulations. In subplots I and J the dotted line indicates the leak potential <inline-formula><inline-graphic xlink:href="pone.0108590.e126.jpg"/></inline-formula> of the PYR cells. (K) Pattern completion in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e127.jpg"/></inline-formula>25MC network. Estimated activation probability from 25 trials per abscissa value. (L) Attentional blink in a 25HC<inline-formula><inline-graphic xlink:href="pone.0108590.e128.jpg"/></inline-formula>25MC network: <inline-formula><inline-graphic xlink:href="pone.0108590.e129.jpg"/></inline-formula> iso-probability contours, measured over 14 trials per (<inline-formula><inline-graphic xlink:href="pone.0108590.e130.jpg"/></inline-formula>, #MCs) pair. Since the distorted network showed no spontaneous attractors (C), we used the average dwell time from the pattern completion experiment (K) for normalization.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g012"/>
                  </fig>
                  <table-wrap id="pone-0108590-t001" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.t001</object-id>
                    <label>Table 1</label>
                    <caption>
                      <title>Projection-wise synapse loss of the L2/3 model after the mapping process.</title>
                    </caption>
                    <alternatives>
                      <graphic id="pone-0108590-t001-1" xlink:href="pone.0108590.t001"/>
                      <table frame="hsides" rules="groups">
                        <colgroup span="1">
                          <col align="left" span="1"/>
                          <col align="center" span="1"/>
                          <col align="center" span="1"/>
                          <col align="center" span="1"/>
                          <col align="center" span="1"/>
                        </colgroup>
                        <thead>
                          <tr>
                            <td align="left" rowspan="1" colspan="1"/>
                            <td colspan="2" align="left" rowspan="1">9HC×9MC</td>
                            <td colspan="2" align="left" rowspan="1">25HC×25MC</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">projection</td>
                            <td align="left" rowspan="1" colspan="1">dist.</td>
                            <td align="left" rowspan="1" colspan="1">comp.</td>
                            <td align="left" rowspan="1" colspan="1">dist.</td>
                            <td align="left" rowspan="1" colspan="1">comp.</td>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">PYR<inline-formula><inline-graphic xlink:href="pone.0108590.e131.jpg"/></inline-formula>PYR (local)</td>
                            <td align="left" rowspan="1" colspan="1">21.1</td>
                            <td align="left" rowspan="1" colspan="1">21.0</td>
                            <td align="left" rowspan="1" colspan="1">0.9</td>
                            <td align="left" rowspan="1" colspan="1">0.3</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">PYR<inline-formula><inline-graphic xlink:href="pone.0108590.e132.jpg"/></inline-formula>PYR (global)</td>
                            <td align="left" rowspan="1" colspan="1">20.8</td>
                            <td align="left" rowspan="1" colspan="1">21.2</td>
                            <td align="left" rowspan="1" colspan="1">8.0</td>
                            <td align="left" rowspan="1" colspan="1">0.4</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">PYR<inline-formula><inline-graphic xlink:href="pone.0108590.e133.jpg"/></inline-formula>RSNP</td>
                            <td align="left" rowspan="1" colspan="1">22.6</td>
                            <td align="left" rowspan="1" colspan="1">21.9</td>
                            <td align="left" rowspan="1" colspan="1">37.0</td>
                            <td align="left" rowspan="1" colspan="1">28.8</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">PYR<inline-formula><inline-graphic xlink:href="pone.0108590.e134.jpg"/></inline-formula>BAS</td>
                            <td align="left" rowspan="1" colspan="1">8.2</td>
                            <td align="left" rowspan="1" colspan="1">7.6</td>
                            <td align="left" rowspan="1" colspan="1">15.0</td>
                            <td align="left" rowspan="1" colspan="1">0.2</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">BAS<inline-formula><inline-graphic xlink:href="pone.0108590.e135.jpg"/></inline-formula>PYR</td>
                            <td align="left" rowspan="1" colspan="1">23.3</td>
                            <td align="left" rowspan="1" colspan="1">39.4</td>
                            <td align="left" rowspan="1" colspan="1">0.5</td>
                            <td align="left" rowspan="1" colspan="1">0.2</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">RSNP<inline-formula><inline-graphic xlink:href="pone.0108590.e136.jpg"/></inline-formula>PYR</td>
                            <td align="left" rowspan="1" colspan="1">22.7</td>
                            <td align="left" rowspan="1" colspan="1">39.9</td>
                            <td align="left" rowspan="1" colspan="1">0.0</td>
                            <td align="left" rowspan="1" colspan="1">3.9</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">L4<inline-formula><inline-graphic xlink:href="pone.0108590.e137.jpg"/></inline-formula>PYR</td>
                            <td align="left" rowspan="1" colspan="1">44.1</td>
                            <td align="left" rowspan="1" colspan="1">45.4</td>
                            <td align="left" rowspan="1" colspan="1">15.5</td>
                            <td align="left" rowspan="1" colspan="1">2.3</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">background <inline-formula><inline-graphic xlink:href="pone.0108590.e138.jpg"/></inline-formula>PYR</td>
                            <td align="left" rowspan="1" colspan="1">32.3</td>
                            <td align="left" rowspan="1" colspan="1">31.3</td>
                            <td align="left" rowspan="1" colspan="1">17.3</td>
                            <td align="left" rowspan="1" colspan="1">1.3</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">total</td>
                            <td align="left" rowspan="1" colspan="1">22.2</td>
                            <td align="left" rowspan="1" colspan="1">25.2</td>
                            <td align="left" rowspan="1" colspan="1">17.9</td>
                            <td align="left" rowspan="1" colspan="1">9.8</td>
                          </tr>
                        </tbody>
                      </table>
                    </alternatives>
                    <table-wrap-foot>
                      <fn id="nt101">
                        <label/>
                        <p>Projection-wise synapse loss in % for the default (9HC×9MC) and large-scale (25HC×25MC) network. See text for the respective differences between the distorted (dist.) and compensated (comp.) networks.</p>
                      </fn>
                    </table-wrap-foot>
                  </table-wrap>
                  <p><italic>Large-scale model.</italic> The ability of the network to perform pattern completion and exhibit pattern rivalry was tested on the ESS for the large-scale model with 25 HCs and 25 MCs per HC. From the start, we use a background pool with 5000 Poisson sources and 100 sources per neuron to model the diffusive background noise, as used for the compensation of synaptic weight noise (Section 3.1.5). As with the small-scale network, the synapse loss of 17.9% shows significant heterogeneity (<xref ref-type="table" rid="pone-0108590-t001">Table 1</xref>), and affects mainly projections from PYR to inhibitory cells, but also connections from the background and L4 stimulus. In contrast to the idealized case in Section 3.1.4, where each synapse is deleted with a given probability, the synapse loss here happens for entire projections at the same time, i.e. all synapses between two populations are either realized completely or not at all. We note that the realization of all PYR-RSNP synapses is a priori impossible, as each RSNP cell has <inline-formula><inline-graphic xlink:href="pone.0108590.e139.jpg"/></inline-formula> potential pre-synaptic neurons (cf. scaling rules in section S2.4 of <xref ref-type="supplementary-material" rid="pone.0108590.s002">Appendix S2</xref>), which is more than the maximum possible number of pre-synaptic neurons per HICANN (14336, see Section 2.1.1). The simulation results with 20% synaptic weight noise for pattern completion and pattern rivalry are shown in <xref ref-type="fig" rid="pone-0108590-g012">Figure 12</xref>
<bold>K</bold> and <bold>L</bold> (red curves). In both cases the network functionality is clearly impaired. In particular, the ability of an active pattern to suppress other patterns is noticeably detoriated, which can be traced back to the loss of 37% of PYR-RNSP connections.</p>
                  <p>In order to restore the functionality of the network we used a two-fold approach: First, we attempted to reduce the binary loss of PYR-RSNP projections by reducing the number of PYR cells per MC from 30 to 20, which decreases the total number of neurons in the network, as well as the number of potential pre-synaptic neurons per RNSP cell. The synapse loss was thereby reduced to 28.8% for PYR-RSNP projections and was eliminated almost completely for all other projections (<xref ref-type="table" rid="pone-0108590-t001">Table 1</xref>). Secondly, we compensated for the remaining synapse loss by scaling the synaptic weights as described in Section 3.1.4.</p>
                  <p>After application of these compensation mechanisms, we were able to effectively restore the original functionality of the network. Both pattern completion and attentional blink can be clearly observed. The small remaining deviations from the default model can be attributed to the inhomogeneity of the synapse loss and the fixed delays on the wafer.</p>
                </sec>
              </sec>
              <sec id="s2g">
                <title>3.2 Synfire Chain with Feed-Forward Inhibition</title>
                <p>Our second benchmark network is a model of a series of consecutive neuron groups with feed-forward inhibition, called <italic>synfire chain</italic> from here on <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>. This network acts as a selective filter to a synchronous spike packet that is applied to the first neuron group of the chain. The behavior of the network is quantified by the dependence of the filter properties on the strength and temporal width of the initial pulse. Our simulations show that synapse loss can be compensated in a straightforward manner. Further, the major impact of weight noise on the network functionality stems from weight variations in background synapses, which can be countered by modification of synaptic and neuronal parameters. The effect of fixed axonal delays on the filtering properties of the network can be countered only to a limited extent by modifying synaptic time constants and the strength of local inhibition. Simulations using the ESS show that the developed compensation methods are applicable simultaneously. Furthermore, they highlight some further sources of potential failure of pulse propagation that originate from bandwidth limitations in the off-wafer communication infrastructure.</p>
                <sec id="s2g1">
                  <title>3.2.1 Architecture</title>
                  <p>Feed-forward networks with a convergent-divergent connection scheme provide an ideal substrate for the investigation of activity transport. Insights have been gained regarding the influence of network characteristics on its response to different types of stimulus <xref rid="pone.0108590-Aertsen1" ref-type="bibr">[71]</xref>–<xref rid="pone.0108590-Vogels1" ref-type="bibr">[73]</xref>. Similar networks were also considered as computational entities rather than purely as a medium for information transport <xref rid="pone.0108590-Abeles1" ref-type="bibr">[74]</xref>–<xref rid="pone.0108590-Kremkow2" ref-type="bibr">[76]</xref>. The behavior of this particular network has been shown to depend on the connection density between consecutive groups, on the balance of excitation and inhibition as well as on the presence and magnitude of axonal delays in <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>. This makes it sensitive to hardware-specific effects such as an incomplete mapping of synaptic connectivity, the variation of synaptic weights, bandwidth limitations which cause loss of individual spike events and limited availability of adjustable axonal delays and jitter in the spike timing that may be introduced by different hardware components.</p>
                  <p>The feed-forward network comprises a series of successive neuron groups, each group containing one excitatory and one inhibitory population. The excitatory population consists of 100 regular-spiking (RS), the inhibitory of 25 fast-spiking (FS) cells. Both cell types are modeled as LIF neurons with exponentially shaped synaptic conductance without adaptation, as described in section 2.1.1. Both RS and FS neurons are parameterized using identical values (Table S3.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>).</p>
                  <p>Each excitatory population projects to both populations of the consecutive group while the inhibitory population projects to the excitatory population in its local group (<xref ref-type="fig" rid="pone-0108590-g013">Figure 13</xref>
<bold>A</bold>). There are no recurrent connections within the RS or FS populations. In the original publication <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>, each neuron was stimulated independently by a Gaussian noise current. Because the hardware system does not offer current stimulus for all neurons, all neurons in the network received stimulus from independent Poisson spike sources. For Gaussian current stimulus, as well as in the diffusion limit of Poisson stimulus (high input rates, low synaptic weights), the membrane potential is stationary Gaussian, with an autocorrelation dominated by the membrane time constant. The only remaining differences are due to the finite, but small, synaptic time constants. The rate and synaptic weight of the background stimulus were adjusted to obtain similar values for the mean and variance of the membrane potential, resulting in a firing rate of 2 kHz with a synaptic weight of 1 nS.</p>
                  <fig id="pone-0108590-g013" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g013</object-id>
                    <label>Figure 13</label>
                    <caption>
                      <title>Synfire chain network.</title>
                      <p>(A) Connectivity of the synfire chain with feed-forward inhibition <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>. Excitatory projections are shown in red, inhibitory in blue. In the default realization the network consists of six consecutive groups. The local FS <inline-formula><inline-graphic xlink:href="pone.0108590.e140.jpg"/></inline-formula> RS projection has an adjustable delay <inline-formula><inline-graphic xlink:href="pone.0108590.e141.jpg"/></inline-formula>, which affects the network dynamics. The intergroup delay is set to 20 ms for visualization purposes following the previous work; this has no influence on the filter properties because the delay of both intergroup projections is equal. The background stimulus is realized using random Gaussian current (original) and Poisson background spikes (adapted version for the hardware). The parameters for neurons and connections are given in Table S3.1 and Table S3.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>. (B) Exemplary raster plot of the network behavior. The first group receives a pulse packet with <inline-formula><inline-graphic xlink:href="pone.0108590.e142.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e143.jpg"/></inline-formula>ms, which propagates as a synchronous spike volley along the chain. (C) Characterization of the network behavior in the <inline-formula><inline-graphic xlink:href="pone.0108590.e144.jpg"/></inline-formula>) state space. Each marker represents the initial stimulus parameters <inline-formula><inline-graphic xlink:href="pone.0108590.e145.jpg"/></inline-formula>. The stimulus parameters were selected randomly from the region (<inline-formula><inline-graphic xlink:href="pone.0108590.e146.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e147.jpg"/></inline-formula>ms). The region with (<inline-formula><inline-graphic xlink:href="pone.0108590.e148.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e149.jpg"/></inline-formula>ms) was simulated more frequently to increase the resolution near the convergence points of the propagation. The marker color is linearly scaled with the activity in the last group, <inline-formula><inline-graphic xlink:href="pone.0108590.e150.jpg"/></inline-formula>, being blue for <inline-formula><inline-graphic xlink:href="pone.0108590.e151.jpg"/></inline-formula> and red for <inline-formula><inline-graphic xlink:href="pone.0108590.e152.jpg"/></inline-formula> and is set to red for <inline-formula><inline-graphic xlink:href="pone.0108590.e153.jpg"/></inline-formula>. To improve visibility, the background is colored according to the color of the nearest marker, red for <inline-formula><inline-graphic xlink:href="pone.0108590.e154.jpg"/></inline-formula> and blue otherwise. Experiments where the RS group did not fire are marked as <inline-formula><inline-graphic xlink:href="pone.0108590.e155.jpg"/></inline-formula>. The gray lines originating from each marker denote the direction towards the pulse volley parameters <inline-formula><inline-graphic xlink:href="pone.0108590.e156.jpg"/></inline-formula>. The green line shows a fit to the separatrix between zero and nonzero activity at the last group of the synfire chain (see section 3.2.2 for details). This approximation is used to compare the behavior of different modifications of the original network. The dashed black and white lines show four exemplary trajectories through the <inline-formula><inline-graphic xlink:href="pone.0108590.e157.jpg"/></inline-formula> state space.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g013"/>
                  </fig>
                  <p>The initial synchronous stimulus pulse is emitted by a population of spike sources, which has the same size and connection properties as a single RS population within the network. A temporally localized <italic>pulse packet</italic> was used as a stimulus, whereby each of the 100 spike sources emitted <inline-formula><inline-graphic xlink:href="pone.0108590.e158.jpg"/></inline-formula> spikes that were sampled from a Gaussian distribution with a common mean time and a given standard deviation <inline-formula><inline-graphic xlink:href="pone.0108590.e159.jpg"/></inline-formula>. The variables <inline-formula><inline-graphic xlink:href="pone.0108590.e160.jpg"/></inline-formula> are later used to describe the characteristics of the activity in the <italic>i</italic>th group of the chain, referring to the temporal pulse width and number of spike pulses per neuron, respectively.</p>
                </sec>
                <sec id="s2g2">
                  <title>3.2.2 Functionality criteria</title>
                  <p>The functionality of the feed-forward network is assessed by examining the propagation of a synchronous pulse after the stimulus is applied to the first group in the chain (<xref ref-type="fig" rid="pone-0108590-g013">Figure 13</xref>
<bold>B</bold>). The propagation is quantified by applying initial stimuli of varying strength <inline-formula><inline-graphic xlink:href="pone.0108590.e161.jpg"/></inline-formula> and temporal spread <inline-formula><inline-graphic xlink:href="pone.0108590.e162.jpg"/></inline-formula>. For each synfire group <inline-formula><inline-graphic xlink:href="pone.0108590.e163.jpg"/></inline-formula>, the activation is determined by setting <inline-formula><inline-graphic xlink:href="pone.0108590.e164.jpg"/></inline-formula> to the number of emitted spikes divided by the number of neurons in the RS population. <inline-formula><inline-graphic xlink:href="pone.0108590.e165.jpg"/></inline-formula> is the standard deviation of the spike pulse times. Typically, the resulting “trajectory” in the <inline-formula><inline-graphic xlink:href="pone.0108590.e166.jpg"/></inline-formula> space (<xref ref-type="fig" rid="pone-0108590-g013">Figure 13</xref>) is attracted to one of two fixed points: either near <inline-formula><inline-graphic xlink:href="pone.0108590.e167.jpg"/></inline-formula>, i.e., the pulse packet propagates as a synchronous spike volley, and <inline-formula><inline-graphic xlink:href="pone.0108590.e168.jpg"/></inline-formula>, i.e., the propagation dies out (e.g., <xref ref-type="fig" rid="pone-0108590-g014">Figure 14</xref>
<bold>A</bold>).</p>
                  <fig id="pone-0108590-g014" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g014</object-id>
                    <label>Figure 14</label>
                    <caption>
                      <title>Effect and compensation of synapse loss for the synfire chain network.</title>
                      <p>(A) Synfire network with 37.5% synapse loss applied to all connections within the network. External connections (synchronous stimulus and background) are not affected. (B) Raster plot with active compensation at 90% synapse loss. (C) Activation <inline-formula><inline-graphic xlink:href="pone.0108590.e169.jpg"/></inline-formula> in each group <inline-formula><inline-graphic xlink:href="pone.0108590.e170.jpg"/></inline-formula> with varying values of synapse loss. (D) <inline-formula><inline-graphic xlink:href="pone.0108590.e171.jpg"/></inline-formula> as in C but with active compensation. (E) Pulse width <inline-formula><inline-graphic xlink:href="pone.0108590.e172.jpg"/></inline-formula> in each group <inline-formula><inline-graphic xlink:href="pone.0108590.e173.jpg"/></inline-formula> with varying values of synapse loss. (F) Pulse width as in E but with active compensation. (G) Comparison of approximated separatrix locations for synapse loss values from 0% to 50%. The lines for 40% and 50% are missing because no stable region exists. (H) Approximated separatrix locations with active compensation.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g014"/>
                  </fig>
                  <p>The network behavior is characterized by the separating line between successful and extinguished propagation in the state space <inline-formula><inline-graphic xlink:href="pone.0108590.e174.jpg"/></inline-formula> of the initial stimulus; this line will be called <italic>separatrix</italic> from here on. The differentiation between extinguished and successful propagation is defined by <inline-formula><inline-graphic xlink:href="pone.0108590.e175.jpg"/></inline-formula> resp. <inline-formula><inline-graphic xlink:href="pone.0108590.e176.jpg"/></inline-formula> in the last (6th) group. This is justified because in the undistorted case, <inline-formula><inline-graphic xlink:href="pone.0108590.e177.jpg"/></inline-formula> is clustered around the values 0 and 1 (Figure S3.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>). Due to the statistic nature of the connectivity, background stimulus and pulse packet, the macroscopic parameters <inline-formula><inline-graphic xlink:href="pone.0108590.e178.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e179.jpg"/></inline-formula> do not fully determine the behavior of the system. This means that in the reference simulation, there is a small region around the separatrix where the probability of a stable pulse propagation is neither close to zero nor to one. Thus, in addition to the location of the separatrix (see section S3.3.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>), the width of this region is taken as a functionality criterion.</p>
                  <p>The background stimulus is adjusted such that the spontaneous firing rate in the network is below <inline-formula><inline-graphic xlink:href="pone.0108590.e180.jpg"/></inline-formula> Hz, in accordance with <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>. In cases in which distortion mechanisms induce a much stronger background firing, the spike trains are filtered before the analysis by removing spikes which appear not to be within a spike volley (Section S3.3.4 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>).</p>
                </sec>
                <sec id="s2g3">
                  <title>3.2.3 Synapse loss</title>
                  <p>Homogeneous synapse loss affects the strength of excitatory and inhibitory projections equally on average. Additionally, the number of incoming spikes seen by a single neuron varies as synapses are removed probabilistically, in contrast to the undistorted model with a fixed number of incoming connections for each neuron type (Table S3.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>). Synapse loss was applied to all internal connections as well as to the connection from the synchronized stimulus population to the first group in the network; background stimulus was not affected (cf. section 2.4). <xref ref-type="fig" rid="pone-0108590-g014">Figure 14</xref>
<bold>A</bold> shows a single experiment with synapse loss of 37.5%, contrasting with the undistorted case (<xref ref-type="fig" rid="pone-0108590-g013">Figure 13</xref>
<bold>A</bold>). Above a certain value of synapse loss, the signal fails to propagate to the last group. As shown in <xref ref-type="fig" rid="pone-0108590-g014">Figure 14</xref>
<bold>C</bold> and <bold>E</bold> for one stimulus parameter set, successful propagation stops at a synapse loss value between 30% and 40%. The pulse width increases with rising synapse loss due to the increasing variation of synaptic conductance for individual neurons (<bold>E</bold>). The effect is reversed by increasing all synaptic weights in the network by a factor of <inline-formula><inline-graphic xlink:href="pone.0108590.e181.jpg"/></inline-formula>, with <inline-formula><inline-graphic xlink:href="pone.0108590.e182.jpg"/></inline-formula> being the probability of synapse loss. This compensation strategy can effectively counter synapse loss of up to 90% (<bold>B</bold>, <bold>D</bold>) and the pulse width increase is shifted to larger values of synapse loss (<bold>F</bold>). The distortion mechanism has only a minor effect on the <inline-formula><inline-graphic xlink:href="pone.0108590.e183.jpg"/></inline-formula>-value of the separatrix in the depicted region (<bold>G</bold>). However, the location of the separatrix at <inline-formula><inline-graphic xlink:href="pone.0108590.e184.jpg"/></inline-formula> rises with synapse loss until it reaches the fixed point at approx. <inline-formula><inline-graphic xlink:href="pone.0108590.e185.jpg"/></inline-formula>, at which point a bifurcation occurs and the the attractor region for <inline-formula><inline-graphic xlink:href="pone.0108590.e186.jpg"/></inline-formula> disappears (as described in <xref rid="pone.0108590-Diesmann3" ref-type="bibr">[77]</xref> for the case of varying weights). In the compensated case, the separatrix locations are identical with the undistorted case within the measurement precision.</p>
                </sec>
                <sec id="s2g4">
                  <title>3.2.4 Synaptic weight noise</title>
                  <p>The effect of synaptic weight noise is shown in <xref ref-type="fig" rid="pone-0108590-g015">Figure 15</xref>. Similarly to the effect of synapse loss, the region of stable propagation shrinks (<bold>B</bold>); additionally, the border between the regions of stable and extinguished propagations becomes less sharp (<bold>A</bold>). This is caused by two effects: Varying strength of the background stimulus, and varying strength of the synaptic connections within the network. The first effect is significant because the background stimulus to each neuron is provided through a single synapse. Thus, the effective resting potential of each neuron is shifted, significantly changing its excitability and, in some cases, inducing spontaneous activity. One possibility of countering this effect is to utilize several synapses for background stimulus thereby averaging out the effect of individual strong or weak synapses, as has been done in the case of the L2/3 model in section 3.1.5. Here, a different method was employed: The resting potential <inline-formula><inline-graphic xlink:href="pone.0108590.e187.jpg"/></inline-formula> was raised while simultaneously lowering the synaptic weight from the background stimulus. The parameters were chosen in such a way that the mean and variance of the distribution of membrane voltages in each neuron population was kept at the value of the undistorted network:<disp-formula id="pone.0108590.e188"><graphic xlink:href="pone.0108590.e188.jpg" position="anchor" orientation="portrait"/><label>(10)</label></disp-formula>
<disp-formula id="pone.0108590.e189"><graphic xlink:href="pone.0108590.e189.jpg" position="anchor" orientation="portrait"/><label>(11)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0108590.e190.jpg"/></inline-formula> represents the effect of the background stimulus, <inline-formula><inline-graphic xlink:href="pone.0108590.e191.jpg"/></inline-formula> being the PSP kernel, and <inline-formula><inline-graphic xlink:href="pone.0108590.e192.jpg"/></inline-formula> appears due to synaptic weight noise. In the distorted case, the width of this distribution is a combined effect of the random background stimulus and the weight variation, while in the original case it originates from the stochasticity of the stimulus only. In the undistorted case, <inline-formula><inline-graphic xlink:href="pone.0108590.e193.jpg"/></inline-formula> is 0, and only the first term contributes to <inline-formula><inline-graphic xlink:href="pone.0108590.e194.jpg"/></inline-formula>. With increasing <inline-formula><inline-graphic xlink:href="pone.0108590.e195.jpg"/></inline-formula>, the contribution of the second term to <inline-formula><inline-graphic xlink:href="pone.0108590.e196.jpg"/></inline-formula> increases, which is compensated by changing <inline-formula><inline-graphic xlink:href="pone.0108590.e197.jpg"/></inline-formula> accordingly, keeping <inline-formula><inline-graphic xlink:href="pone.0108590.e198.jpg"/></inline-formula> at the original level. This, in turn, changes <inline-formula><inline-graphic xlink:href="pone.0108590.e199.jpg"/></inline-formula>, which is compensated by a change of <inline-formula><inline-graphic xlink:href="pone.0108590.e200.jpg"/></inline-formula>.</p>
                  <fig id="pone-0108590-g015" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g015</object-id>
                    <label>Figure 15</label>
                    <caption>
                      <title>Effect of synaptic weight noise on the synfire chain model.</title>
                      <p>The spike data for all three plots was filtered to remove spontaneous spikes in individual neurons, which stem from weight increase in some background synapses due to weight noise. (The filter parameters were <inline-formula><inline-graphic xlink:href="pone.0108590.e201.jpg"/></inline-formula>, cf. section S3.3.4 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>) (A) State space at 80% weight noise. The set of inputs that evokes activity in the last group is patchy as a consequence of the distortion mechanism. In the compensated case the separation is sharp again, as shown in Figure S3.3 of <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>. (B) Approximate separatrix locations for smaller values of weight noise. (C) Approximate separatrix locations for the compensated case.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g015"/>
                  </fig>
                  <p>The effect of synaptic weight noise within the network itself is less significant compared to its impact on the noise stimulus. <xref ref-type="fig" rid="pone-0108590-g015">Figure 15</xref>
<bold>C</bold> shows that removing the effect of background stimulus noise alone is sufficient to counteract synaptic noise values of up to 50%.</p>
                </sec>
                <sec id="s2g5">
                  <title>3.2.5 Non-configurable axonal delays</title>
                  <p><xref ref-type="fig" rid="pone-0108590-g016">Figure 16</xref><bold>A</bold> shows the effect of varying axonal delays between the inhibitory and excitatory population of a single synfire group. As was shown in <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>, the delay can be employed to control the position of the separatrix between stable and unstable propagation. Because the axonal delay is not configurable for on-wafer connections, a different method is required to regain the ability to control the separatrix. While section 3.2.3 and section 3.2.4 show that synaptic weight noise and synapse loss can influence the location of the separatrix, a method is required that is independent of those distortion mechanisms. <xref rid="pone.0108590-Diesmann4" ref-type="bibr">[78]</xref> shows that several parameters, including group size and noise level, can modify the separatrix location, albeit for a model without feed-forward inhibition. Here, we investigate to which extent parameter modification can reproduce the effect of variable delays. For very short delays (in this case, 0.1 ms, not shown), stable propagation does not occur, because the onset of local inhibition is nearly synchronous with the onset of external excitation. This effect was countered by increasing the synaptic time constant and simultaneously decreasing the synaptic weight for local inhibition, thus extending the duration of inhibition that acts on the RS population. The inhibitory synaptic time constant was increased by a factor of 3 while simultaneously reducing the synaptic weight of the inhibitory projection. <xref ref-type="fig" rid="pone-0108590-g016">Figure 16</xref>
<bold>B</bold> shows the result of the compensation for 1.5 ms local inhibition delay. For both values of axonal delay, the location of the separatrix can be controlled by changing the weight of inhibition. However, its shape differs from the delay-induced case because of the modified delay mechanism of inhibition. Reduction of the weight beyond a certain point is not possible, as balanced inhibition is required for network functionality <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>. It is important to note that this kind of compensation is specific to the state space region which is examined, and that it can not be extended to arbitrarily large delays.</p>
                  <fig id="pone-0108590-g016" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g016</object-id>
                    <label>Figure 16</label>
                    <caption>
                      <title>Delays in the synfire chain model.</title>
                      <p>(A) Reproduction of <xref rid="pone.0108590-Kremkow1" ref-type="bibr">[70]</xref>, fig. 4c. The location of the separatrix is modified by changing the axonal delay of local inhibition. For a value of 0.4 ms, no stable region is present. (B) The location of the separatrix is modified by varying weights for synapses taking part in local inhibition. The axonal delay of local inhibition was fixed at 1.5 ms and the inhibitory time constant was increased by a factor of 3. The gray region shows the range of the separatrix location for delay values from 1.2 ms to 7 ms (the range in plot A) as reference.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g016"/>
                  </fig>
                </sec>
                <sec id="s2g6">
                  <title>3.2.6 Full simulation of combined distortion mechanisms</title>
                  <p>At last, we simulate the synfire chain with the ESS and compensate simultaneously for all the causes of distortions addressed above. Before running ESS simulations, we have verified the compatibility of the proposed compensation strategies for different distortion mechanisms in software simulations dealing with the simultaneous incidence of synaptic weight noise, synapse loss and non-configurable axonal delays (Section S3.3.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>). We proceed with a quantification of synapse loss after mapping the synfire chain for different network sizes to the hardware. For the ESS simulations we limit the model to very few hardware resources to artificially generate synapse loss, such that all of the above distortion mechanisms are present. Additional hardware simulations investigating the influence of spike loss and jitter on the network functionality are provided in section S3.3.5 of <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>.</p>
                  <p><italic>Synapse loss.</italic> We mapped the synfire chain at different network sizes onto the BrainScaleS wafer-scale hardware in order to quantify the synapse loss (<xref ref-type="fig" rid="pone-0108590-g017">Figure 17</xref>
<bold>A</bold>). For this purpose we developed network scaling rules that depend on the number and the size of the synfire groups (Section S3.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>). Due to its modular structure and feed-forward connectivity scheme, there is no synapse loss for networks with up to 10 000 neurons. However, for network sizes above 30 000 neurons, the ratio of lost synapses increases abruptly. With increasing network size more neurons have to be mapped onto one HICANN thereby reducing the number of hardware synapses per neuron. Moreover, as the group size grows with the network size (cf. Table S3.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s003">Appendix S3</xref>), also the number of pre-synaptic neurons for all neurons mapped onto one HICANN increases, so that the maximum number of inputs to a HICANN, i.e. the synapse drivers, becomes a limiting constraint. The combination of both factors unavoidably leads to synapse loss.</p>
                  <fig id="pone-0108590-g017" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g017</object-id>
                    <label>Figure 17</label>
                    <caption>
                      <title>Distorted and compensated simulations of the feedforward synfire chain on the ESS.</title>
                      <p>(A) Synapse loss after mapping the model with different numbers of neurons onto the BrainScaleS System. (B) (<inline-formula><inline-graphic xlink:href="pone.0108590.e202.jpg"/></inline-formula>,<inline-formula><inline-graphic xlink:href="pone.0108590.e203.jpg"/></inline-formula>) state space on the ESS with default parameters, 20% weight noise, and 27.4% synapse loss. (C) After compensation for all distortion mechanisms, different separatrices are possible by setting different values of the inhibitory weight. (D) Compensated state space belonging to the blue separatrix in C.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g017"/>
                  </fig>
                  <p><italic>Distorted and compensated simulation.</italic> For the ESS simulation, we applied the following modifications to the benchmark network: originally, each cell in the network receives Poisson background stimulus from an individual source with 2000 Hz. Because the off-wafer pulse routing network does not support such high bandwidths (cf. section 2.1.2), we reduce the total number of background sources from 750 to 192 and let each neuron receive input from 8 sources, while decreasing the Poisson rate by a factor of 8, using the same mechanism as for the compensation of synaptic weight noise in the L2/3 model (cf. section 3.1.5). For the same reason, the network was emulated with a speedup factor of 5000 compared to biological real-time, whereby the effective bandwidth for stimulation and recording is doubled with respect to the normal operation with a speedup of 10 000. As seen before, no synapse loss occurs for small networks. However, as discussed for the L2/3 model in Section 3.1.7, one can consider situations where only a small part of the wafer is available for experiments, or where some neurons or synaptic elements are defective or missing a calibration. Therefore, in order to generate synapse loss in the feed-forward network, we limited the network to only 8 out of 48 reticles of the wafer and furthermore declare half of the synapse drivers as not available. This resulted in a total synapse loss of 27.4%. As with the L2/3 model, the synapse loss was not homogeneous but depended strongly on the projection type (<xref ref-type="table" rid="pone-0108590-t002">Table 2</xref>).</p>
                  <table-wrap id="pone-0108590-t002" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.t002</object-id>
                    <label>Table 2</label>
                    <caption>
                      <title>Projection-wise synapse loss of the synfire chain model after the mapping process.</title>
                    </caption>
                    <alternatives>
                      <graphic id="pone-0108590-t002-2" xlink:href="pone.0108590.t002"/>
                      <table frame="hsides" rules="groups">
                        <colgroup span="1">
                          <col align="left" span="1"/>
                          <col align="center" span="1"/>
                        </colgroup>
                        <thead>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">projection</td>
                            <td align="left" rowspan="1" colspan="1">synapse loss [%]</td>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">Pulse Packet <inline-formula><inline-graphic xlink:href="pone.0108590.e204.jpg"/></inline-formula> RS<sub>0</sub>
</td>
                            <td align="left" rowspan="1" colspan="1">21.3</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">Pulse Packet <inline-formula><inline-graphic xlink:href="pone.0108590.e205.jpg"/></inline-formula> FS<sub>0</sub>
</td>
                            <td align="left" rowspan="1" colspan="1">12.7</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">RS<italic><sub>n</sub></italic>
<inline-formula><inline-graphic xlink:href="pone.0108590.e206.jpg"/></inline-formula> RS<italic><sub>n</sub></italic>
<sub>+1</sub>
</td>
                            <td align="left" rowspan="1" colspan="1">32.4</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">RS<italic><sub>n</sub></italic>
<inline-formula><inline-graphic xlink:href="pone.0108590.e207.jpg"/></inline-formula> FS<italic><sub>n</sub></italic>
<sub>+1</sub>
</td>
                            <td align="left" rowspan="1" colspan="1">32.0</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">FS<italic><sub>n</sub></italic>
<inline-formula><inline-graphic xlink:href="pone.0108590.e208.jpg"/></inline-formula> RS<italic><sub>n</sub></italic>
</td>
                            <td align="left" rowspan="1" colspan="1">20.8</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">Poisson background <inline-formula><inline-graphic xlink:href="pone.0108590.e209.jpg"/></inline-formula> ALL</td>
                            <td align="left" rowspan="1" colspan="1">0</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">total</td>
                            <td align="left" rowspan="1" colspan="1">27.4</td>
                          </tr>
                        </tbody>
                      </table>
                    </alternatives>
                  </table-wrap>
                  <p>We simulated the synfire chain with default neuron and synapse parameters on the ESS with 20% synaptic weight noise and the above synapse loss. The <inline-formula><inline-graphic xlink:href="pone.0108590.e210.jpg"/></inline-formula> state space (<xref ref-type="fig" rid="pone-0108590-g017">Figure 17</xref>
<bold>B</bold>) shows no stable point of propagation. This can be mainly attributed to the small and non-configurable axonal delays which are in the range of 0.6 ms to 1.1 ms for the chosen speedup factor of 5000.</p>
                  <p>In order to recover the original behavior, we applied the previously developed compensation methods described in Sections 3.2.3 to 3.2.5. Synapse loss was compensated separately for each projection type using <xref ref-type="table" rid="pone-0108590-t002">Table 2</xref>. For synaptic weight noise effectively two compensation methods were applied, as, by using 8 Poisson sources per neuron instead of one, the effect of weight variations is already reduced. Therefore, this fact was considered in the implementation of the second compensation method that scales the synaptic weight and shifts the resting potential <inline-formula><inline-graphic xlink:href="pone.0108590.e211.jpg"/></inline-formula> to keep the mean and variance of the membrane voltage constant (Section 3.2.4), by replacing <inline-formula><inline-graphic xlink:href="pone.0108590.e212.jpg"/></inline-formula> with <inline-formula><inline-graphic xlink:href="pone.0108590.e213.jpg"/></inline-formula> in <xref ref-type="disp-formula" rid="pone.0108590.e189">Equation 11</xref>. We were able to compensate for all distortion mechanisms while still maintaining control over the position of the separatrix (<xref ref-type="fig" rid="pone-0108590-g017">Figure 17</xref>
<bold>C</bold>).</p>
                  <p>However, we encountered some abnormalities as can be seen in <xref ref-type="fig" rid="pone-0108590-g017">Figure 17</xref>
<bold>D</bold> showing the <inline-formula><inline-graphic xlink:href="pone.0108590.e214.jpg"/></inline-formula> state space for one of the separatrices: For <inline-formula><inline-graphic xlink:href="pone.0108590.e215.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e216.jpg"/></inline-formula> one can recognize a purple region indicating that not all RS cells of the last group spiked. Actually, spikes occurred for all RS cells in the simulated hardware network, but not all spikes were recorded because they were lost in the off-wafer communication network (Section 2.1.2). For very small <inline-formula><inline-graphic xlink:href="pone.0108590.e217.jpg"/></inline-formula> an additional effect can appear: input bandwidth limitations can result in very dense pulse volleys not being propagated through the synfire chain, as can be seen e.g. for the blue point with <inline-formula><inline-graphic xlink:href="pone.0108590.e218.jpg"/></inline-formula>ms and <inline-formula><inline-graphic xlink:href="pone.0108590.e219.jpg"/></inline-formula> in the left of <bold>D</bold>. In that particular case the large majority of input spikes were lost in the off-wafer communication network so that they did not even reach the first synfire group. We remark that this effect only appeared for <inline-formula><inline-graphic xlink:href="pone.0108590.e220.jpg"/></inline-formula> smaller than 0.1 ms.</p>
                </sec>
              </sec>
              <sec id="s2h">
                <title>3.3 Self-Sustained Asynchronous Irregular Activity</title>
                <p>Our third benchmark is a cortically inspired network with random, distance-dependent connectivity which displays self-sustained asynchronous and irregular firing (short: “AI network”). We define functionality measures on several levels of abstraction, starting from single network observables such as the network firing rate, the correlation coefficient and the coefficient of variation, the properties of the power spectrum of the network activity, up to global behavior such as the dependence of network dynamics on the internal synaptic weights <inline-formula><inline-graphic xlink:href="pone.0108590.e221.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e222.jpg"/></inline-formula>. We test two compensation strategies based on a mean field approach and on iterative modification of individual neuron parameters. While the first method offers a way to control the mean firing rate in the presence of synapse loss, the second is applicable to synapse loss and fixed-pattern weight noise simultaneously, in contrast to the other presented compensation methods. Non-configurable axonal delays do not significantly affect the network functionality because the intrinsic hardware delay is approximately equal to the delay utilized in the model. A scaling method for the network size is introduced and the effectivity of the second compensation method was demonstrated using the ESS on a large network with mapping-induced synapse loss and imposed fixed-pattern synapse noise.</p>
                <sec id="s2h1">
                  <title>3.3.1 Architecture</title>
                  <p>Self-sustained states in spiking neural networks are known to be exquisitely sensitive to the correlation dynamics generated by recurrent activity <xref rid="pone.0108590-Kumar1" ref-type="bibr">[79]</xref>, <xref rid="pone.0108590-ElBoustani1" ref-type="bibr">[80]</xref>. Because of this sensitivity, a model of self-sustained activity within the asynchronous-irregular regime can provide a strong comparison between hardware and software platforms, by requiring the hardware network to reproduce the low firing, weakly correlated, and highly irregular dynamics of this state. Notably, it is often observed that this activity regime provides a good match to the dynamics observed experimentally in the awake, activated cortex <xref rid="pone.0108590-Destexhe1" ref-type="bibr">[81]</xref>–<xref rid="pone.0108590-Destexhe2" ref-type="bibr">[83]</xref>. Additionally, one can note that the self-sustained activity regime provides an interesting test of the BrainScaleS hardware system, as in this state, the model network is not driven by external Poisson input, but has dynamics dominated by internally generated noise <xref rid="pone.0108590-Destexhe3" ref-type="bibr">[84]</xref>, beyond the initial brief Poisson stimulation to a small percentage of the network.</p>
                  <p>The self-sustained regime constitutes an attractor of a dynamical system <xref rid="pone.0108590-Amit1" ref-type="bibr">[85]</xref>. Networks based on this principle have been implemented in neuromorphic VLSI hardware <xref rid="pone.0108590-Giulioni1" ref-type="bibr">[86]</xref>.</p>
                  <p>Here, we used a reduced model based on that published in <xref rid="pone.0108590-Destexhe4" ref-type="bibr">[87]</xref>. Neurons in the network followed the AdEx <xref ref-type="disp-formula" rid="pone.0108590.e002">equations 1</xref> to <xref ref-type="disp-formula" rid="pone.0108590.e004">3</xref> with parameters as in <xref rid="pone.0108590-Muller1" ref-type="bibr">[88]</xref>, modeling regular spiking pyramidal cells (PY) with spike frequency adaptation <xref rid="pone.0108590-Connors1" ref-type="bibr">[89]</xref> and fast spiking inhibitory cells (INH) with relatively little spike frequency adaptation. Instead of explicitly modeling the thalamocortical or corticocortical networks, as in the previous work, we have chosen to modify the model, simplifying it to a single two-dimensional toroidal sheet and adding local connections and conduction delays. The addition of local connectivity follows the experimental observation that horizontal connections in neocortex project, for the most part, to their immediate surroundings <xref rid="pone.0108590-Hellwig1" ref-type="bibr">[90]</xref>, while the choice of linear conduction delays reflects electrophysiological estimates of conduction velocity in these unmyelinated horizontal fibers, in the range of 0.1 to 0.5 m s<sup>−1</sup>
<xref rid="pone.0108590-Hirsch1" ref-type="bibr">[91]</xref>–<xref rid="pone.0108590-Telfeian1" ref-type="bibr">[95]</xref>. Propagation delays are known to add richness to the spatiotemporal dynamics of neural network models <xref rid="pone.0108590-Roxin1" ref-type="bibr">[96]</xref>, and in this case are observed to expand the region in the 2D space spanned by the excitatory and inhibitory conductances that supports self-sustained activity, albeit only slightly.</p>
                  <p><xref ref-type="fig" rid="pone-0108590-g018">Figure 18</xref> shows a schematic of the AI network with its distance-dependent connectivity. A small part of the neurons is stimulated at the beginning of the experiment. Depending on its parameters, the network is able to sustain asynchronous irregular firing activity. The details about the architecture and the parameters used are given in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>.</p>
                  <fig id="pone-0108590-g018" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g018</object-id>
                    <label>Figure 18</label>
                    <caption>
                      <title>Schematic of the connectivity of the random cortical network.</title>
                      <p>Excitatory PY and inhibitory INH neurons are connected randomly with a spatial, Gaussian connection probability profile. The connection properties are given in Appendix S4. A small part of the network is stimulated in the beginning of the experiment.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g018"/>
                  </fig>
                </sec>
                <sec id="s2h2">
                  <title>3.3.2 Functionality criteria</title>
                  <p>The global functionality criterion for this network consists of the ability to sustain activity in an asynchronous and irregular activity regime. The activity is considered self-sustained upon persistence to the end of the chosen simulation period. The activity characteristics are quantified for the pyramidal cells using the mean and variance of the firing rates, the irregularity of individual spike trains (<inline-formula><inline-graphic xlink:href="pone.0108590.e223.jpg"/></inline-formula>, see Equation S4.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>), the synchrony via the correlation coefficient (CC, Equation S4.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>) and the power spectrum (see, e.g. 3.1.4 in <xref rid="pone.0108590-Rieke1" ref-type="bibr">[97]</xref>) of the excitatory activity. The implementation details are given in section S4.2 of <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>.</p>
                  <p>These criteria were evaluated for a range of excitatory and inhibitory synaptic weights <inline-formula><inline-graphic xlink:href="pone.0108590.e224.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e225.jpg"/></inline-formula> for the default network consisting of 3920 neurons. <xref ref-type="fig" rid="pone-0108590-g019">Figure 19</xref> (<bold>A</bold>) shows the region in the (<inline-formula><inline-graphic xlink:href="pone.0108590.e226.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e227.jpg"/></inline-formula>) parameter space that allows self-sustained activity, which is achieved at pyramidal firing rates above 8 Hz (<bold>G</bold>).</p>
                  <fig id="pone-0108590-g019" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g019</object-id>
                    <label>Figure 19</label>
                    <caption>
                      <title>Behavior of the undistorted AI network.</title>
                      <p>On the top: survival time (A), mean firing rate (B), coefficient of variance <inline-formula><inline-graphic xlink:href="pone.0108590.e228.jpg"/></inline-formula> (C), coefficient of correlation CC (D) and position of peak in power spectrum of global activity (E) in the parameter space for <inline-formula><inline-graphic xlink:href="pone.0108590.e229.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e230.jpg"/></inline-formula> for the default network with 3920 neurons without any distortions. (F) Power spectrum of the global pyramidal activity for the state (<inline-formula><inline-graphic xlink:href="pone.0108590.e231.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e232.jpg"/></inline-formula>). The population activity was binned with a time of <inline-formula><inline-graphic xlink:href="pone.0108590.e233.jpg"/></inline-formula>ms, the raw spectrum is shown in gray, the blue curve shows a Gauss-filtered (<inline-formula><inline-graphic xlink:href="pone.0108590.e234.jpg"/></inline-formula>Hz) version for better visualization. The position of the peak in the filtered version was used for (E). In (G–J) the dependence of single criteria on the mean firing rate is shown: survival time (G), <inline-formula><inline-graphic xlink:href="pone.0108590.e235.jpg"/></inline-formula> (H), CC (I), position of peak in power spectrum (J). In the last three plots only surviving states of the (<inline-formula><inline-graphic xlink:href="pone.0108590.e236.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e237.jpg"/></inline-formula>) space were considered.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g019"/>
                  </fig>
                  <p>The coefficient of variation of the firing rates across neurons (<inline-formula><inline-graphic xlink:href="pone.0108590.e238.jpg"/></inline-formula>) is small (<inline-formula><inline-graphic xlink:href="pone.0108590.e239.jpg"/></inline-formula>, see the 0% weight noise data in <xref ref-type="fig" rid="pone-0108590-g020">Figure 20</xref>
<bold>B</bold>), as all neurons have identical numbers of afferent synapses with identical weights in each network realization. In addition to the parameter space plots in the top row of <xref ref-type="fig" rid="pone-0108590-g019">Figure 19</xref>, we plot the other criteria against the mean firing rate in the bottom row and recognize the latter as the principal property of each state that mostly determines all other criteria.</p>
                  <fig id="pone-0108590-g020" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g020</object-id>
                    <label>Figure 20</label>
                    <caption>
                      <title>Effect and compensation of synapse weight noise in the AI network.</title>
                      <p>(A) Relative change of the firing rate with respect to the undistorted network averaged over all sustained states for varying synapse weight noise. (B) <inline-formula><inline-graphic xlink:href="pone.0108590.e240.jpg"/></inline-formula> as a function of mean rate for every survived state for varying synapse weight noise. (C and D) Relative change of the firing rate with respect to the undistorted for each state for 50% synapse weight noise(C) and compensated (D). (E) <inline-formula><inline-graphic xlink:href="pone.0108590.e241.jpg"/></inline-formula> as a function of mean rate for varying synapse weight noise. (F) CC as a function of mean rate for varying synapse weight noise. (G and H) Relative change of <inline-formula><inline-graphic xlink:href="pone.0108590.e242.jpg"/></inline-formula> with respect to the undistorted for each state for 50% synapse weight noise(G) and compensated (H). In (C and D) and (G and H): A cross marks a state that was sustained in the undistorted but not sustained in the compared case. A circle marks a state that was not sustained in the original but sustained in the compared case.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g020"/>
                  </fig>
                  <p>The activity is irregular (<inline-formula><inline-graphic xlink:href="pone.0108590.e243.jpg"/></inline-formula>) across all states (<bold>C</bold>) and is mainly determined by the network firing rate: the <inline-formula><inline-graphic xlink:href="pone.0108590.e244.jpg"/></inline-formula> first increases with the firing rate, then saturates and decreases for rates higher than 50 Hz (<bold>H</bold>). Over the entire parameter space, the spike trains of the pyramidal cells are only weakly correlated, with a CC between 0.01 and 0.03.</p>
                  <p>The average CC increases with the firing rate, which can be attributed to local areas in which neurons synchronize over short time periods. At last, we look at the power spectrum of the global pyramidal activity, exemplarily for the (9 nS, 90 nS) state in (<bold>F</bold>). As a comparison for further studies we follow <xref rid="pone.0108590-Brunel1" ref-type="bibr">[82]</xref> and use the position of the non-zero peak in the power-spectrum, which is shown for each (<inline-formula><inline-graphic xlink:href="pone.0108590.e245.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e246.jpg"/></inline-formula>) point (<bold>E</bold>) and as a function of the firing rate (<bold>J</bold>): The position of the power spectrum peak frequency (section S4.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>) increases linearly with the mean firing rate.</p>
                </sec>
                <sec id="s2h3">
                  <title>3.3.3 Non-configurable axonal delays</title>
                  <p>For the analysis of the effects of non-configurable delays we repeated the (<inline-formula><inline-graphic xlink:href="pone.0108590.e247.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e248.jpg"/></inline-formula>) sweep with all axonal delays set to 1.5 ms, cf. section 2.4. This distortion mechanism did not affect any of the functionality criteria, as each neuron still received synaptic input comparable to the reference case. One might expect an influence on the power spectrum of global activity as we switched from distance-dependent delays to a globally constant delay of 1.5 ms as it changes the temporal correlation of the effect of a neuron on all of its efferents. In fact, the power spectra did not change significantly, which can be explained as follows: In the reference case, the <italic>average</italic> of all distance-dependent delays in the network amounts to 1.55 ms (cf. Figure S4.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>), which is close to the constant delay value of 1.5 ms we use to model the non-configurable delays on the hardware. In this particular case, the hardware delay matches the average delay in the network such that no distortion is introduced. Accordingly, parameter space sweeps on the ESS yielded the same results.</p>
                  <p>In <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref> (Section S4.4.2) we provide further simulations on the influence of the distribution of delays on the behavior of the network, showing that the effect of the distance-dependent delays is small and that it is mostly the average delay which matters. In our case, this delay exactly corresponds to the average delays on the wafer when running at a speedup of 10 000 compared to biological real-time, such that there is no need for a compensation here.</p>
                  <p>We note that for variants of this benchmark, where the average network delay is higher or lower than 1.5 ms, there exists a simple but effective compensation strategy by just modifying the speedup of the emulation on the hardware, such that the average network delay is directly mapped onto the hardware delay. We can assume a modified experiment where the average delay amounts to 3 ms. By choosing a speedup of 20 000, this delay can be directly mapped to the 150 ns average delay on the hardware. Such a change of emulation speed is not arbitrary, as one has to make sure that the neural dynamics can still be emulated at the chosen speed (cf. supported parameter ranges in Table S1.1 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref>). Furthermore, the reduced bandwidth for the pulse communication, especially for external stimulation, must be considered. While this is no issue for this self-sustaining kind of network, these conditions must be also fulfilled for potential other networks that are interconnected to the AI network.</p>
                </sec>
                <sec id="s2h4">
                  <title>3.3.4 Synaptic weight noise</title>
                  <p>The effects of synaptic weight noise between 10% and 50% (cf. Section 2.4) on the AI network are shown in <xref ref-type="fig" rid="pone-0108590-g020">Figure 20:</xref> The region of self-sustained states in the (<inline-formula><inline-graphic xlink:href="pone.0108590.e249.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e250.jpg"/></inline-formula>) space is increased by this distortion mechanism, cf. the circles in (<bold>C</bold>) marking states that survived with 50% synaptic weight noise but not in the undistorted case. The firing rate increases with the degree of noise (<bold>A</bold>): the change is the stronger the lower <inline-formula><inline-graphic xlink:href="pone.0108590.e251.jpg"/></inline-formula> and diminishes for states with an already high firing rate in the undistorted case (<bold>C</bold>). Synaptic weight noise leads to an increase of the variation of firing rates (<inline-formula><inline-graphic xlink:href="pone.0108590.e252.jpg"/></inline-formula>), with the change being stronger for high population firing rates (<bold>B</bold>). The <inline-formula><inline-graphic xlink:href="pone.0108590.e253.jpg"/></inline-formula> as a function of firing rates remains unchanged for low rates, but decreases for higher firing rates in proportion to the noise level (<bold>E</bold>). Furthermore, weight noise introduces randomness into the network, thereby reducing synchrony: The pairwise correlation between neurons decreases linearly with the amount of weight noise (<bold>F</bold>). The power spectrum of the global activity is not affected by this distortion mechanism.</p>
                </sec>
                <sec id="s2h5">
                  <title>3.3.5 Synapse loss</title>
                  <p>Synapse loss has a similar influence on the network behavior as synaptic weight noise: <xref ref-type="fig" rid="pone-0108590-g021">Figure 21</xref> shows the results of the <inline-formula><inline-graphic xlink:href="pone.0108590.e254.jpg"/></inline-formula>-<inline-formula><inline-graphic xlink:href="pone.0108590.e255.jpg"/></inline-formula> sweeps for synapse loss values between 10% and 50% (cf. Section 2.4). The region of sustained states increases with synapse loss but not as strongly as for weight noise (<bold>C</bold>). The firing rate increases with synapse loss (<bold>A</bold>): Compared to the change caused by synaptic weight noise, however, the effect is much stronger for synapse loss. The same holds for the variance of the firing rates across the pyramidal neurons, which again increases with synapse loss, as can be seen in (<bold>B</bold>). Note that the <inline-formula><inline-graphic xlink:href="pone.0108590.e256.jpg"/></inline-formula> first increases with the mean rate, then reaches a maximum and finally saddles for high rates. We remark that for high synapse loss, some neurons did not fire at all. Both the irregularity and the correlation of firing decrease with increasing synapse loss, leaving the network still in an asynchronous irregular state (<bold>E</bold> and <bold>F</bold>). Synapse loss shows no effect on the power spectrum of global pyramidal activity.</p>
                  <fig id="pone-0108590-g021" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g021</object-id>
                    <label>Figure 21</label>
                    <caption>
                      <title>Effect and compensation of synapse loss in the AI network.</title>
                      <p>(A) Relative change of the firing rate with respect to the undistorted network averaged over all sustained states for varying synapse loss. (B) <inline-formula><inline-graphic xlink:href="pone.0108590.e257.jpg"/></inline-formula> as a function of mean rate for every survived state for varying synapse loss. (C, D) Relative change of the firing rate with respect to the undistorted case for each state for 50% synapse loss (C) and compensated (D). (E) <inline-formula><inline-graphic xlink:href="pone.0108590.e258.jpg"/></inline-formula> as a function of mean rate for varying synapse loss. (F) CC as a function of mean rate for varying synapse loss. (G, H) Relative change of <inline-formula><inline-graphic xlink:href="pone.0108590.e259.jpg"/></inline-formula> with respect to the undistorted case for each state for 50% synapse loss (G) and compensated (H). In C, D, G and H: A cross marks a state that was sustained in the undistorted but not sustained in the compared case. A circle marks a state, that was not sustained in the original but sustained in the compared case.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g021"/>
                  </fig>
                </sec>
                <sec id="s2h6">
                  <title>3.3.6 Compensation strategies</title>
                  <p>The hardware-induced distortions on the AI network analyzed in the previous sections leave two major criteria that need to be recovered: The population firing rate and the variation of firing rates across the population. We consider the other effects (change of CC, <inline-formula><inline-graphic xlink:href="pone.0108590.e260.jpg"/></inline-formula>, peak frequency in power spectrum) as minor because they are mainly determined by the mean rate and discard them in the following.</p>
                  <p>One apparent approach for recovering the original firing rate is to change the strengths of the synaptic weights <inline-formula><inline-graphic xlink:href="pone.0108590.e261.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e262.jpg"/></inline-formula>. Considering the conducted (<inline-formula><inline-graphic xlink:href="pone.0108590.e263.jpg"/></inline-formula>) parameter space sweeps, we could simply select the distorted state that best matches the criteria of the undistorted reference. However, this method requires to scan <inline-formula><inline-graphic xlink:href="pone.0108590.e264.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e265.jpg"/></inline-formula> over a wide range to finally get to the desired result. Preferably, one wants to have a compensation method that can be applied to a single experiment and works without huge parameter sweeps.</p>
                  <p><italic>Mean field compensation for rate change.</italic> The mean firing rate in the network rises with an increasing synapse loss value. This effect can be understood using a mean-field approach (see, e.g. <xref rid="pone.0108590-Kumar1" ref-type="bibr">[79]</xref>) in which the response rate of a single neuron's firing rate is assumed to be a function of the mean network firing rate.<disp-formula id="pone.0108590.e266"><graphic xlink:href="pone.0108590.e266.jpg" position="anchor" orientation="portrait"/><label>(12)</label></disp-formula>
</p>
                  <p>With this ansatz, which is similar to the approach in <xref rid="pone.0108590-Brunel1" ref-type="bibr">[82]</xref> where the afferent neurons are replaced by independent Poisson processes with equal instantaneous rate in a sparse random network, the mean firing rate in a self-sustained state can be calculated as a stable, self-consistent solution of the gain function being equal to the firing rate of a single neuron:<disp-formula id="pone.0108590.e267"><graphic xlink:href="pone.0108590.e267.jpg" position="anchor" orientation="portrait"/><label>(13)</label></disp-formula>
</p>
                  <p>Here, <inline-formula><inline-graphic xlink:href="pone.0108590.e268.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e269.jpg"/></inline-formula> are the number of pre-synaptic connections of a given neuron, and <inline-formula><inline-graphic xlink:href="pone.0108590.e270.jpg"/></inline-formula> is the modeled synapse loss value. <xref ref-type="fig" rid="pone-0108590-g022">Figure 22</xref>
<bold>A</bold> shows the gain function (right-hand side of <xref ref-type="disp-formula" rid="pone.0108590.e267">Equation 13</xref>) of PY and INH neurons for <inline-formula><inline-graphic xlink:href="pone.0108590.e271.jpg"/></inline-formula> yielding the stable solution <inline-formula><inline-graphic xlink:href="pone.0108590.e272.jpg"/></inline-formula> as the intersection of the <inline-formula><inline-graphic xlink:href="pone.0108590.e273.jpg"/></inline-formula> diagonal and the gain function. Analogously, the solution for <inline-formula><inline-graphic xlink:href="pone.0108590.e274.jpg"/></inline-formula> can be determined as the intersection with the <inline-formula><inline-graphic xlink:href="pone.0108590.e275.jpg"/></inline-formula> line (considering <inline-formula><inline-graphic xlink:href="pone.0108590.e276.jpg"/></inline-formula>). The result justifies the assumption of the mean firing rate of inhibitory and excitatory neurons being equal for <inline-formula><inline-graphic xlink:href="pone.0108590.e277.jpg"/></inline-formula>.</p>
                  <fig id="pone-0108590-g022" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g022</object-id>
                    <label>Figure 22</label>
                    <caption>
                      <title>Mean-field-based compensation method for the AI network.</title>
                      <p>(A) Mean firing rate of a single PY and INH neuron given a poisson stimulus by the external network with a given rate. (B) Compensation factor <inline-formula><inline-graphic xlink:href="pone.0108590.e278.jpg"/></inline-formula> calculated from the data in A. (C) Compensation applied to the self-sustained network (with parameters <inline-formula><inline-graphic xlink:href="pone.0108590.e279.jpg"/></inline-formula>nS, <inline-formula><inline-graphic xlink:href="pone.0108590.e280.jpg"/></inline-formula>nS). The error bars denote the standard deviation of mean firing rates across all neurons. “orig.” marks the original network without compensation, in “comp.” the neuron parameters were modified according to the compensation factor. The scaling of internal delays had only minimal effect on the firing rate (not shown).</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g022"/>
                  </fig>
                  <p>The parameter change that is necessary to restore the original mean firing rate can be calculated using the following relationship for the time scaling of the solution of a differential equation:<disp-formula id="pone.0108590.e281"><graphic xlink:href="pone.0108590.e281.jpg" position="anchor" orientation="portrait"/><label>(14)</label></disp-formula>
<disp-formula id="pone.0108590.e282"><graphic xlink:href="pone.0108590.e282.jpg" position="anchor" orientation="portrait"/><label>(15)</label></disp-formula>
<disp-formula id="pone.0108590.e283"><graphic xlink:href="pone.0108590.e283.jpg" position="anchor" orientation="portrait"/><label>(16)</label></disp-formula>
<disp-formula id="pone.0108590.e284"><graphic xlink:href="pone.0108590.e284.jpg" position="anchor" orientation="portrait"/><label>(17)</label></disp-formula>
</p>
                  <p>Assuming that <inline-formula><inline-graphic xlink:href="pone.0108590.e285.jpg"/></inline-formula> is the state of the dynamic variables within a network, <inline-formula><inline-graphic xlink:href="pone.0108590.e286.jpg"/></inline-formula> describes a network which follows the same time dependence with the dynamics scaled by the factor <inline-formula><inline-graphic xlink:href="pone.0108590.e287.jpg"/></inline-formula> in time. As the given random cortical network shows self-sustained behavior, the transition from <inline-formula><inline-graphic xlink:href="pone.0108590.e288.jpg"/></inline-formula> to <inline-formula><inline-graphic xlink:href="pone.0108590.e289.jpg"/></inline-formula> requires only the modification of internal network parameters, because there is no external input (which would have to also be modified otherwise). In particular, the transition encompasses scaling <inline-formula><inline-graphic xlink:href="pone.0108590.e290.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e291.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e292.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e293.jpg"/></inline-formula> and the synaptic delays by <inline-formula><inline-graphic xlink:href="pone.0108590.e294.jpg"/></inline-formula>, while leaving the conductance jump after each presynaptic PSP unchanged. <inline-formula><inline-graphic xlink:href="pone.0108590.e295.jpg"/></inline-formula> is calculated from the measured gain function (cf. <xref ref-type="fig" rid="pone-0108590-g022">Figure 22</xref>) via<disp-formula id="pone.0108590.e296"><graphic xlink:href="pone.0108590.e296.jpg" position="anchor" orientation="portrait"/><label>(18)</label></disp-formula>
</p>
                  <p>The resulting firing rate with and without compensation is shown in <xref ref-type="fig" rid="pone-0108590-g022">Figure 22</xref>
<bold>C</bold>. The results also show that the variance of the firing rates across neurons grows with rising synapse loss due to the increasing difference in connectivity within the networks. An extension of the mean-field-based compensation to this kind of inhomogeneous connectivity would be impractical, as it requires knowledge of the actual network realization (which is available only after the mapping step) and the measurement of <xref ref-type="fig" rid="pone-0108590-g022">Figure 22</xref>
<bold>A</bold> for all occuring counts of presynaptic inhibitory and excitatory neurons. Thus, a different method is considered in section 3.3.6.</p>
                  <p>In conclusion, this method can be applied when the actual synapse loss value and the mean response function of a single neuron is known. It only depends on the single neuron response properties; the amount of synapse loss has to be known a priori, but not the complete network dynamics. The method depends on the ability to modify synaptic delays according to the scaling rule. However, for the given network, this scaling has only a minimal effect on the mean firing rate.</p>
                  <p><italic>Iterative compensation.</italic> The iterative compensation method aims at reducing two distortion effects: the change of the mean firing rate of the pyramidal neurons and its variance across neurons, which are both apparent for synapse loss and synaptic weight noise. It relies on the controlability of the hardware neuron parameters allowing to fine tune the AdEx parameters for every individual neuron (Section 2.1.1). The iterative compensation functions as follows: We start with the results of the reference and the distorted network. From the reference simulation we extract the target mean rate <inline-formula><inline-graphic xlink:href="pone.0108590.e297.jpg"/></inline-formula> of the neurons in a population. For each neuron in the distorted network, we compare its actual firing rate against <inline-formula><inline-graphic xlink:href="pone.0108590.e298.jpg"/></inline-formula>, and modify the excitability of the neuron in proportion to the difference between target and measured firing rate. The distorted network with modified neuron parameters is then simulated and the output is compared again to the reference network. This iterative compensation step is repeated until the characteristics of the last step approximately match those of the reference simulation. In our simulations, we modified the spike initiation threshold <inline-formula><inline-graphic xlink:href="pone.0108590.e299.jpg"/></inline-formula>, with its change <inline-formula><inline-graphic xlink:href="pone.0108590.e300.jpg"/></inline-formula> being proportional to the difference between the actual and the target rate. We found that, when choosing the compensation factor <inline-formula><inline-graphic xlink:href="pone.0108590.e301.jpg"/></inline-formula> appropriately, 10 iterations are sufficient to restore the mean and variance of the firing rates in the undistorted network. While the compensated mean rate exactly corresponds to <inline-formula><inline-graphic xlink:href="pone.0108590.e302.jpg"/></inline-formula>, the compensated <inline-formula><inline-graphic xlink:href="pone.0108590.e303.jpg"/></inline-formula> is higher than in the reference network, but reliably below the <inline-formula><inline-graphic xlink:href="pone.0108590.e304.jpg"/></inline-formula>-fold of the reference value. The iterative compensation applied in the following is described in detail in section S4.3 of <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>. We remark that the proposed iterative compensation requires a controllable, deterministic mapping, which guarantees that in each iteration the neurons and synapses are always mapped onto the same hardware elements. Furthermore, the complete compensation process needs to be repeated for each network instance. In fact, we perform a calibration of the apparent permanent causes of distortion (fixed-pattern noise and synapse loss) similar to <xref rid="pone.0108590-Pfeil2" ref-type="bibr">[98]</xref> in order to reduce their effects. Hence, whenever we change the random seed that is used to generate the probabilistic connectivity between the neurons, the iterative compensation needs to be run anew. Thus, a reference from a non-distorted simulation or, e.g., from theory is needed. However, once obtained, the result of the compensation can be used for long-running simulations or as part of a larger compound network.</p>
                </sec>
                <sec id="s2h7">
                  <title>3.3.7 Results of iterative compensation</title>
                  <p><italic>Synaptic weight noise.</italic> In order to verify the iterative compensation strategy we applied it to the distorted parameter space with 50% synaptic weight noise. Note that, here and in section 3.3.8, weight noise was implemented persistently, being always the same in all iterations, representing the case where fixed-pattern noise, and not trial-to-trial variability, determines the synaptic weight noise (cf. section 2.4). Accordingly, the following findings are not applicable to the opposite case. The results of the iterative compensation are shown in <xref ref-type="fig" rid="pone-0108590-g020">Figure 20</xref>, which displays the relative difference of the mean and variance of the firing rates with respect to the reference simulation in <bold>D</bold> and <bold>H</bold>. The region of sustained activity in the (<inline-formula><inline-graphic xlink:href="pone.0108590.e305.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e306.jpg"/></inline-formula>) parameter space of the compensated network matches the one of the reference simulation very well. The mean and variance of firing rates could be successfully recovered for most of the states; with the exception of states with a mean rate higher than 25 Hz, where both criteria still differ notably from the reference after 10 iterations (upper left regions in the parameter spaces). We expect that the performance of the iterative compensation for those states could be further improved by tuning the compensation factor <inline-formula><inline-graphic xlink:href="pone.0108590.e307.jpg"/></inline-formula> (Section S4.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>) for high firing rates. The other criteria such as <inline-formula><inline-graphic xlink:href="pone.0108590.e308.jpg"/></inline-formula> and peak frequency could be fully recovered, following the assumption made earlier, that those criteria mainly depend on the firing rate. However, the coefficient of pairwise cross-correlation (CC) of the compensated networks is lower than in the reference simulation, i.e., the randomness introduced by the synaptic weight noise is still effective.</p>
                  <p><italic>Synapse loss.</italic> The results of the application of the iterative compensation strategy to the (<inline-formula><inline-graphic xlink:href="pone.0108590.e309.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0108590.e310.jpg"/></inline-formula>) parameter space with 50% synapse loss are shown in <xref ref-type="fig" rid="pone-0108590-g021">Figure 21</xref> (<bold>D</bold> and <bold>H</bold>), displaying the relative difference of mean and variance of firing rates. The compensation was not as effective as for synaptic weight noise: Some states with a low base firing rate were unstable (marked with a cross), i.e. the network did not survive until the end of simulation. As before, the mean and variance of firing rates can be successfully restored for low and medium base firing rates. Again, for high firing rates, the iterative compensation only performed moderately (upper left regions in the parameter spaces <bold>D</bold> and <bold>H</bold>). The other criteria show the same behavior as in the weight noise compensation, i.e. the peak frequency and <inline-formula><inline-graphic xlink:href="pone.0108590.e311.jpg"/></inline-formula> are in good match with the reference while the pairwise correlation (CC) decreased due to the randomness introduced by the synapse loss. We repeated the iterative compensation for the parameter space with 30% synapse loss: The results (not shown) are comparable to the 50% case, but exhibit fewer unstable states, i.e., there were more combinations of <inline-formula><inline-graphic xlink:href="pone.0108590.e312.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0108590.e313.jpg"/></inline-formula> whose compensated network survived.</p>
                  <p><italic>Conclusion.</italic> We conclude that the iterative compensation of distorted networks works for both synapse loss and fixed-pattern synaptic weight noise. The compensation also works when both are present at the same time, see section S4.4.3 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref> for details. While there seems to be no limit for weight noise, compensation of synapse-loss induced distortions is only possible up to a certain degree, as the network tends to become less stable with fewer synapses involved.</p>
                </sec>
                <sec id="s2h8">
                  <title>3.3.8 Full simulation of combined distortion mechanisms</title>
                  <p>In a last step the iterative compensation method designed for the AI network was tested in ESS simulations. Like for the other two models we forced distortions to test the developed compensation strategies. Therefore, we scaled up the network such that a significant fraction of synapses was lost during the mapping process. This large-scale network was then emulated on the ESS and compared to the undistorted reference simulation with NEST. Afterwards, we applied the compensation strategy developed in the previous section to restore the original behavior of the AI network.</p>
                  <p><italic>Synapse loss.</italic> Mapping such homogeneous networks that lack any modularity represents the worst-case scenario for the mapping process, as they have little room for optimization. In <xref ref-type="fig" rid="pone-0108590-g023">Figure 23</xref>
<bold>A</bold> the relative synapse loss is plotted for various network sizes using the scaling method described in section S4.1.2 of <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>. One can see that already for low numbers of neurons some synapse loss occurs, although there are sufficient hardware synapses and synapse drivers: due to the sparseness of the on-wafer routing switches some routing buses don't find a free switch to connect to its respective target HICANNs, such that synapses are lost. A kink in the graph of the synapse loss can be seen at around 20 000 neurons, where at least 64 neurons are mapped onto one HICANN (cf. Table S1.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s001">Appendix S1</xref>). In such a network with random connectivity it is merely possible to find 64 neurons whose pool of pre-synaptic neurons is smaller than 14 336, which is the maximum number of pre-synaptic neurons per HICANN, such that synapse loss must occur. Recall that there is a maximum of 14 336 pre-synaptic neurons for all neurons mapped onto one HICANN. As the connectivity in the AI network is probabilistic, the chance to find groups of 64 neurons whose pool of pre-synaptic neurons is smaller than 14 336 is close to zero.</p>
                  <fig id="pone-0108590-g023" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.g023</object-id>
                    <label>Figure 23</label>
                    <caption>
                      <title>AI network on the ESS.</title>
                      <p>(A) Synapse loss after mapping the network with different sizes onto the BrainScaleS system (B) Iterative compensation of the large-scale network with 22 445 neurons on the ESS: evolution of mean and standard deviation of firing rates for 10 iterations (C) Gauss-filtered power spectrum of global activity of the pyramidal neurons in the large-scale network. Reference spectrum shown in blue (simulated with Nest), distorted and compensated spectra in red resp. green, both simulated with the ESS.</p>
                    </caption>
                    <graphic xlink:href="pone.0108590.g023"/>
                  </fig>
                  <p><italic>Large-scale network.</italic> In order to produce a demanding scenario, we scaled the model to a size of 22 445 neurons (Section S4.1.2 in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref>). The size was chosen such that the network almost occupies an entire wafer, while mapping up to 64 neurons onto one HICANN. This large-scale network has a total of approximately 5.6 million synapses. The statistics of the reference simulation can be found in <xref ref-type="table" rid="pone-0108590-t003">Table 3</xref> and are in accordance with the scaling behavior investigated in <xref ref-type="supplementary-material" rid="pone.0108590.s004">Appendix S4</xref> (Section S4.4.1).</p>
                  <table-wrap id="pone-0108590-t003" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.t003</object-id>
                    <label>Table 3</label>
                    <caption>
                      <title>Statistics of the large-scale AI network.</title>
                    </caption>
                    <alternatives>
                      <graphic id="pone-0108590-t003-3" xlink:href="pone.0108590.t003"/>
                      <table frame="hsides" rules="groups">
                        <colgroup span="1">
                          <col align="left" span="1"/>
                          <col align="center" span="1"/>
                          <col align="center" span="1"/>
                          <col align="center" span="1"/>
                        </colgroup>
                        <thead>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">criteria</td>
                            <td align="left" rowspan="1" colspan="1">ref.</td>
                            <td align="left" rowspan="1" colspan="1">dist.</td>
                            <td align="left" rowspan="1" colspan="1">comp.</td>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">Rate [Hz]</td>
                            <td align="left" rowspan="1" colspan="1">13.4</td>
                            <td align="left" rowspan="1" colspan="1">15.5</td>
                            <td align="left" rowspan="1" colspan="1">13.6</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">
                              <inline-formula>
                                <inline-graphic xlink:href="pone.0108590.e314.jpg"/>
                              </inline-formula>
                            </td>
                            <td align="left" rowspan="1" colspan="1">0.107</td>
                            <td align="left" rowspan="1" colspan="1">0.726</td>
                            <td align="left" rowspan="1" colspan="1">0.212</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">
                              <inline-formula>
                                <inline-graphic xlink:href="pone.0108590.e315.jpg"/>
                              </inline-formula>
                            </td>
                            <td align="left" rowspan="1" colspan="1">1.12</td>
                            <td align="left" rowspan="1" colspan="1">1.11</td>
                            <td align="left" rowspan="1" colspan="1">1.09</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">CC</td>
                            <td align="left" rowspan="1" colspan="1">0.00103</td>
                            <td align="left" rowspan="1" colspan="1">0.0011</td>
                            <td align="left" rowspan="1" colspan="1">0.00166</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">Peak Frequency[Hz]</td>
                            <td align="left" rowspan="1" colspan="1">60.3</td>
                            <td align="left" rowspan="1" colspan="1">60.7</td>
                            <td align="left" rowspan="1" colspan="1">59.0</td>
                          </tr>
                        </tbody>
                      </table>
                    </alternatives>
                    <table-wrap-foot>
                      <fn id="nt102">
                        <label/>
                        <p>Reference (ref.) simulated with NEST, distorted (dist.) and compensated (comp.) with the ESS.</p>
                      </fn>
                    </table-wrap-foot>
                  </table-wrap>
                  <p><italic>Distorted network.</italic> In the above scenario, 28.1% of synapses were lost during the mapping process (for projection-wise numbers see <xref ref-type="table" rid="pone-0108590-t004">Table 4</xref>). We remark that the synapse loss at this size is higher than during the synapse loss sweep in <xref ref-type="fig" rid="pone-0108590-g023">Figure 23</xref>
<bold>A</bold>, as we used a sequence of mapping algorithms that guarantees a balance between synapse loss of excitatory and inhibitory connections. Still, there were slightly more inhibitory connections lost than excitatory ones (<xref ref-type="table" rid="pone-0108590-t004">Table 4</xref>). Additionally, we applied a fixed-pattern noise of 20% to the synaptic weights in the ESS simulation. The result of the latter can be found in <xref ref-type="table" rid="pone-0108590-t003">Table 3:</xref> the network still survived until the end of the simulation, but the firing rate and its variance increased compared to the reference simulation, which complies with the prediction of the distortion analysis.</p>
                  <table-wrap id="pone-0108590-t004" orientation="portrait" position="float">
                    <object-id pub-id-type="doi">10.1371/journal.pone.0108590.t004</object-id>
                    <label>Table 4</label>
                    <caption>
                      <title>Projection-wise synapse loss of the large-scale AI network after the mapping process.</title>
                    </caption>
                    <alternatives>
                      <graphic id="pone-0108590-t004-4" xlink:href="pone.0108590.t004"/>
                      <table frame="hsides" rules="groups">
                        <colgroup span="1">
                          <col align="left" span="1"/>
                          <col align="center" span="1"/>
                        </colgroup>
                        <thead>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">projection</td>
                            <td align="left" rowspan="1" colspan="1">synapse loss [%]</td>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">PY<inline-formula><inline-graphic xlink:href="pone.0108590.e316.jpg"/></inline-formula>PY</td>
                            <td align="left" rowspan="1" colspan="1">26.9</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">PY<inline-formula><inline-graphic xlink:href="pone.0108590.e317.jpg"/></inline-formula>INH</td>
                            <td align="left" rowspan="1" colspan="1">28.1</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">INH<inline-formula><inline-graphic xlink:href="pone.0108590.e318.jpg"/></inline-formula>PY</td>
                            <td align="left" rowspan="1" colspan="1">31.1</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">INH<inline-formula><inline-graphic xlink:href="pone.0108590.e319.jpg"/></inline-formula>INH</td>
                            <td align="left" rowspan="1" colspan="1">33.4</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">STIM<inline-formula><inline-graphic xlink:href="pone.0108590.e320.jpg"/></inline-formula>PY</td>
                            <td align="left" rowspan="1" colspan="1">77.5</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">STIM<inline-formula><inline-graphic xlink:href="pone.0108590.e321.jpg"/></inline-formula>INH</td>
                            <td align="left" rowspan="1" colspan="1">89.4</td>
                          </tr>
                          <tr>
                            <td align="left" rowspan="1" colspan="1">total</td>
                            <td align="left" rowspan="1" colspan="1">28.1</td>
                          </tr>
                        </tbody>
                      </table>
                    </alternatives>
                    <table-wrap-foot>
                      <fn id="nt103">
                        <label/>
                        <p>PY: excitatory pyramidal neurons. INH: fast spiking inhibitory cells, STIM: external Poisson sources for initial stimulation.</p>
                      </fn>
                    </table-wrap-foot>
                  </table-wrap>
                  <p><italic>Compensated network.</italic> We then used the iterative compensation method from Section 3.3.6 to compensate the abovementioned distortions and repeated the ESS simulation with the modified network. The evolution of the firing rates over 10 iterations is shown in <xref ref-type="fig" rid="pone-0108590-g023">Figure 23</xref>
<bold>B</bold>: One can clearly see how, step by step, the firing rate approaches the target rate and that at the same time the variance of firing rates decreases. The statistics of the final iteration are listed in <xref ref-type="table" rid="pone-0108590-t003">Table 3:</xref> It was possible to fully recover the target mean rate. The variation of firing across neurons (<inline-formula><inline-graphic xlink:href="pone.0108590.e322.jpg"/></inline-formula>) was significantly reduced from <inline-formula><inline-graphic xlink:href="pone.0108590.e323.jpg"/></inline-formula> to <inline-formula><inline-graphic xlink:href="pone.0108590.e324.jpg"/></inline-formula> but was still twice as large as in the reference network. The other functionality criteria match the reference simulation very well (<xref ref-type="table" rid="pone-0108590-t003">Table 3</xref>), as does the power spectrum of global activity in <xref ref-type="fig" rid="pone-0108590-g023">Figure 23</xref>
<bold>C</bold>.</p>
                </sec>
              </sec>
            </sec>
            <sec id="s3">
              <title>Conclusions</title>
              <p>In this study, we have presented a systematic comparison between neural network simulations carried out with ideal software models and a specific implementation of a neuromorphic computing system. The results for the neuromorphic system were obtained with a detailed simulation of the hardware architecture. The core concept is, essentially, a functionalist one: neural networks are defined in terms of functional measures on muliple scales, from individual neuron behavior up to network dynamics. The various neuron and synapse parameters are then tuned to achieve the target performance in terms of these measures.</p>
              <p>The comparison was based on three cortically inspired benchmark networks: a layer 2/3 columnar architecture, a model of a synfire chain with feed-forward inhibition and a random network with self-sustained, irregular firing activity. We have chosen these specific network architectures for two reasons. First of all, they implement very different, but widely acknowledged computational paradigms and activity regimes found in neocortex: winner-take-all modules, spike-correlation-based computation, self-sustained activity and asynchronous irregular firing. Secondly, due to their diverse properties and structure, they pose an array of challenges for their hardware emulation, being affected differently by the studied hardware-specific distortion mechanisms.</p>
              <p>All three networks were exposed to the same set of hardware constraints and a detailed comparison with the ideal software model was carried out. The agreement was quantified by looking at several chosen microscopic and and macroscopic observables on both the cell and network level, which we dubbed “functionality criteria”. These criteria were chosen individually for each network and were aimed at covering all of the relevant aspects discussed in the original studies of the chosen models.</p>
              <p>Several hardware constraint categories have been studied: the dynamics of the embedded neuron and synapse models, limited parameter ranges, synapse loss due to limited hardware resources, synaptic weight noise due to fixed-pattern and trial-to-trial variations, and the lack of configurable axonal delays. The final three effects were studied in most detail, as they are expected to affect essentially every hardware-emulated model. The investigated distortion mechanisms were studied both individually, as well as combined, similarly to the way they would occur on a real hardware substrate. As expected, above certain magnitudes of the hardware-specific distortion mechanisms, substantial deviations of the functionality criteria were observed.</p>
              <p>For each of the three network models and for each type of distortion mechanism, several compensation strategies were discussed, with the goal of tuning the hardware implementation towards maximum agreement with the ideal software model. With the proposed compensation strategies, we have shown that it is possible to considerably reduce, and in some cases even eliminate the effects of the hardware-induced distortions. We therefore regard this study as an exemplary workflow and a toolbox for neuromorphic modelers, from which they can pick the most suitable strategy and eventually tune it towards their particular needs.</p>
              <p>In addition to the investigated mechanisms, several other sources of distortions are routinely observed on neuromorphic hardware. A (certainly not exhaustive) list might include mismatch of neuron and synapse parameters, shared parameter values (i.e., not individually configurable for each neuron or synapse) or limited parameter programming resolution. These mechanisms are highly back-end-specific and therefore difficult to generalize. However, although they are likely to pose individual challenges by themselves, some of their ultimate effects on the target network functionality can be alleviated with the compensation strategies proposed here.</p>
              <p>Our proposed strategies aim at neuromorphic implementations that compete in terms of network functionality with conventional computers but offer major potential advantages in terms of power comsumption, simulation speed and fault tolerance of the used hardware components. If implemented successfully, such neuromorphic systems would serve as fast and efficient simulation engines for computational neuroscience. Their potential advantages would then more than make up for the overhead imposed by the requirement of compensation.</p>
              <p>From this point of view, hardware-induced distortions are considered a nuisance, as they hinder precise and reproducible computation. In an alternative approach, one might consider the performance of the system itself at some computational task as the “fitness function” to be maximized. In this context, some particular architecture of an embedded model, together with an associated target behavior, would then become less relevant. Instead, one would design the network structure specifically for the neuromorphic substrate or include training algorithms that are suitable for such an inherently imperfect back-end. The use of particular, “ideal” software models as benchmarks might then given up altogether in favor of a more hardware-oriented, stand-alone approach. Here, too, the proposed compensation strategies can be actively embedded in the design of the models or their training algorithms.</p>
              <p>The hardware architecture used for our studies is, indeed, suited for both approaches. It will be an important aspect of future research with neuromorphic systems to develop procedures that tolerate or even actively embrace the temporal and spatial imperfections inherent to all electronic circuits. These questions need to be addressed by both model and hardware developers, in a common effort to determine which architectural aspects are important for the studied computational problems, both from a biological and a machine learning perspective.</p>
            </sec>
            <sec sec-type="supplementary-material" id="s4">
              <title>Supporting Information</title>
              <supplementary-material content-type="local-data" id="pone.0108590.s001">
                <label>Appendix S1</label>
                <caption>
                  <p><bold>Neuromorphic hardware.</bold> Details about the short-term plasticity mechanism, parameter ranges, and parameter variation measurements of the BrainScales neuromorphic hardware system.</p>
                  <p>(PDF)</p>
                </caption>
                <media xlink:href="pone.0108590.s001.pdf">
                  <caption>
                    <p>Click here for additional data file.</p>
                  </caption>
                </media>
              </supplementary-material>
              <supplementary-material content-type="local-data" id="pone.0108590.s002">
                <label>Appendix S2</label>
                <caption>
                  <p><bold>Cortical layer 2/3 attractor memory.</bold> Methods, model parameters, and detailed simulation results of the Layer 2/3 model.</p>
                  <p>(PDF)</p>
                </caption>
                <media xlink:href="pone.0108590.s002.pdf">
                  <caption>
                    <p>Click here for additional data file.</p>
                  </caption>
                </media>
              </supplementary-material>
              <supplementary-material content-type="local-data" id="pone.0108590.s003">
                <label>Appendix S3</label>
                <caption>
                  <p><bold>Synfire chain with feed-forward inhibition.</bold> Model parameters and additional simulations of the synfire chain network.</p>
                  <p>(PDF)</p>
                </caption>
                <media xlink:href="pone.0108590.s003.pdf">
                  <caption>
                    <p>Click here for additional data file.</p>
                  </caption>
                </media>
              </supplementary-material>
              <supplementary-material content-type="local-data" id="pone.0108590.s004">
                <label>Appendix S4</label>
                <caption>
                  <p><bold>Self-sustained asynchronous irregular activity.</bold> Methods, model parameters, and further simulations of the AI network.</p>
                  <p>(PDF)</p>
                </caption>
                <media xlink:href="pone.0108590.s004.pdf">
                  <caption>
                    <p>Click here for additional data file.</p>
                  </caption>
                </media>
              </supplementary-material>
            </sec>
          </body>
          <back>
            <ack>
              <p>We would like to thank Eric Mller for his invaluable help with the software infrastructure; Jens Kremkow for his support with the synfire chain model; Mitja Kleider, Christoph Koke, Dominik Schmidt and Sebastian Schmitt for providing measurements from the BrainScaleS neuromorphic system, as well as the necessary framework.</p>
            </ack>
            <ref-list>
              <title>References</title>
              <ref id="pone.0108590-Laing1">
                <label>1</label>
                <mixed-citation publication-type="other">Laing C, Lord GJ (2009) Stochastic Methods in Neuroscience. Oxford University Press.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Brette1">
                <label>2</label>
                <mixed-citation publication-type="journal"><name><surname>Brette</surname><given-names>R</given-names></name>, <name><surname>Rudolph</surname><given-names>M</given-names></name>, <name><surname>Carnevale</surname><given-names>T</given-names></name>, <name><surname>Hines</surname><given-names>M</given-names></name>, <name><surname>Beeman</surname><given-names>D</given-names></name>, <etal>et al</etal> (<year>2007</year>) <article-title>Simulation of networks of spiking neurons: A review of tools and strategies</article-title>. <source>Journal of Computational Neuroscience</source>
<volume>23</volume>: <fpage>349</fpage>–<lpage>398</lpage>.<pub-id pub-id-type="pmid">17629781</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Djurfeldt1">
                <label>3</label>
                <mixed-citation publication-type="journal"><name><surname>Djurfeldt</surname><given-names>M</given-names></name>, <name><surname>Lundqvist</surname><given-names>M</given-names></name>, <name><surname>Johansson</surname><given-names>C</given-names></name>, <name><surname>Rehn</surname><given-names>M</given-names></name>, <name><surname>Ekeberg</surname><given-names>O</given-names></name>, <etal>et al</etal> (<year>2008</year>) <article-title>Brain-scale simulation of the neocortex on the ibm blue gene/l supercomputer</article-title>. <source>IBM Journal of Research and Development</source>
<volume>52</volume>: <fpage>31</fpage>–<lpage>41</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Helias1">
                <label>4</label>
                <mixed-citation publication-type="other">Helias M, Kunkel S, Masumoto G, Igarashi J, Eppler JM, <etal>et al</etal>.. (2012) Supercomputers ready for use as discovery machines for neuroscience. Frontiers in Neuroinformatics 6.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Morrison1">
                <label>5</label>
                <mixed-citation publication-type="journal"><name><surname>Morrison</surname><given-names>A</given-names></name>, <name><surname>Mehring</surname><given-names>C</given-names></name>, <name><surname>Geisel</surname><given-names>T</given-names></name>, <name><surname>Aertsen</surname><given-names>A</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name> (<year>2005</year>) <article-title>Advancing the boundaries of high connectivity network simulation with distributed computing</article-title>. <source>Neural Comput</source>
<volume>17</volume>: <fpage>1776</fpage>–<lpage>1801</lpage>.<pub-id pub-id-type="pmid">15969917</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Bergman1">
                <label>6</label>
                <mixed-citation publication-type="other">Bergman K, Borkar S, Campbell D, Carlson W, Dally W, et al.. (2008) Exascale computing study: Technology challenges in achieving exascale systems.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Hasler1">
                <label>7</label>
                <mixed-citation publication-type="other">Hasler J, Marr HB (2013) Finding a roadmap to achieve large neuromorphic hardware systems. Frontiers in Neuroscience 7.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Mead1">
                <label>8</label>
                <mixed-citation publication-type="journal"><name><surname>Mead</surname><given-names>CA</given-names></name>, <name><surname>Mahowald</surname><given-names>MA</given-names></name> (<year>1988</year>) <article-title>A silicon model of early visual processing</article-title>. <source>Neural Networks</source>
<volume>1</volume>: <fpage>91</fpage>–<lpage>97</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Mead2">
                <label>9</label>
                <mixed-citation publication-type="other">Mead CA (1989) Analog VLSI and Neural Systems. Reading, MA: Addison Wesley.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Mead3">
                <label>10</label>
                <mixed-citation publication-type="journal"><name><surname>Mead</surname><given-names>CA</given-names></name> (<year>1990</year>) <article-title>Neuromorphic electronic systems</article-title>. <source>Proceedings of the IEEE</source>
<volume>78</volume>: <fpage>1629</fpage>–<lpage>1636</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Renaud1">
                <label>11</label>
                <mixed-citation publication-type="other">Renaud S, Tomas J, Bornat Y, Daouzli A, Saighi S (2007) Neuromimetic ICs with analog cores: an alternative for simulating spiking neural networks. In: Proceedings of the 2007 IEEE Symposium on Circuits and Systems (ISCAS2007).</mixed-citation>
              </ref>
              <ref id="pone.0108590-Indiveri1">
                <label>12</label>
                <mixed-citation publication-type="journal"><name><surname>Indiveri</surname><given-names>G</given-names></name>, <name><surname>Chicca</surname><given-names>E</given-names></name>, <name><surname>Douglas</surname><given-names>R</given-names></name> (<year>2009</year>) <article-title>Artificial cognitive systems: From VLSI networks of spiking neurons to neuromorphic cognition</article-title>. <source>Cognitive Computation</source>
<volume>1</volume>: <fpage>119</fpage>–<lpage>127</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Indiveri2">
                <label>13</label>
                <mixed-citation publication-type="other">Indiveri G, Linares-Barranco B, Hamilton TJ, van Schaik A, Etienne-Cummings R, et al.. (2011) Neuromorphic silicon neuron circuits. Frontiers in Neuroscience 5.</mixed-citation>
              </ref>
              <ref id="pone.0108590-McDonnell1">
                <label>14</label>
                <mixed-citation publication-type="other">McDonnell MD, Boahen K, Ijspeert A, Sejnowski TJ, editors (2014) Engineering Intelligent Electronic Systems Based on Computational Neuroscience, volume 102: 5 of <italic>Proceedings of the IEEE</italic>. Special Issue.</mixed-citation>
              </ref>
              <ref id="pone.0108590-SerranoGotarredona1">
                <label>15</label>
                <mixed-citation publication-type="journal">Serrano-Gotarredona R, Oster M, Lichtsteiner P, Linares-Barranco A, Paz-Vicente R, et al.. (2006) AER building blocks for multi-layer multi-chip neuromorphic vision systems. In: Weiss Y, Schölkopf B, Platt J, editors, Advances in Neural Information Processing Systems <volume>18</volume> , Cambridge, MA: MIT Press. pp. 1217–1224.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Merolla1">
                <label>16</label>
                <mixed-citation publication-type="other">Merolla PA, Boahen K (2006) Dynamic computation in a recurrent network of heterogeneous silicon neurons. In: Proceedings of the 2006 IEEE International Symposium on Circuits and Systems (ISCAS 2006).</mixed-citation>
              </ref>
              <ref id="pone.0108590-Netter1">
                <label>17</label>
                <mixed-citation publication-type="other">Netter T, Franceschini N (2002) A robotic aircraft that follows terrain using a neuromorphic eye. In: Conf. Intelligent Robots and System. pp.129–134.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Delbrck1">
                <label>18</label>
                <mixed-citation publication-type="journal"><name><surname>Delbrück</surname><given-names>T</given-names></name>, <name><surname>Liu</surname><given-names>SC</given-names></name> (<year>2004</year>) <article-title>A silicon early visual system as a model animal</article-title>. <source>Vision Res</source>
<volume>44</volume>: <fpage>2083</fpage>–<lpage>2089</lpage>.<pub-id pub-id-type="pmid">15149839</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Lewis1">
                <label>19</label>
                <mixed-citation publication-type="other">Lewis MA, Etienne-Cummings R, Cohen AH, Hartmann M (2000) Toward biomorphic control using custom aVLSI chips. In: Proceedings of the International conference on robotics and automation. IEEE Press.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Hfliger1">
                <label>20</label>
                <mixed-citation publication-type="journal"><name><surname>Häfliger</surname><given-names>P</given-names></name> (<year>2007</year>) <article-title>Adaptive WTA with an analog VLSI neuromorphic learning chip</article-title>. <source>IEEE Transactions on Neural Networks</source>
<volume>18</volume>: <fpage>551</fpage>–<lpage>72</lpage>.<pub-id pub-id-type="pmid">17385639</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Mitra1">
                <label>21</label>
                <mixed-citation publication-type="journal"><name><surname>Mitra</surname><given-names>S</given-names></name>, <name><surname>Fusi</surname><given-names>S</given-names></name>, <name><surname>Indiveri</surname><given-names>G</given-names></name> (<year>2009</year>) <article-title>Real-time classification of complex patterns using spike-based learning in neuromorphic VLSI</article-title>. <source>IEEE Transactions on Biomedical Circuits and Systems 3</source>
<volume>(1)</volume>: <fpage>32</fpage>–<lpage>42</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Zou1">
                <label>22</label>
                <mixed-citation publication-type="journal"><name><surname>Zou</surname><given-names>Q</given-names></name>, <name><surname>Bornat</surname><given-names>Y</given-names></name>, <name><surname>Tomas</surname><given-names>J</given-names></name>, <name><surname>Renaud</surname><given-names>S</given-names></name>, <name><surname>Destexhe</surname><given-names>A</given-names></name> (<year>2006</year>) <article-title>Real-time simulations of networks of hodgkin-huxley neurons using analog circuits</article-title>. <source>Neurocomputing</source>
<volume>69</volume>: <fpage>1137</fpage>–<lpage>1140</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Bontorin1">
                <label>23</label>
                <mixed-citation publication-type="other">Bontorin G, Renaud S, Garenne A, Alvado L, Le Masson G, et al.. (2007) A real-time closed-loop setup for hybrid neural networks. In: Proceedings of the 29th Annual International Conference of the IEEE Engineering in Medicine and Biology Society (EMBS2007).</mixed-citation>
              </ref>
              <ref id="pone.0108590-Indiveri3">
                <label>24</label>
                <mixed-citation publication-type="journal"><name><surname>Indiveri</surname><given-names>G</given-names></name>, <name><surname>Chicca</surname><given-names>E</given-names></name>, <name><surname>Douglas</surname><given-names>R</given-names></name> (<year>2006</year>) <article-title>A VLSI array of low-power spiking neurons and bistable synapses with spike-timing dependent plasticity</article-title>. <source>IEEE Transactions on Neural Networks</source>
<volume>17</volume>: <fpage>211</fpage>–<lpage>221</lpage>.<pub-id pub-id-type="pmid">16526488</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Vogelstein1">
                <label>25</label>
                <mixed-citation publication-type="journal"><name><surname>Vogelstein</surname><given-names>RJ</given-names></name>, <name><surname>Mallik</surname><given-names>U</given-names></name>, <name><surname>Vogelstein</surname><given-names>JT</given-names></name>, <name><surname>Cauwenberghs</surname><given-names>G</given-names></name> (<year>2007</year>) <article-title>Dynamically reconfigurable silicon array of spiking neuron with conductance-based synapses</article-title>. <source>IEEE Transactions on Neural Networks</source>
<volume>18</volume>: <fpage>253</fpage>–<lpage>265</lpage>.<pub-id pub-id-type="pmid">17278476</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Rocke1">
                <label>26</label>
                <mixed-citation publication-type="book">Rocke P, McGinley B, Maher J, Morgan F, Harkin J (2008) Investigating the suitability of fpaas for evolved hardware spiking neural networks. In: Hornby G, Sekanina L, Haddow P, editors, Evolvable Systems: From Biology to Hardware, Springer Berlin/Heidelberg, volume 5216 of <italic>Lecture Notes in Computer Science</italic> pp. 118–129. Available: <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1007/978-3-540-85857-7_11">http://dx.doi.org/10.1007/978-3-540-85857-7_11</ext-link>. 10.1007/978-3-540-85857-7_11.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Schemmel1">
                <label>27</label>
                <mixed-citation publication-type="other">Schemmel J, Brüderle D, Grübl A, Hock M, Meier K, et al.. (2010) A wafer-scale neuromorphic hardware system for large-scale neural modeling. In: Proceedings of the 2010 IEEE International Symposium on Circuits and Systems (ISCAS). pp. 1947–1950.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Furber1">
                <label>28</label>
                <mixed-citation publication-type="other">Furber SB, Lester DR, Plana LA, Garside JD, Painkras E, et al.. (2012) Overview of the SpiNNaker system architecture. IEEE Transactions on Computers 99.</mixed-citation>
              </ref>
              <ref id="pone.0108590-CostasSantos1">
                <label>29</label>
                <mixed-citation publication-type="journal"><name><surname>Costas-Santos</surname><given-names>J</given-names></name>, <name><surname>Serrano-Gotarredona</surname><given-names>T</given-names></name>, <name><surname>Serrano-Gotarredona</surname><given-names>R</given-names></name>, <name><surname>Linares-Barranco</surname><given-names>B</given-names></name> (<year>2007</year>) <article-title>A spatial contrast retina with on-chip calibration for neuromorphic spike-based AER vision systems</article-title>. <source>IEEE Transactions on Circuits and Systems</source>
<volume>54</volume>: <fpage>1444</fpage>–<lpage>1458</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Berge1">
                <label>30</label>
                <mixed-citation publication-type="other">Berge HKO, Häfliger P (2007) High-speed serial AER on FPGA. In: ISCAS. IEEE, pp. 857–860.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Indiveri4">
                <label>31</label>
                <mixed-citation publication-type="journal"><name><surname>Indiveri</surname><given-names>G</given-names></name> (<year>2008</year>) <article-title>Neuromorphic vlsi models of selective attention: From single chip vision sensors to multi-chip systems</article-title>. <source>Sensors</source>
<volume>8</volume>: <fpage>5352</fpage>–<lpage>5375</lpage>.<pub-id pub-id-type="pmid">27873818</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Fieres1">
                <label>32</label>
                <mixed-citation publication-type="other">Fieres J, Schemmel J, Meier K (2008) Realizing biological spiking network models in a configurable wafer-scale hardware system. In: Proceedings of the 2008 International Joint Conference on Neural Networks (IJCNN).</mixed-citation>
              </ref>
              <ref id="pone.0108590-SerranoGotarredona2">
                <label>33</label>
                <mixed-citation publication-type="journal"><name><surname>Serrano-Gotarredona</surname><given-names>R</given-names></name>, <name><surname>Oster</surname><given-names>M</given-names></name>, <name><surname>Lichtsteiner</surname><given-names>P</given-names></name>, <name><surname>Linares-Barranco</surname><given-names>A</given-names></name>, <name><surname>Paz-Vicente</surname><given-names>R</given-names></name>, <etal>et al</etal> (<year>2009</year>) <article-title>Caviar: A 45k neuron, 5m synapse, 12g connects/s aer hardware sensory–processing–learning–actuating system for high-speed visual object recognition and tracking</article-title>. <source>Neural Networks, IEEE Transactions on</source>
<volume>20</volume>: <fpage>1417</fpage>–<lpage>1438</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Schemmel2">
                <label>34</label>
                <mixed-citation publication-type="other">Schemmel J, Fieres J, Meier K (2008) Wafer-scale integration of analog neural networks. In: Proceedings of the 2008 International Joint Conference on Neural Networks (IJCNN).</mixed-citation>
              </ref>
              <ref id="pone.0108590-Brette2">
                <label>35</label>
                <mixed-citation publication-type="journal"><name><surname>Brette</surname><given-names>R</given-names></name>, <name><surname>Gerstner</surname><given-names>W</given-names></name> (<year>2005</year>) <article-title>Adaptive exponential integrate-and-fire model as an effective description of neuronal activity</article-title>. <source>J Neurophysiol</source>
<volume>94</volume>: <fpage>3637</fpage>–<lpage>3642</lpage>.<pub-id pub-id-type="pmid">16014787</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Millner1">
                <label>36</label>
                <mixed-citation publication-type="journal">Millner S, Grübl A, Meier K, Schemmel J, Schwartz MO (2010) A VLSI implementation of the adaptive exponential integrate-and-fire neuron model. In: Lafferty J, Williams CKI, Shawe-Taylor J, Zemel R, Culotta A, editors, Advances in Neural Information Processing Systems <volume>23</volume> . pp. 1642–1650.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Lande1">
                <label>37</label>
                <mixed-citation publication-type="other">Lande T, Ranjbar H, Ismail M, Berg Y (1996) An analog floating-gate memory in a standard digital technology. In: Microelectronics for Neural Networks, 1996. Proceedings of Fifth International Conference on. pp. 271–276. doi:10.1109/MNNFS.1996.493802.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Bi1">
                <label>38</label>
                <mixed-citation publication-type="journal"><name><surname>Bi</surname><given-names>GQ</given-names></name>, <name><surname>Poo</surname><given-names>MM</given-names></name> (<year>1998</year>) <article-title>Synaptic modifications in cultured hippocampal neurons: dependence on spike timing, synaptic strength, and postsynaptic cell type</article-title>. <source>The Journal of neuroscience: the official journal of the Society for Neuroscience</source>
<volume>18</volume>: <fpage>10464</fpage>–<lpage>10472</lpage>.<pub-id pub-id-type="pmid">9852584</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Morrison2">
                <label>39</label>
                <mixed-citation publication-type="journal"><name><surname>Morrison</surname><given-names>A</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name>, <name><surname>Gerstner</surname><given-names>W</given-names></name> (<year>2008</year>) <article-title>Phenomenological models of synaptic plasticity based on spike timing</article-title>. <source>Biological Cybernetics</source>
<volume>98</volume>: <fpage>459</fpage>–<lpage>478</lpage>.<pub-id pub-id-type="pmid">18491160</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Brderle1">
                <label>40</label>
                <mixed-citation publication-type="journal"><name><surname>Brüderle</surname><given-names>D</given-names></name>, <name><surname>Petrovici</surname><given-names>M</given-names></name>, <name><surname>Vogginger</surname><given-names>B</given-names></name>, <name><surname>Ehrlich</surname><given-names>M</given-names></name>, <name><surname>Pfeil</surname><given-names>T</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>A comprehensive workflow for general-purpose neural modeling with highly configurable neuromorphic hardware systems</article-title>. <source>Biological Cybernetics</source>
<volume>104</volume>: <fpage>263</fpage>–<lpage>296</lpage>.<pub-id pub-id-type="pmid">21618053</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Schemmel3">
                <label>41</label>
                <mixed-citation publication-type="other">Schemmel J, Grübl A, Meier K, Muller E (2006) Implementing synaptic plasticity in a VLSI spiking neural network model. In: Proceedings of the 2006 International Joint Conference on Neural Networks (IJCNN). IEEE Press.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Schemmel4">
                <label>42</label>
                <mixed-citation publication-type="other">Schemmel J, Brüderle D, Meier K, Ostendorf B (2007) Modeling synaptic plasticity within networks of highly accelerated I&amp;F neurons. In: Proceedings of the 2007 IEEE International Symposium on Circuits and Systems (ISCAS). IEEE Press, pp. 3367–3370.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Pfeil1">
                <label>43</label>
                <mixed-citation publication-type="other">Pfeil T, Potjans TC, Schrader S, Potjans W, Schemmel J, et al.. (2012) Is a 4-bit synaptic weight resolution enough? - constraints on enabling spike-timing dependent plasticity in neuromorphic hardware. Frontiers in Neuroscience 6.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Markram1">
                <label>44</label>
                <mixed-citation publication-type="journal"><name><surname>Markram</surname><given-names>H</given-names></name>, <name><surname>Gupta</surname><given-names>A</given-names></name>, <name><surname>Uziel</surname><given-names>A</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name>, <name><surname>Tsodyks</surname><given-names>M</given-names></name> (<year>1998</year>) <article-title>Information processing with frequency-dependent synaptic connections</article-title>. <source>Neurobiol Learn Mem</source>
<volume>70</volume>: <fpage>101</fpage>–<lpage>112</lpage>.<pub-id pub-id-type="pmid">9753590</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Bill1">
                <label>45</label>
                <mixed-citation publication-type="other">Bill J, Schuch K, Brüderle D, Schemmel J, Maass W, et al.. (2010) Compensating inhomogeneities of neuromorphic VLSI devices via short-term synaptic plasticity. Front Comp Neurosci 4.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Scholze1">
                <label>46</label>
                <mixed-citation publication-type="journal"><name><surname>Scholze</surname><given-names>S</given-names></name>, <name><surname>Schiefer</surname><given-names>S</given-names></name>, <name><surname>Partzsch</surname><given-names>J</given-names></name>, <name><surname>Hartmann</surname><given-names>S</given-names></name>, <name><surname>Mayr</surname><given-names>CG</given-names></name>, <etal>et al</etal>(<year>2011</year>) <article-title>VLSI implementation of a 2.8GEvent/s packet based AER interface with routing and event sorting functionality</article-title>. <source>Frontiers in Neuromorphic Engineering</source><volume>5</volume>: <fpage>1</fpage>–<lpage>13</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Scholze2">
                <label>47</label>
                <mixed-citation publication-type="other">Scholze S, Eisenreich H, Höppner S, Ellguth G, Henker S, et al.. (2011) A 32 GBit/s communication SoC for a waferscale neuromorphic system. Integration, the VLSI Journal.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Hartmann1">
                <label>48</label>
                <mixed-citation publication-type="other">Hartmann S, Schiefer S, Scholze S, Partzsch J, Mayr C, et al. (2010) Highly integrated packet-based aer communication infrastructure with 3gevent/s throughput. In: Electronics, Circuits, and Systems (ICECS), 2010 17th IEEE International Conference on. pp. 950–953. doi:10.1109/ICECS.2010.5724670.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Scholze3">
                <label>49</label>
                <mixed-citation publication-type="other">Scholze S, Henker S, Partzsch J, Mayr C, Schuffny R (2010) Optimized queue based communication in vlsi using a weakly ordered binary heap. In: Mixed Design of Integrated Circuits and Systems (MIXDES), 2010 Proceedings of the 17th International Conference. pp. 316–320.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Davison1">
                <label>50</label>
                <mixed-citation publication-type="other">Davison AP, Brüderle D, Eppler J, Kremkow J, Muller E, et al.. (2008) PyNN: a common interface for neuronal network simulators. Front Neuroinform 2.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Hines1">
                <label>51</label>
                <mixed-citation publication-type="other">Hines ML, Davison AP, Muller E (2009) NEURON and Python. Front Neuroinform.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Eppler1">
                <label>52</label>
                <mixed-citation publication-type="other">Eppler JM, Helias M, Muller E, Diesmann M, Gewaltig MO (2008) PyNEST: a convenient interface to the NEST simulator. Front Neuroinform 2.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Brderle2">
                <label>53</label>
                <mixed-citation publication-type="other">Brüderle D, Müller E, Davison A, Muller E, Schemmel J, et al.. (2009) Establishing a novel modeling tool: A python-based interface for a neuromorphic hardware system. Front Neuroinform 3.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Galluppi1">
                <label>54</label>
                <mixed-citation publication-type="book">Galluppi F, Rast A, Davies S, Furber S (2010) A general-purpose model translation system for a universal neural chip. In: Wong K, Mendis B, Bouzerdoum A, editors, Neural Information Processing. Theory and Algorithms, Springer Berlin/Heidelberg, volume 6443 of <italic>Lecture Notes in Computer Science</italic>. pp. 58–65.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Ehrlich1">
                <label>55</label>
                <mixed-citation publication-type="other">Ehrlich M, Wendt K, Zühl L, Schüffny R, Brüderle D, et al.. (2010) A software framework for mapping neural networks to a wafer-scale neuromorphic hardware system. In: Proceedings of the Artificial Neural Networks and Intelligent Information Processing Conference (ANNIIP) 2010. pp. 43–52.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Ehrlich2">
                <label>56</label>
                <mixed-citation publication-type="other">Ehrlich M, Mayr C, Eisenreich H, Henker S, Srowig A, et al.. (2007) Wafer-scale VLSI implementations of pulse coupled neural networks. In: Proceedings of the International Conference on Sensors, Circuits and Instrumentation Systems (SSD-07).</mixed-citation>
              </ref>
              <ref id="pone.0108590-Diesmann1">
                <label>57</label>
                <mixed-citation publication-type="book">Diesmann M, Gewaltig MO (2002) NEST: An environment for neural systems simulations. In: Plesser T, Macho V, editors, Forschung und wisschenschaftliches Rechnen, Beiträge zum Heinz-Billing-Preis 2001, Göttingen: Ges. für Wiss. Datenverarbeitung, volume 58 of <italic>GWDG-Bericht</italic>. pp. 43–70.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Hines2">
                <label>58</label>
                <mixed-citation publication-type="other">Hines M, Carnevale N (2003) The NEURON simulation environment., M.A. Arbib. pp. 769–773.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Lundqvist1">
                <label>59</label>
                <mixed-citation publication-type="journal"><name><surname>Lundqvist</surname><given-names>M</given-names></name>, <name><surname>Rehn</surname><given-names>M</given-names></name>, <name><surname>Djurfeldt</surname><given-names>M</given-names></name>, <name><surname>Lansner</surname><given-names>A</given-names></name> (<year>2006</year>) <article-title>Attractor dynamics in a modular network of neocortex</article-title>. <source>Network: Computation in Neural Systems 17</source>
<volume>3</volume>: <fpage>253</fpage>–<lpage>276</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Lundqvist2">
                <label>60</label>
                <mixed-citation publication-type="other">Lundqvist M, Compte A, Lansner A (2010) Bistable, irregular firing and population oscillations in a modular attractor memory network. PLoS Comput Biol 6.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Mountcastle1">
                <label>61</label>
                <mixed-citation publication-type="journal"><name><surname>Mountcastle</surname><given-names>VB</given-names></name> (<year>1997</year>) <article-title>The columnar organization of the neocortex</article-title>. <source>Brain</source>
<volume>120</volume>: <fpage>701</fpage>–<lpage>722</lpage>.<pub-id pub-id-type="pmid">9153131</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Buxhoeveden1">
                <label>62</label>
                <mixed-citation publication-type="journal"><name><surname>Buxhoeveden</surname><given-names>D</given-names></name>, <name><surname>Casanova</surname><given-names>M</given-names></name> (<year>2002</year>) <article-title>The minicolumn and evolution of the brain</article-title>. <source>Brain Behav Evol</source>
<volume>60</volume>: <fpage>125</fpage>–<lpage>151</lpage>.<pub-id pub-id-type="pmid">12417819</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Thomson1">
                <label>63</label>
                <mixed-citation publication-type="journal"><name><surname>Thomson</surname><given-names>AM</given-names></name>, <name><surname>West</surname><given-names>DC</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name>, <name><surname>Bannister</surname><given-names>AP</given-names></name> (<year>2002</year>) <article-title>Synaptic connections and small circuits involving excitatory and inhibitory neurons in layers 2–5 of adult rat and cat neocortex: triple intracellular recordings and biocytin labelling in vitro</article-title>. <source>Cerebral Cortex</source>
<volume>12</volume>: <fpage>936</fpage>–<lpage>953</lpage>.<pub-id pub-id-type="pmid">12183393</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Song1">
                <label>64</label>
                <mixed-citation publication-type="journal"><name><surname>Song</surname><given-names>S</given-names></name>, <name><surname>Sjstrm</surname><given-names>PJ</given-names></name>, <name><surname>Reigl</surname><given-names>M</given-names></name>, <name><surname>Nelson</surname><given-names>S</given-names></name>, <name><surname>Chklovskii</surname><given-names>DB</given-names></name> (<year>2005</year>) <article-title>Highly nonrandom features of synaptic connectivity in cortical circuits</article-title>. <source>PLOS Biology</source>
<volume>3</volume>: <fpage>517</fpage>–<lpage>519</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Kampa1">
                <label>65</label>
                <mixed-citation publication-type="journal"><name><surname>Kampa</surname><given-names>BM</given-names></name>, <name><surname>Letzkus</surname><given-names>JJ</given-names></name>, <name><surname>Stuart</surname><given-names>GJ</given-names></name> (<year>2006</year>) <article-title>Cortical feed-forward networks for binding different streams of sensory information</article-title>. <source>Nature Neuroscience</source>
<volume>9</volume>: <fpage>1472</fpage>–<lpage>1473</lpage>.<pub-id pub-id-type="pmid">17099707</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Perin1">
                <label>66</label>
                <mixed-citation publication-type="other">Perin R, Berger TK, Markram H (2011) A synaptic organizing principle for cortical neuronal groups. PNAS: 5419–5424.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Peters1">
                <label>67</label>
                <mixed-citation publication-type="journal"><name><surname>Peters</surname><given-names>A</given-names></name>, <name><surname>Sethares</surname><given-names>C</given-names></name> (<year>1997</year>) <article-title>The organization of double bouquet cells in monkey striate cortex</article-title>. <source>Journal of Neurocytology</source>
<volume>26</volume>: <fpage>779</fpage>–<lpage>797</lpage>.<pub-id pub-id-type="pmid">9482155</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Markram2">
                <label>68</label>
                <mixed-citation publication-type="journal"><name><surname>Markram</surname><given-names>H</given-names></name>, <name><surname>Toledo-Rodriguez</surname><given-names>M</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name>, <name><surname>Gupta</surname><given-names>A</given-names></name>, <name><surname>Silberberg</surname><given-names>G</given-names></name>, <etal>et al</etal> (<year>2004</year>) <article-title>Interneurons of the neocortical inhibitory system</article-title>. <source>Nat Rev Neurosci</source>
<volume>5</volume>: <fpage>793</fpage>–<lpage>807</lpage>.<pub-id pub-id-type="pmid">15378039</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Cossart1">
                <label>69</label>
                <mixed-citation publication-type="journal"><name><surname>Cossart</surname><given-names>R</given-names></name>, <name><surname>Aronov</surname><given-names>D</given-names></name>, <name><surname>Yuste</surname><given-names>R</given-names></name> (<year>2003</year>) <article-title>Attractor dynamics of network up states in the neocortex</article-title>. <source>Nature</source>
<volume>423</volume>: <fpage>238</fpage>–<lpage>283</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Kremkow1">
                <label>70</label>
                <mixed-citation publication-type="journal"><name><surname>Kremkow</surname><given-names>J</given-names></name>, <name><surname>Perrinet</surname><given-names>L</given-names></name>, <name><surname>Masson</surname><given-names>G</given-names></name>, <name><surname>Aertsen</surname><given-names>A</given-names></name> (<year>2010</year>) <article-title>Functional consequences of correlated excitatory and inhibitory conductances in cortical networks</article-title>. <source>J Comput Neurosci</source>
<volume>28</volume>: <fpage>579</fpage>–<lpage>594</lpage>.<pub-id pub-id-type="pmid">20490645</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Aertsen1">
                <label>71</label>
                <mixed-citation publication-type="journal"><name><surname>Aertsen</surname><given-names>A</given-names></name>, <name><surname>Diesmann</surname><given-names>M</given-names></name>, <name><surname>Gewaltig</surname><given-names>MO</given-names></name> (<year>1996</year>) <article-title>Propagation of synchronous spiking activity in feedforward neural networks</article-title>. <source>J Physiol Paris</source>
<volume>90</volume>: <fpage>243</fpage>–<lpage>247</lpage>.<pub-id pub-id-type="pmid">9116676</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Diesmann2">
                <label>72</label>
                <mixed-citation publication-type="journal"><name><surname>Diesmann</surname><given-names>M</given-names></name>, <name><surname>Gewaltig</surname><given-names>MO</given-names></name>, <name><surname>Aertsen</surname><given-names>A</given-names></name> (<year>1999</year>) <article-title>Stable propagation of synchronous spiking in cortical neural networks</article-title>. <source>Nature</source>
<volume>402</volume>: <fpage>529</fpage>–<lpage>533</lpage>.<pub-id pub-id-type="pmid">10591212</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Vogels1">
                <label>73</label>
                <mixed-citation publication-type="journal"><name><surname>Vogels</surname><given-names>TP</given-names></name>, <name><surname>Abbott</surname><given-names>LF</given-names></name> (<year>2005</year>) <article-title>Signal propagation and logic gating in networks of integrate-and-fire neurons</article-title>. <source>J Neurosci</source>
<volume>25</volume>: <fpage>10786</fpage>–<lpage>95</lpage>.<pub-id pub-id-type="pmid">16291952</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Abeles1">
                <label>74</label>
                <mixed-citation publication-type="journal"><name><surname>Abeles</surname><given-names>M</given-names></name>, <name><surname>Hayon</surname><given-names>G</given-names></name>, <name><surname>Lehmann</surname><given-names>D</given-names></name> (<year>2004</year>) <article-title>Modeling compositionality by dynamic binding of synfire chains</article-title>. <source>Journal of computational neuroscience</source>
<volume>17</volume>: <fpage>179</fpage>–<lpage>201</lpage>.<pub-id pub-id-type="pmid">15306739</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Schrader1">
                <label>75</label>
                <mixed-citation publication-type="other">Schrader S, Diesmann M, Morrison A (2010) A compositionality machine realized by a hierarchic architecture of synfire chains. Frontiers in Computational Neuroscience 4.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Kremkow2">
                <label>76</label>
                <mixed-citation publication-type="journal"><name><surname>Kremkow</surname><given-names>J</given-names></name>, <name><surname>Aertsen</surname><given-names>A</given-names></name>, <name><surname>Kumar</surname><given-names>A</given-names></name> (<year>2010</year>) <article-title>Gating of signal propagation in spiking neural networks by balanced and correlated excitation and inhibition</article-title>. <source>The Journal of neuroscience</source>
<volume>30</volume>: <fpage>15760</fpage>–<lpage>15768</lpage>.<pub-id pub-id-type="pmid">21106815</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Diesmann3">
                <label>77</label>
                <mixed-citation publication-type="journal"><name><surname>Diesmann</surname><given-names>M</given-names></name>, <name><surname>Gewaltig</surname><given-names>MO</given-names></name>, <name><surname>Rotter</surname><given-names>S</given-names></name>, <name><surname>Aertsen</surname><given-names>A</given-names></name> (<year>2001</year>) <article-title>State space analysis of synchronous spiking in cortical neural networks</article-title>. <source>Neurocomputing</source>
<volume>38</volume>: <fpage>565</fpage>–<lpage>571</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Diesmann4">
                <label>78</label>
                <mixed-citation publication-type="other">Diesmann M (2002) Conditions for Stable Propagation of Synchronous Spiking in Cortical Neural Networks: Single Neuron Dynamics and Network Properties. Ph.D. thesis, Ruhr-Universität Bochum.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Kumar1">
                <label>79</label>
                <mixed-citation publication-type="journal"><name><surname>Kumar</surname><given-names>A</given-names></name>, <name><surname>Schrader</surname><given-names>S</given-names></name>, <name><surname>Aertsen</surname><given-names>A</given-names></name>, <name><surname>Rotter</surname><given-names>S</given-names></name> (<year>2008</year>) <article-title>The high-conductance state of cortical networks</article-title>. <source>Neural Computation</source>
<volume>20</volume>: <fpage>1</fpage>–<lpage>43</lpage>.<pub-id pub-id-type="pmid">18044999</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-ElBoustani1">
                <label>80</label>
                <mixed-citation publication-type="journal"><name><surname>El Boustani</surname><given-names>S</given-names></name>, <name><surname>Destexhe</surname><given-names>A</given-names></name> (<year>2009</year>) <article-title>A master equation formalism for macroscopic modeling of asynchronous irregular activity states</article-title>. <source>Neural Computation</source>
<volume>21</volume>: <fpage>46</fpage>–<lpage>100</lpage>.<pub-id pub-id-type="pmid">19210171</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Destexhe1">
                <label>81</label>
                <mixed-citation publication-type="journal"><name><surname>Destexhe</surname><given-names>A</given-names></name>, <name><surname>Pare</surname><given-names>D</given-names></name> (<year>1999</year>) <article-title>Impact of Network Activity on the Integrative Properties of Neocortical Pyramidal Neurons In Vivo</article-title>. <source>J Neurophysiol</source>
<volume>81</volume>: <fpage>1531</fpage>–<lpage>1547</lpage>.<pub-id pub-id-type="pmid">10200189</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Brunel1">
                <label>82</label>
                <mixed-citation publication-type="journal"><name><surname>Brunel</surname><given-names>N</given-names></name> (<year>2000</year>) <article-title>Dynamics of sparsely connected networks of excitatory and inhibitory spiking neurons</article-title>. <source>Journal of Computational Neuroscience</source>
<volume>8</volume>: <fpage>183</fpage>–<lpage>208</lpage>.<pub-id pub-id-type="pmid">10809012</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Destexhe2">
                <label>83</label>
                <mixed-citation publication-type="journal"><name><surname>Destexhe</surname><given-names>A</given-names></name>, <name><surname>Rudolph</surname><given-names>M</given-names></name>, <name><surname>Pare</surname><given-names>D</given-names></name> (<year>2003</year>) <article-title>The high-conductance state of neocortical neurons in vivo</article-title>. <source>Nature Reviews Neuroscience</source>
<volume>4</volume>: <fpage>739</fpage>–<lpage>751</lpage>.<pub-id pub-id-type="pmid">12951566</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Destexhe3">
                <label>84</label>
                <mixed-citation publication-type="journal"><name><surname>Destexhe</surname><given-names>A</given-names></name>, <name><surname>Contreras</surname><given-names>D</given-names></name> (<year>2006</year>) <article-title>Neuronal computations with stochastic network states</article-title>. <source>Science</source>
<volume>314</volume>: <fpage>85</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">17023650</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Amit1">
                <label>85</label>
                <mixed-citation publication-type="journal"><name><surname>Amit</surname><given-names>DJ</given-names></name>, <name><surname>Brunel</surname><given-names>N</given-names></name> (<year>1997</year>) <article-title>Model of global spontaneous activity and local structured activity during delay periods in the cerebral cortex</article-title>. <source>Cereb Cortex</source>
<volume>7</volume>: <fpage>237</fpage>–<lpage>52</lpage>.<pub-id pub-id-type="pmid">9143444</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Giulioni1">
                <label>86</label>
                <mixed-citation publication-type="other">Giulioni M, Camilleri P, Mattia M, Dante V, Braun J, et al.. (2012) Robust working memory in an asynchronously spiking neural network realized in neuromorphic vlsi. Frontiers in Neuroscience 5.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Destexhe4">
                <label>87</label>
                <mixed-citation publication-type="journal"><name><surname>Destexhe</surname><given-names>A</given-names></name> (<year>2009</year>) <article-title>Self-sustained asynchronous irregular states and Up/Down states in thalamic, cortical and thalamocortical networks of nonlinear integrate-and-fire neurons</article-title>. <source>Journal of Computational Neuroscience</source>
<volume>3</volume>: <fpage>493</fpage>–<lpage>506</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Muller1">
                <label>88</label>
                <mixed-citation publication-type="journal"><name><surname>Muller</surname><given-names>L</given-names></name>, <name><surname>Destexhe</surname><given-names>A</given-names></name> (<year>2012</year>) <article-title>Propagating waves in thalamus, cortex and the thalamocortical system: Experiments and models</article-title>. <source>Journal of Physiology-Paris</source>
<volume>106</volume>: <fpage>222</fpage>–<lpage>238</lpage>.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Connors1">
                <label>89</label>
                <mixed-citation publication-type="journal"><name><surname>Connors</surname><given-names>B</given-names></name>, <name><surname>Gutnick</surname><given-names>M</given-names></name> (<year>1990</year>) <article-title>Intrinsic firing patterns of diverse neocortical neurons</article-title>. <source>Trends Neurosci</source>
<volume>13</volume>: <fpage>99</fpage>–<lpage>104</lpage>.<pub-id pub-id-type="pmid">1691879</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Hellwig1">
                <label>90</label>
                <mixed-citation publication-type="journal"><name><surname>Hellwig</surname><given-names>B</given-names></name> (<year>2000</year>) <article-title>A quantitative analysis of the local connectivity between pyramidal neurons in layers 2/3 of the rat visual cortex</article-title>. <source>Biological Cybernetics</source>
<volume>82</volume>: <fpage>111</fpage>–<lpage>121</lpage>.<pub-id pub-id-type="pmid">10664098</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Hirsch1">
                <label>91</label>
                <mixed-citation publication-type="journal"><name><surname>Hirsch</surname><given-names>J</given-names></name>, <name><surname>Gilbert</surname><given-names>C</given-names></name> (<year>1991</year>) <article-title>Synaptic physiology of horizontal connections in the cat's visual cortex</article-title>. <source>The Journal of Neuroscience</source>
<volume>11</volume>: <fpage>1800</fpage>–<lpage>1809</lpage>.<pub-id pub-id-type="pmid">1675266</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Murakoshi1">
                <label>92</label>
                <mixed-citation publication-type="journal"><name><surname>Murakoshi</surname><given-names>T</given-names></name>, <name><surname>Guo</surname><given-names>JZ</given-names></name>, <name><surname>Ichinose</surname><given-names>T</given-names></name> (<year>1993</year>) <article-title>Electrophysiological identification of horizontal synaptic connections in rat visual cortex in vitro</article-title>. <source>Neuroscience Letters</source>
<volume>163</volume>: <fpage>211</fpage>–<lpage>214</lpage>.<pub-id pub-id-type="pmid">8309635</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Bringuier1">
                <label>93</label>
                <mixed-citation publication-type="journal"><name><surname>Bringuier</surname><given-names>V</given-names></name>, <name><surname>Chavane</surname><given-names>F</given-names></name>, <name><surname>Glaeser</surname><given-names>L</given-names></name>, <name><surname>Frgnac</surname><given-names>Y</given-names></name> (<year>1999</year>) <article-title>Horizontal propagation of visual activity in the synaptic integration field of area 17 neurons</article-title>. <source>Science</source>
<volume>283</volume>: <fpage>695</fpage>–<lpage>699</lpage>.<pub-id pub-id-type="pmid">9924031</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-GonzlezBurgos1">
                <label>94</label>
                <mixed-citation publication-type="journal"><name><surname>Gonzlez-Burgos</surname><given-names>G</given-names></name>, <name><surname>Barrionuevo</surname><given-names>G</given-names></name>, <name><surname>Lewis</surname><given-names>DA</given-names></name> (<year>2000</year>) <article-title>Horizontal synaptic connections in monkey prefrontal cortex: An in vitro electrophysiological study</article-title>. <source>Cerebral Cortex</source>
<volume>10</volume>: <fpage>82</fpage>–<lpage>92</lpage>.<pub-id pub-id-type="pmid">10639398</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Telfeian1">
                <label>95</label>
                <mixed-citation publication-type="journal"><name><surname>Telfeian</surname><given-names>AE</given-names></name>, <name><surname>Connors</surname><given-names>BW</given-names></name> (<year>2003</year>) <article-title>Widely integrative properties of layer 5 pyramidal cells support a role for processing of extralaminar synaptic inputs in rat neocortex</article-title>. <source>Neuroscience Letters</source>
<volume>343</volume>: <fpage>121</fpage>–<lpage>124</lpage>.<pub-id pub-id-type="pmid">12759179</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Roxin1">
                <label>96</label>
                <mixed-citation publication-type="journal"><name><surname>Roxin</surname><given-names>A</given-names></name>, <name><surname>Brunel</surname><given-names>N</given-names></name>, <name><surname>Hansel</surname><given-names>D</given-names></name> (<year>2005</year>) <article-title>Role of delays in shaping spatiotemporal dynamics of neuronal activity in large networks</article-title>. <source>Phys Rev Lett</source>
<volume>94</volume>: <fpage>238103</fpage>.<pub-id pub-id-type="pmid">16090506</pub-id></mixed-citation>
              </ref>
              <ref id="pone.0108590-Rieke1">
                <label>97</label>
                <mixed-citation publication-type="other">Rieke F, Warland D, de Ruyter van Steveninck R, Bialek W (1997) Spikes - Exploring the neural code. MIT Press, Cambridge, MA.</mixed-citation>
              </ref>
              <ref id="pone.0108590-Pfeil2">
                <label>98</label>
                <mixed-citation publication-type="journal"><name><surname>Pfeil</surname><given-names>T</given-names></name>, <name><surname>Grübl</surname><given-names>A</given-names></name>, <name><surname>Jeltsch</surname><given-names>S</given-names></name>, <name><surname>Müller</surname><given-names>E</given-names></name>, <name><surname>Müller</surname><given-names>P</given-names></name>, <etal>et al</etal> (<year>2013</year>) <article-title>Six networks on a universal neuromorphic computing substrate</article-title>. <source>Frontiers in Neuroscience</source>
<volume>7</volume>: <fpage>11</fpage>.<pub-id pub-id-type="pmid">23423583</pub-id></mixed-citation>
              </ref>
            </ref-list>
          </back>
        </article>
      </metadata>
    </record>
  </GetRecord>
</OAI-PMH>
